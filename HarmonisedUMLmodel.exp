SCHEMA IFC_4_2_SCHEMA_13_11_2019_;

TYPE IfcAbsorbedDoseMeasure = REAL;
END_TYPE;

TYPE IfcAccelerationMeasure = REAL;
END_TYPE;

TYPE IfcAmountOfSubstanceMeasure = REAL;
END_TYPE;

TYPE IfcAngularVelocityMeasure = REAL;
END_TYPE;

TYPE IfcArcIndex = LIST [3:3] OF IfcPositiveInteger;
END_TYPE;

TYPE IfcAreaDensityMeasure = REAL;
END_TYPE;

TYPE IfcAreaMeasure = REAL;
END_TYPE;

TYPE IfcBinary = BINARY;
END_TYPE;

TYPE IfcBoolean = BOOLEAN;
END_TYPE;

TYPE IfcBoxAlignment = IfcLabel;
 WHERE
	WR1 : SELF IN ['top-left', 'top-middle', 'top-right', 'middle-left', 'center', 'middle-right', 'bottom-left', 'bottom-middle', 'bottom-right'];
END_TYPE;

TYPE IfcCardinalPointReference = INTEGER;
 WHERE
	GreaterThanZero : SELF > 0;
END_TYPE;

TYPE IfcComplexNumber = ARRAY [1:2] OF REAL;
END_TYPE;

TYPE IfcCompoundPlaneAngleMeasure = LIST [3:4] OF INTEGER;
 WHERE
	MinutesInRange : ABS(SELF[2]) < 60;
	SecondsInRange : ABS(SELF[3]) < 60;
	MicrosecondsInRange : (SIZEOF(SELF) = 3) OR (ABS(SELF[4]) < 1000000);
	ConsistentSign : ((SELF[1] >= 0) AND (SELF[2] >= 0) AND (SELF[3] >= 0) AND ((SIZEOF(SELF) = 3) OR (SELF[4] >= 0)))
OR
((SELF[1] <= 0) AND (SELF[2] <= 0) AND (SELF[3] <= 0) AND ((SIZEOF(SELF) = 3) OR (SELF[4] <= 0)));
END_TYPE;

TYPE IfcContactLineAt = IfcAbsAt;
END_TYPE;

TYPE IfcContactLineFromTo = IfcAbsFromTo;
END_TYPE;

TYPE IfcContextDependentMeasure = REAL;
END_TYPE;

TYPE IfcCountMeasure = NUMBER;
END_TYPE;

TYPE IfcCurvatureMeasure = REAL;
END_TYPE;

TYPE IfcDate = STRING;
END_TYPE;

TYPE IfcDateTime = STRING;
END_TYPE;

TYPE IfcDayInMonthNumber = INTEGER;
 WHERE
	ValidRange : {1 <= SELF <= 31};
END_TYPE;

TYPE IfcDayInWeekNumber = INTEGER;
 WHERE
	ValidRange : {1 <= SELF <= 7};
END_TYPE;

TYPE IfcDescriptiveMeasure = STRING;
END_TYPE;

TYPE IfcDimensionCount = INTEGER;
 WHERE
	WR1 : { 0 < SELF <= 3 };
END_TYPE;

TYPE IfcDoseEquivalentMeasure = REAL;
END_TYPE;

TYPE IfcDuration = STRING;
END_TYPE;

TYPE IfcDynamicViscosityMeasure = REAL;
END_TYPE;

TYPE IfcElectricCapacitanceMeasure = REAL;
END_TYPE;

TYPE IfcElectricChargeMeasure = REAL;
END_TYPE;

TYPE IfcElectricConductanceMeasure = REAL;
END_TYPE;

TYPE IfcElectricCurrentMeasure = REAL;
END_TYPE;

TYPE IfcElectricResistanceMeasure = REAL;
END_TYPE;

TYPE IfcElectricVoltageMeasure = REAL;
END_TYPE;

TYPE IfcEnergyMeasure = REAL;
END_TYPE;

TYPE IfcFontStyle = STRING;
 WHERE
	WR1 : SELF IN ['normal','italic','oblique'];
END_TYPE;

TYPE IfcFontVariant = STRING;
 WHERE
	WR1 : SELF IN ['normal','small-caps'];
END_TYPE;

TYPE IfcFontWeight = STRING;
 WHERE
	WR1 : SELF IN ['normal','small-caps','100','200','300','400','500','600','700','800','900'];
END_TYPE;

TYPE IfcForceMeasure = REAL;
END_TYPE;

TYPE IfcFrequencyMeasure = REAL;
END_TYPE;

TYPE IfcGloballyUniqueId = STRING(22) FIXED;
END_TYPE;

TYPE IfcHeatFluxDensityMeasure = REAL;
END_TYPE;

TYPE IfcHeatingValueMeasure = REAL;
 WHERE
	WR1 : SELF > 0.;
END_TYPE;

TYPE IfcIdentifier = STRING(255);
END_TYPE;

TYPE IfcIlluminanceMeasure = REAL;
END_TYPE;

TYPE IfcInductanceMeasure = REAL;
END_TYPE;

TYPE IfcInteger = INTEGER;
END_TYPE;

TYPE IfcIntegerCountRateMeasure = INTEGER;
END_TYPE;

TYPE IfcIonConcentrationMeasure = REAL;
END_TYPE;

TYPE IfcIsothermalMoistureCapacityMeasure = REAL;
END_TYPE;

TYPE IfcKinematicViscosityMeasure = REAL;
END_TYPE;

TYPE IfcLabel = STRING(255);
END_TYPE;

TYPE IfcLanguageId = IfcIdentifier;
END_TYPE;

TYPE IfcLengthMeasure = REAL;
END_TYPE;

TYPE IfcLineAt = IfcAbsAt;
END_TYPE;

TYPE IfcLineFromTo = IfcAbsFromTo;
END_TYPE;

TYPE IfcLineIndex = LIST [2:?] OF IfcPositiveInteger;
END_TYPE;

TYPE IfcLinearForceMeasure = REAL;
END_TYPE;

TYPE IfcLinearMomentMeasure = REAL;
END_TYPE;

TYPE IfcLinearStiffnessMeasure = REAL;
END_TYPE;

TYPE IfcLinearVelocityMeasure = REAL;
END_TYPE;

TYPE IfcLogical = LOGICAL;
END_TYPE;

TYPE IfcLuminousFluxMeasure = REAL;
END_TYPE;

TYPE IfcLuminousIntensityDistributionMeasure = REAL;
END_TYPE;

TYPE IfcLuminousIntensityMeasure = REAL;
END_TYPE;

TYPE IfcMagneticFluxDensityMeasure = REAL;
END_TYPE;

TYPE IfcMagneticFluxMeasure = REAL;
END_TYPE;

TYPE IfcMassDensityMeasure = REAL;
END_TYPE;

TYPE IfcMassFlowRateMeasure = REAL;
END_TYPE;

TYPE IfcMassMeasure = REAL;
END_TYPE;

TYPE IfcMassPerLengthMeasure = REAL;
END_TYPE;

TYPE IfcModulusOfElasticityMeasure = REAL;
END_TYPE;

TYPE IfcModulusOfLinearSubgradeReactionMeasure = REAL;
END_TYPE;

TYPE IfcModulusOfRotationalSubgradeReactionMeasure = REAL;
END_TYPE;

TYPE IfcModulusOfSubgradeReactionMeasure = REAL;
END_TYPE;

TYPE IfcMoistureDiffusivityMeasure = REAL;
END_TYPE;

TYPE IfcMolecularWeightMeasure = REAL;
END_TYPE;

TYPE IfcMomentOfInertiaMeasure = REAL;
END_TYPE;

TYPE IfcMonetaryMeasure = REAL;
END_TYPE;

TYPE IfcMonthInYearNumber = INTEGER;
 WHERE
	ValidRange : {1 <= SELF <= 12};
END_TYPE;

TYPE IfcNonNegativeLengthMeasure = IfcLengthMeasure;
 WHERE
	NotNegative : SELF >= 0.;
END_TYPE;

TYPE IfcNormalisedRatioMeasure = IfcRatioMeasure;
 WHERE
	WR1 : {0.0 <= SELF <= 1.0};
END_TYPE;

TYPE IfcNumericMeasure = NUMBER;
END_TYPE;

TYPE IfcPHMeasure = REAL;
 WHERE
	WR21 : {0.0 <= SELF <= 14.0};
END_TYPE;

TYPE IfcParameterValue = REAL;
END_TYPE;

TYPE IfcPlanarForceMeasure = REAL;
END_TYPE;

TYPE IfcPlaneAngleMeasure = REAL;
END_TYPE;

TYPE IfcPositiveInteger = IfcInteger;
 WHERE
	WR1 : SELF > 0;
END_TYPE;

TYPE IfcPositiveLengthMeasure = IfcLengthMeasure;
 WHERE
	WR1 : SELF > 0.;
END_TYPE;

TYPE IfcPositivePlaneAngleMeasure = IfcPlaneAngleMeasure;
 WHERE
	WR1 : SELF > 0.;
END_TYPE;

TYPE IfcPositiveRatioMeasure = IfcRatioMeasure;
 WHERE
	WR1 : SELF > 0.;
END_TYPE;

TYPE IfcPowerMeasure = REAL;
END_TYPE;

TYPE IfcPresentableText = STRING;
END_TYPE;

TYPE IfcPressureMeasure = REAL;
END_TYPE;

TYPE IfcPropertySetDefinitionSet = SET [1:?] OF IfcPropertySetDefinition;
END_TYPE;

TYPE IfcRadioActivityMeasure = REAL;
END_TYPE;

TYPE IfcRatioMeasure = REAL;
END_TYPE;

TYPE IfcReal = REAL;
END_TYPE;

TYPE IfcRotationalFrequencyMeasure = REAL;
END_TYPE;

TYPE IfcRotationalMassMeasure = REAL;
END_TYPE;

TYPE IfcRotationalStiffnessMeasure = REAL;
END_TYPE;

TYPE IfcSectionModulusMeasure = REAL;
END_TYPE;

TYPE IfcSectionalAreaIntegralMeasure = REAL;
END_TYPE;

TYPE IfcShearModulusMeasure = REAL;
END_TYPE;

TYPE IfcSolidAngleMeasure = REAL;
END_TYPE;

TYPE IfcSoundPowerLevelMeasure = REAL;
END_TYPE;

TYPE IfcSoundPowerMeasure = REAL;
END_TYPE;

TYPE IfcSoundPressureLevelMeasure = REAL;
END_TYPE;

TYPE IfcSoundPressureMeasure = REAL;
END_TYPE;

TYPE IfcSpecificHeatCapacityMeasure = REAL;
END_TYPE;

TYPE IfcSpecularExponent = REAL;
END_TYPE;

TYPE IfcSpecularRoughness = REAL;
 WHERE
	WR1 : {0.0 <= SELF <= 1.0};
END_TYPE;

TYPE IfcTemperatureGradientMeasure = REAL;
END_TYPE;

TYPE IfcTemperatureRateOfChangeMeasure = REAL;
END_TYPE;

TYPE IfcText = STRING;
END_TYPE;

TYPE IfcTextAlignment = STRING;
 WHERE
	WR1 : SELF IN ['left', 'right', 'center', 'justify'];
END_TYPE;

TYPE IfcTextDecoration = STRING;
 WHERE
	WR1 : SELF IN ['none', 'underline', 'overline', 'line-through', 'blink'];
END_TYPE;

TYPE IfcTextFontName = STRING;
END_TYPE;

TYPE IfcTextTransformation = STRING;
 WHERE
	WR1 : SELF IN ['capitalize', 'uppercase', 'lowercase', 'none'];
END_TYPE;

TYPE IfcThermalAdmittanceMeasure = REAL;
END_TYPE;

TYPE IfcThermalConductivityMeasure = REAL;
END_TYPE;

TYPE IfcThermalExpansionCoefficientMeasure = REAL;
END_TYPE;

TYPE IfcThermalResistanceMeasure = REAL;
END_TYPE;

TYPE IfcThermalTransmittanceMeasure = REAL;
END_TYPE;

TYPE IfcThermodynamicTemperatureMeasure = REAL;
END_TYPE;

TYPE IfcTime = STRING;
END_TYPE;

TYPE IfcTimeMeasure = REAL;
END_TYPE;

TYPE IfcTimeStamp = INTEGER;
END_TYPE;

TYPE IfcTorqueMeasure = REAL;
END_TYPE;

TYPE IfcTrackAt = IfcAbsAt;
END_TYPE;

TYPE IfcTrackFromTo = IfcAbsFromTo;
END_TYPE;

TYPE IfcURIReference = STRING;
END_TYPE;

TYPE IfcVaporPermeabilityMeasure = REAL;
END_TYPE;

TYPE IfcVolumeMeasure = REAL;
END_TYPE;

TYPE IfcVolumetricFlowRateMeasure = REAL;
END_TYPE;

TYPE IfcWarpingConstantMeasure = REAL;
END_TYPE;

TYPE IfcWarpingMomentMeasure = REAL;
END_TYPE;

TYPE IfcActionRequestTypeEnum = ENUMERATION OF
	(EMAIL
	,FAX
	,PHONE
	,POST
	,VERBAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcActionSourceTypeEnum = ENUMERATION OF
	(DEAD_LOAD_G
	,COMPLETION_G1
	,LIVE_LOAD_Q
	,SNOW_S
	,WIND_W
	,PRESTRESSING_P
	,SETTLEMENT_U
	,TEMPERATURE_T
	,EARTHQUAKE_E
	,FIRE
	,IMPULSE
	,IMPACT
	,TRANSPORT
	,ERECTION
	,PROPPING
	,SYSTEM_IMPERFECTION
	,SHRINKAGE
	,CREEP
	,LACK_OF_FIT
	,BUOYANCY
	,ICE
	,CURRENT
	,WAVE
	,RAIN
	,BRAKES
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcActionTypeEnum = ENUMERATION OF
	(PERMANENT_G
	,VARIABLE_Q
	,EXTRAORDINARY_A
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcActuatorTypeEnum = ENUMERATION OF
	(ELECTRICACTUATOR
	,HANDOPERATEDACTUATOR
	,HYDRAULICACTUATOR
	,PNEUMATICACTUATOR
	,THERMOSTATICACTUATOR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAddressTypeEnum = ENUMERATION OF
	(OFFICE
	,SITE
	,HOME
	,DISTRIBUTIONPOINT
	,USERDEFINED);
END_TYPE;

TYPE IfcAirTerminalBoxTypeEnum = ENUMERATION OF
	(CONSTANTFLOW
	,VARIABLEFLOWPRESSUREDEPENDANT
	,VARIABLEFLOWPRESSUREINDEPENDANT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAirTerminalTypeEnum = ENUMERATION OF
	(DIFFUSER
	,GRILLE
	,LOUVRE
	,REGISTER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAirToAirHeatRecoveryTypeEnum = ENUMERATION OF
	(FIXEDPLATECOUNTERFLOWEXCHANGER
	,FIXEDPLATECROSSFLOWEXCHANGER
	,FIXEDPLATEPARALLELFLOWEXCHANGER
	,HEATPIPE
	,ROTARYWHEEL
	,RUNAROUNDCOILLOOP
	,THERMOSIPHONCOILTYPEHEATEXCHANGERS
	,THERMOSIPHONSEALEDTUBEHEATEXCHANGERS
	,TWINTOWERENTHALPYRECOVERYLOOPS
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAlarmTypeEnum = ENUMERATION OF
	(BELL
	,BREAKGLASSBUTTON
	,LIGHT
	,MANUALPULLBOX
	,SIREN
	,WHISTLE
	,RAILWAYCROCODILE
	,RAILWAYDETONATOR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAlignmentTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAnalysisModelTypeEnum = ENUMERATION OF
	(IN_PLANE_LOADING_2D
	,LOADING_3D
	,OUT_PLANE_LOADING_2D
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAnalysisTheoryTypeEnum = ENUMERATION OF
	(FIRST_ORDER_THEORY
	,SECOND_ORDER_THEORY
	,THIRD_ORDER_THEORY
	,FULL_NONLINEAR_THEORY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcAnnotationTypeEnum = ENUMERATION OF
	(NON_PHYSICAL_SIGNAL
	,USERDEFINED
	,ASSUMEDPOINT
	,ASSUMEDLINE
	,ASSUMEDAREA
	,ASBUILTPOINT
	,ASBUILTLINE
	,ASBUILTAREA
	,SUPERELEVATIONEVENT
	,WIDTHEVENT
	,NOTDEFINED);
END_TYPE;

TYPE IfcArithmeticOperatorEnum = ENUMERATION OF
	(ADD
	,DIVIDE
	,MULTIPLY
	,SUBTRACT);
END_TYPE;

TYPE IfcAssemblyPlaceEnum = ENUMERATION OF
	(SITE
	,FACTORY
	,NOTDEFINED);
END_TYPE;

TYPE IfcAudioVisualApplianceTypeEnum = ENUMERATION OF
	(AMPLIFIER
	,CAMERA
	,DISPLAY
	,MICROPHONE
	,PLAYER
	,PROJECTOR
	,RECEIVER
	,SPEAKER
	,SWITCHER
	,TELEPHONE
	,TUNER
	,RAILWAY_COMMUNICATION_TERMINAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBSplineCurveForm = ENUMERATION OF
	(POLYLINE_FORM
	,CIRCULAR_ARC
	,ELLIPTIC_ARC
	,PARABOLIC_ARC
	,HYPERBOLIC_ARC
	,UNSPECIFIED);
END_TYPE;

TYPE IfcBSplineSurfaceForm = ENUMERATION OF
	(PLANE_SURF
	,CYLINDRICAL_SURF
	,CONICAL_SURF
	,SPHERICAL_SURF
	,TOROIDAL_SURF
	,SURF_OF_REVOLUTION
	,RULED_SURF
	,GENERALISED_CONE
	,QUADRIC_SURF
	,SURF_OF_LINEAR_EXTRUSION
	,UNSPECIFIED);
END_TYPE;

TYPE IfcBeamTypeEnum = ENUMERATION OF
	(BEAM
	,CORNICE
	,DIAPHRAGM
	,EDGEBEAM
	,GIRDER_SEGMENT
	,HATSTONE
	,HOLLOWCORE
	,JOIST
	,LINTEL
	,PIERCAP
	,SPANDREL
	,T_BEAM
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBearingTypeDisplacementEnum = ENUMERATION OF
	(FIXED_MOVEMENT
	,GUIDED_LONGITUDINAL
	,GUIDED_TRANSVERSAL
	,FREE_MOVEMENT
	,NOTDEFINED);
END_TYPE;

TYPE IfcBearingTypeEnum = ENUMERATION OF
	(CYLINDRICAL
	,DISK
	,ELASTOMERIC
	,GUIDE
	,POT
	,ROCKER
	,ROLLER
	,SPHERICAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBenchmarkEnum = ENUMERATION OF
	(GREATERTHAN
	,GREATERTHANOREQUALTO
	,LESSTHAN
	,LESSTHANOREQUALTO
	,EQUALTO
	,NOTEQUALTO
	,INCLUDES
	,NOTINCLUDES
	,INCLUDEDIN
	,NOTINCLUDEDIN);
END_TYPE;

TYPE IfcBoilerTypeEnum = ENUMERATION OF
	(STEAM
	,WATER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBooleanOperator = ENUMERATION OF
	(UNION
	,INTERSECTION
	,DIFFERENCE);
END_TYPE;

TYPE IfcBridgePartTypeEnum = ENUMERATION OF
	(ABUTMENT
	,DECK
	,DECK_SEGMENT
	,FOUNDATION
	,PIER
	,PIER_SEGMENT
	,PYLON
	,SUBSTRUCTURE
	,SUPERSTRUCTURE
	,SURFACESTRUCTURE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBridgeTypeEnum = ENUMERATION OF
	(ARCHED
	,CABLE_STAYED
	,CANTILEVER
	,CULVERT
	,FRAMEWORK
	,GIRDER
	,SUSPENSION
	,TRUSS
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBuildingElementPartTypeEnum = ENUMERATION OF
	(APRON
	,INSULATION
	,PRECASTPANEL
	,ARMOURUNIT
	,SAFETYCAGE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBuildingElementProxyTypeEnum = ENUMERATION OF
	(COMPLEX
	,ELEMENT
	,PARTIAL
	,PROVISIONFORSPACE
	,PROVISIONFORVOID
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBuildingSystemTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBuiltSystemTypeEnum = ENUMERATION OF
	(FENESTRATION
	,FOUNDATION
	,LOADBEARING
	,OUTERSHELL
	,PRESTRESSING
	,REINFORCING
	,SHADING
	,TRANSPORT
	,EROSIONPREVENTION
	,MOORING
	,MOORINGSYSTEM
	,TRACKCIRCUIT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcBurnerTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCableCarrierFittingTypeEnum = ENUMERATION OF
	(BEND
	,CROSS
	,REDUCER
	,TEE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCableCarrierSegmentTypeEnum = ENUMERATION OF
	(CABLELADDERSEGMENT
	,CABLETRAYSEGMENT
	,CABLETRUNKINGSEGMENT
	,CONDUITSEGMENT
	,CABLEBRACKET
	,CATENARYWIRE
	,DROPPER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCableFittingTypeEnum = ENUMERATION OF
	(CONNECTOR
	,ENTRY
	,EXIT
	,JUNCTION
	,TRANSITION
	,FANOUT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCableSegmentTypeEnum = ENUMERATION OF
	(BUSBARSEGMENT
	,CABLESEGMENT
	,CONDUCTORSEGMENT
	,CORESEGMENT
	,CONTACTWIRESEGMENT
	,FIBERSEGMENT
	,FIBERTUBE
	,OPTICALCABLESEGMENT
	,STITCHWIRE
	,WIREPAIRSEGMENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCaissonFoundationTypeEnum = ENUMERATION OF
	(CAISSON
	,WELL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcChangeActionEnum = ENUMERATION OF
	(NOCHANGE
	,MODIFIED
	,ADDED
	,DELETED
	,NOTDEFINED);
END_TYPE;

TYPE IfcChillerTypeEnum = ENUMERATION OF
	(AIRCOOLED
	,HEATRECOVERY
	,WATERCOOLED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcChimneyTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCoilTypeEnum = ENUMERATION OF
	(DXCOOLINGCOIL
	,ELECTRICHEATINGCOIL
	,GASHEATINGCOIL
	,HYDRONICCOIL
	,STEAMHEATINGCOIL
	,WATERCOOLINGCOIL
	,WATERHEATINGCOIL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcColumnTypeEnum = ENUMERATION OF
	(COLUMN
	,PIERSTEM
	,PIERSTEM_SEGMENT
	,PILASTER
	,STANDCOLUMN
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCommunicationsApplianceTypeEnum = ENUMERATION OF
	(ANTENNA
	,COMPUTER
	,FAX
	,GATEWAY
	,MODEM
	,NETWORKAPPLIANCE
	,NETWORKBRIDGE
	,NETWORKHUB
	,PRINTER
	,REPEATER
	,ROUTER
	,SCANNER
	,AUTOMATON
	,INTELLIGENT_PERIPHERAL
	,IP_NETWORK_EQUIPMENT
	,OPTICAL_NETWORK_UNIT
	,TELECOMMAND
	,TELEPHONYEXCHANGE
	,TRANSITIONCOMPONENT
	,TRANSPONDER
	,TRANSPORTEQUIPMENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcComplexPropertyTemplateTypeEnum = ENUMERATION OF
	(Q_COMPLEX
	,P_COMPLEX);
END_TYPE;

TYPE IfcCompressorTypeEnum = ENUMERATION OF
	(BOOSTER
	,DYNAMIC
	,HERMETIC
	,OPENTYPE
	,RECIPROCATING
	,ROLLINGPISTON
	,ROTARY
	,ROTARYVANE
	,SCROLL
	,SEMIHERMETIC
	,SINGLESCREW
	,SINGLESTAGE
	,TROCHOIDAL
	,TWINSCREW
	,WELDEDSHELLHERMETIC
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCondenserTypeEnum = ENUMERATION OF
	(AIRCOOLED
	,EVAPORATIVECOOLED
	,WATERCOOLED
	,WATERCOOLEDBRAZEDPLATE
	,WATERCOOLEDSHELLCOIL
	,WATERCOOLEDSHELLTUBE
	,WATERCOOLEDTUBEINTUBE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcConnectionTypeEnum = ENUMERATION OF
	(ATPATH
	,ATSTART
	,ATEND
	,NOTDEFINED);
END_TYPE;

TYPE IfcConstraintEnum = ENUMERATION OF
	(HARD
	,SOFT
	,ADVISORY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcConstructionEquipmentResourceTypeEnum = ENUMERATION OF
	(DEMOLISHING
	,EARTHMOVING
	,ERECTING
	,HEATING
	,LIGHTING
	,PAVING
	,PUMPING
	,TRANSPORTING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcConstructionMaterialResourceTypeEnum = ENUMERATION OF
	(AGGREGATES
	,CONCRETE
	,DRYWALL
	,FUEL
	,GYPSUM
	,MASONRY
	,METAL
	,PLASTIC
	,WOOD
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcConstructionProductResourceTypeEnum = ENUMERATION OF
	(ASSEMBLY
	,FORMWORK
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcControllerTypeEnum = ENUMERATION OF
	(FLOATING
	,MULTIPOSITION
	,PROGRAMMABLE
	,PROPORTIONAL
	,TWOPOSITION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcConveyorSegmentTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCooledBeamTypeEnum = ENUMERATION OF
	(ACTIVE
	,PASSIVE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCoolingTowerTypeEnum = ENUMERATION OF
	(MECHANICALFORCEDDRAFT
	,MECHANICALINDUCEDDRAFT
	,NATURALDRAFT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCostItemTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCostScheduleTypeEnum = ENUMERATION OF
	(BUDGET
	,COSTPLAN
	,ESTIMATE
	,PRICEDBILLOFQUANTITIES
	,SCHEDULEOFRATES
	,TENDER
	,UNPRICEDBILLOFQUANTITIES
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCourseTypeEnum = ENUMERATION OF
	(BALLASTBED
	,CORE
	,FILTER
	,PAVEMENT
	,PROTECTION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCoveringTypeEnum = ENUMERATION OF
	(CEILING
	,CLADDING
	,COPING
	,FLOORING
	,INSULATION
	,MEMBRANE
	,MOLDING
	,ROOFING
	,SKIRTINGBOARD
	,SLEEVING
	,WRAPPING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCrewResourceTypeEnum = ENUMERATION OF
	(OFFICE
	,SITE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCurtainWallTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcCurveInterpolationEnum = ENUMERATION OF
	(LINEAR
	,LOG_LINEAR
	,LOG_LOG
	,NOTDEFINED);
END_TYPE;

TYPE IfcDamperTypeEnum = ENUMERATION OF
	(BACKDRAFTDAMPER
	,BALANCINGDAMPER
	,BLASTDAMPER
	,CONTROLDAMPER
	,FIREDAMPER
	,FIRESMOKEDAMPER
	,FUMEHOODEXHAUST
	,GRAVITYDAMPER
	,GRAVITYRELIEFDAMPER
	,RELIEFDAMPER
	,SMOKEDAMPER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDataOriginEnum = ENUMERATION OF
	(MEASURED
	,PREDICTED
	,SIMULATED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDerivedUnitEnum = ENUMERATION OF
	(ANGULARVELOCITYUNIT
	,AREADENSITYUNIT
	,COMPOUNDPLANEANGLEUNIT
	,DYNAMICVISCOSITYUNIT
	,HEATFLUXDENSITYUNIT
	,INTEGERCOUNTRATEUNIT
	,ISOTHERMALMOISTURECAPACITYUNIT
	,KINEMATICVISCOSITYUNIT
	,LINEARVELOCITYUNIT
	,MASSDENSITYUNIT
	,MASSFLOWRATEUNIT
	,MOISTUREDIFFUSIVITYUNIT
	,MOLECULARWEIGHTUNIT
	,SPECIFICHEATCAPACITYUNIT
	,THERMALADMITTANCEUNIT
	,THERMALCONDUCTANCEUNIT
	,THERMALRESISTANCEUNIT
	,THERMALTRANSMITTANCEUNIT
	,VAPORPERMEABILITYUNIT
	,VOLUMETRICFLOWRATEUNIT
	,ROTATIONALFREQUENCYUNIT
	,TORQUEUNIT
	,MOMENTOFINERTIAUNIT
	,LINEARMOMENTUNIT
	,LINEARFORCEUNIT
	,PLANARFORCEUNIT
	,MODULUSOFELASTICITYUNIT
	,SHEARMODULUSUNIT
	,LINEARSTIFFNESSUNIT
	,ROTATIONALSTIFFNESSUNIT
	,MODULUSOFSUBGRADEREACTIONUNIT
	,ACCELERATIONUNIT
	,CURVATUREUNIT
	,HEATINGVALUEUNIT
	,IONCONCENTRATIONUNIT
	,LUMINOUSINTENSITYDISTRIBUTIONUNIT
	,MASSPERLENGTHUNIT
	,MODULUSOFLINEARSUBGRADEREACTIONUNIT
	,MODULUSOFROTATIONALSUBGRADEREACTIONUNIT
	,PHUNIT
	,ROTATIONALMASSUNIT
	,SECTIONAREAINTEGRALUNIT
	,SECTIONMODULUSUNIT
	,SOUNDPOWERLEVELUNIT
	,SOUNDPOWERUNIT
	,SOUNDPRESSURELEVELUNIT
	,SOUNDPRESSUREUNIT
	,TEMPERATUREGRADIENTUNIT
	,TEMPERATURERATEOFCHANGEUNIT
	,THERMALEXPANSIONCOEFFICIENTUNIT
	,WARPINGCONSTANTUNIT
	,WARPINGMOMENTUNIT
	,USERDEFINED);
END_TYPE;

TYPE IfcDirectionSenseEnum = ENUMERATION OF
	(POSITIVE
	,NEGATIVE);
END_TYPE;

TYPE IfcDiscreteAccessoryTypeEnum = ENUMERATION OF
	(ANCHORPLATE
	,BRACKET
	,EXPANSION_JOINT_DEVICE
	,SHOE
	,BIRDPROTECTION
	,CABLEARRANGER
	,INSULATOR
	,LOCK
	,TENSIONINGEQUIPMENT
	,RAILPAD
	,SLIDINGCHAIR
	,PANEL_STRENGTHENING
	,RAILBRACE
	,ELASTIC_CUSHION
	,SOUNDABSORPTION
	,RAIL_LUBRICATION
	,RAIL_MECHANICAL_EQUIPMENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDistributionBoardTypeEnum = ENUMERATION OF
	(CONSUMERUNIT
	,DISTRIBUTIONBOARD
	,DISTRIBUTIONFRAME
	,MOTORCONTROLCENTRE
	,SWITCHBOARD
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDistributionChamberElementTypeEnum = ENUMERATION OF
	(FORMEDDUCT
	,INSPECTIONCHAMBER
	,INSPECTIONPIT
	,MANHOLE
	,METERCHAMBER
	,SUMP
	,TRENCH
	,VALVECHAMBER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDistributionPortTypeEnum = ENUMERATION OF
	(CABLE
	,CABLECARRIER
	,DUCT
	,PIPE
	,WIRELESS
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDistributionSystemEnum = ENUMERATION OF
	(AIRCONDITIONING
	,AUDIOVISUAL
	,CHEMICAL
	,CHILLEDWATER
	,COMMUNICATION
	,COMPRESSEDAIR
	,CONDENSERWATER
	,CONTROL
	,CONVEYING
	,DATA
	,DISPOSAL
	,DOMESTICCOLDWATER
	,DOMESTICHOTWATER
	,DRAINAGE
	,EARTHING
	,ELECTRICAL
	,ELECTROACOUSTIC
	,EXHAUST
	,FIREPROTECTION
	,FUEL
	,GAS
	,HAZARDOUS
	,HEATING
	,LIGHTING
	,LIGHTNINGPROTECTION
	,MUNICIPALSOLIDWASTE
	,OIL
	,OPERATIONAL
	,POWERGENERATION
	,RAINWATER
	,REFRIGERATION
	,SECURITY
	,SEWAGE
	,SIGNAL
	,STORMWATER
	,TELEPHONE
	,TV
	,VACUUM
	,VENT
	,VENTILATION
	,WASTEWATER
	,WATERSUPPLY
	,CATENARY_SYSTEM
	,OVERHEAD_CONTACTLINE_SYSTEM
	,RETURN_CIRCUIT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDocumentConfidentialityEnum = ENUMERATION OF
	(PUBLIC
	,RESTRICTED
	,CONFIDENTIAL
	,PERSONAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDocumentStatusEnum = ENUMERATION OF
	(DRAFT
	,FINALDRAFT
	,FINAL
	,REVISION
	,NOTDEFINED);
END_TYPE;

TYPE IfcDoorPanelOperationEnum = ENUMERATION OF
	(SWINGING
	,DOUBLE_ACTING
	,SLIDING
	,FOLDING
	,REVOLVING
	,ROLLINGUP
	,FIXEDPANEL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDoorPanelPositionEnum = ENUMERATION OF
	(LEFT
	,MIDDLE
	,RIGHT
	,NOTDEFINED);
END_TYPE;

TYPE IfcDoorStyleConstructionEnum = ENUMERATION OF
	(ALUMINIUM
	,HIGH_GRADE_STEEL
	,STEEL
	,WOOD
	,ALUMINIUM_WOOD
	,ALUMINIUM_PLASTIC
	,PLASTIC
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDoorStyleOperationEnum = ENUMERATION OF
	(SINGLE_SWING_LEFT
	,SINGLE_SWING_RIGHT
	,DOUBLE_DOOR_SINGLE_SWING
	,DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT
	,DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT
	,DOUBLE_SWING_LEFT
	,DOUBLE_SWING_RIGHT
	,DOUBLE_DOOR_DOUBLE_SWING
	,SLIDING_TO_LEFT
	,SLIDING_TO_RIGHT
	,DOUBLE_DOOR_SLIDING
	,FOLDING_TO_LEFT
	,FOLDING_TO_RIGHT
	,DOUBLE_DOOR_FOLDING
	,REVOLVING
	,ROLLINGUP
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDoorTypeEnum = ENUMERATION OF
	(DOOR
	,GATE
	,TRAPDOOR
	,BOOM_BARRIER
	,TURNSTILE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDuctFittingTypeEnum = ENUMERATION OF
	(BEND
	,CONNECTOR
	,ENTRY
	,EXIT
	,JUNCTION
	,OBSTRUCTION
	,TRANSITION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDuctSegmentTypeEnum = ENUMERATION OF
	(FLEXIBLESEGMENT
	,RIGIDSEGMENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcDuctSilencerTypeEnum = ENUMERATION OF
	(FLATOVAL
	,RECTANGULAR
	,ROUND
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcEarthworksCutTypeEnum = ENUMERATION OF
	(STEPEXCAVATION
	,EXCAVATION
	,DREDGING
	,TOPSOILREMOVAL
	,OVEREXCAVATION
	,CUT
	,PAVEMENTMILLING
	,TRENCH
	,BASE_EXCAVATION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcEarthworksFillTypeEnum = ENUMERATION OF
	(SUBGRADEBED
	,SUBGRADE
	,COUNTERWEIGHT
	,SLOPEFILL
	,TRANSITIONSECTION
	,EMBANKMENT
	,BACKFILL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElectricApplianceTypeEnum = ENUMERATION OF
	(DISHWASHER
	,ELECTRICCOOKER
	,FREESTANDINGELECTRICHEATER
	,FREESTANDINGFAN
	,FREESTANDINGWATERCOOLER
	,FREESTANDINGWATERHEATER
	,FREEZER
	,FRIDGE_FREEZER
	,HANDDRYER
	,KITCHENMACHINE
	,MICROWAVE
	,PHOTOCOPIER
	,REFRIGERATOR
	,TUMBLEDRYER
	,VENDINGMACHINE
	,WASHINGMACHINE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElectricDistributionBoardTypeEnum = ENUMERATION OF
	(CONSUMERUNIT
	,DISTRIBUTIONBOARD
	,MOTORCONTROLCENTRE
	,SWITCHBOARD
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElectricFlowStorageDeviceTypeEnum = ENUMERATION OF
	(BATTERY
	,CAPACITORBANK
	,HARMONICFILTER
	,INDUCTORBANK
	,UPS
	,CAPACITOR
	,COMPENSATOR
	,INDUCTOR
	,RECHARGER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElectricFlowTreatmentDeviceTypeEnum = ENUMERATION OF
	(ELECTRONICFILTER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElectricGeneratorTypeEnum = ENUMERATION OF
	(CHP
	,ENGINEGENERATOR
	,STANDALONE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElectricMotorTypeEnum = ENUMERATION OF
	(DC
	,INDUCTION
	,POLYPHASE
	,RELUCTANCESYNCHRONOUS
	,SYNCHRONOUS
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElectricTimeControlTypeEnum = ENUMERATION OF
	(RELAY
	,TIMECLOCK
	,TIMEDELAY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElementAssemblyTypeEnum = ENUMERATION OF
	(ABUTMENT
	,ACCESSORY_ASSEMBLY
	,ARCH
	,BEAM_GRID
	,BRACED_FRAME
	,CROSS_BRACING
	,DECK
	,GIRDER
	,PIER
	,PYLON
	,REINFORCEMENT_UNIT
	,RIGID_FRAME
	,SLAB_FIELD
	,TRUSS
	,MAST
	,SIGNALASSEMBLY
	,GRID
	,SHELTER
	,SUPPORTINGASSEMBLY
	,SUSPENSIONASSEMBLY
	,TRACTION_SWITCHING_ASSEMBLY
	,TRACKPANEL
	,TURNOUTPANEL
	,DILATATIONPANEL
	,RAIL_MECHANICAL_EQUIPMENT_ASSEMBLY
	,ENTRANCEWORKS
	,SUMPBUSTER
	,TRAFFIC_CALMING_DEVICE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcElementCompositionEnum = ENUMERATION OF
	(COMPLEX
	,ELEMENT
	,PARTIAL);
END_TYPE;

TYPE IfcEngineTypeEnum = ENUMERATION OF
	(EXTERNALCOMBUSTION
	,INTERNALCOMBUSTION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcEvaporativeCoolerTypeEnum = ENUMERATION OF
	(DIRECTEVAPORATIVEAIRWASHER
	,DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER
	,DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER
	,DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER
	,DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER
	,INDIRECTDIRECTCOMBINATION
	,INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER
	,INDIRECTEVAPORATIVEPACKAGEAIRCOOLER
	,INDIRECTEVAPORATIVEWETCOIL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcEvaporatorTypeEnum = ENUMERATION OF
	(DIRECTEXPANSION
	,DIRECTEXPANSIONBRAZEDPLATE
	,DIRECTEXPANSIONSHELLANDTUBE
	,DIRECTEXPANSIONTUBEINTUBE
	,FLOODEDSHELLANDTUBE
	,SHELLANDCOIL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcEventTriggerTypeEnum = ENUMERATION OF
	(EVENTRULE
	,EVENTMESSAGE
	,EVENTTIME
	,EVENTCOMPLEX
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcEventTypeEnum = ENUMERATION OF
	(ENDEVENT
	,INTERMEDIATEEVENT
	,STARTEVENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcExternalSpatialElementTypeEnum = ENUMERATION OF
	(EXTERNAL
	,EXTERNAL_EARTH
	,EXTERNAL_FIRE
	,EXTERNAL_WATER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFacilityPartCommonTypeEnum = ENUMERATION OF
	(ABOVEGROUND
	,BELOWGROUND
	,JUNCTION
	,LEVELCROSSING
	,SEGMENT
	,SUBSTRUCTURE
	,SUPERSTRUCTURE
	,TERMINAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFacilityUsageEnum = ENUMERATION OF
	(LATERAL
	,LONGITUDINAL
	,REGION
	,VERTICAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFanTypeEnum = ENUMERATION OF
	(CENTRIFUGALAIRFOIL
	,CENTRIFUGALBACKWARDINCLINEDCURVED
	,CENTRIFUGALFORWARDCURVED
	,CENTRIFUGALRADIAL
	,PROPELLORAXIAL
	,TUBEAXIAL
	,VANEAXIAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFastenerTypeEnum = ENUMERATION OF
	(GLUE
	,MORTAR
	,WELD
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFilterTypeEnum = ENUMERATION OF
	(AIRPARTICLEFILTER
	,COMPRESSEDAIRFILTER
	,ODORFILTER
	,OILFILTER
	,STRAINER
	,WATERFILTER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFireSuppressionTerminalTypeEnum = ENUMERATION OF
	(BREECHINGINLET
	,FIREHYDRANT
	,HOSEREEL
	,SPRINKLER
	,SPRINKLERDEFLECTOR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFlowDirectionEnum = ENUMERATION OF
	(SOURCE
	,SINK
	,SOURCEANDSINK
	,NOTDEFINED);
END_TYPE;

TYPE IfcFlowInstrumentTypeEnum = ENUMERATION OF
	(AMMETER
	,FREQUENCYMETER
	,PHASEANGLEMETER
	,POWERFACTORMETER
	,PRESSUREGAUGE
	,THERMOMETER
	,VOLTMETER_PEAK
	,VOLTMETER_RMS
	,COMBINED
	,VOLTMETER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFlowMeterTypeEnum = ENUMERATION OF
	(ENERGYMETER
	,GASMETER
	,OILMETER
	,WATERMETER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFootingTypeEnum = ENUMERATION OF
	(CAISSON_FOUNDATION
	,FOOTING_BEAM
	,PAD_FOOTING
	,PILE_CAP
	,STRIP_FOOTING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcFurnitureTypeEnum = ENUMERATION OF
	(BED
	,CHAIR
	,DESK
	,FILECABINET
	,SHELF
	,SOFA
	,TABLE
	,TECHNICALCABINET
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcGeographicElementTypeEnum = ENUMERATION OF
	(SOIL_BORING_POINT
	,TERRAIN
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcGeometricProjectionEnum = ENUMERATION OF
	(GRAPH_VIEW
	,SKETCH_VIEW
	,MODEL_VIEW
	,PLAN_VIEW
	,REFLECTED_PLAN_VIEW
	,SECTION_VIEW
	,ELEVATION_VIEW
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcGlobalOrLocalEnum = ENUMERATION OF
	(GLOBAL_COORDS
	,LOCAL_COORDS);
END_TYPE;

TYPE IfcGridTypeEnum = ENUMERATION OF
	(IRREGULAR
	,RADIAL
	,RECTANGULAR
	,TRIANGULAR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcHeatExchangerTypeEnum = ENUMERATION OF
	(PLATE
	,SHELLANDTUBE
	,TURNOUTHEATING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcHumidifierTypeEnum = ENUMERATION OF
	(ADIABATICAIRWASHER
	,ADIABATICATOMIZING
	,ADIABATICCOMPRESSEDAIRNOZZLE
	,ADIABATICPAN
	,ADIABATICRIGIDMEDIA
	,ADIABATICULTRASONIC
	,ADIABATICWETTEDELEMENT
	,ASSISTEDBUTANE
	,ASSISTEDELECTRIC
	,ASSISTEDNATURALGAS
	,ASSISTEDPROPANE
	,ASSISTEDSTEAM
	,STEAMINJECTION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcImpactProtectionDeviceTypeEnum = ENUMERATION OF
	(BUMPER
	,DAMPINGSYSTEM
	,FENDER
	,CRASHCUSHION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcInterceptorTypeEnum = ENUMERATION OF
	(CYCLONIC
	,GREASE
	,OIL
	,PETROL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcInternalOrExternalEnum = ENUMERATION OF
	(INTERNAL
	,EXTERNAL
	,EXTERNAL_EARTH
	,EXTERNAL_WATER
	,EXTERNAL_FIRE
	,NOTDEFINED);
END_TYPE;

TYPE IfcInventoryTypeEnum = ENUMERATION OF
	(ASSETINVENTORY
	,FURNITUREINVENTORY
	,SPACEINVENTORY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcJunctionBoxTypeEnum = ENUMERATION OF
	(DATA
	,POWER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcKnotType = ENUMERATION OF
	(UNIFORM_KNOTS
	,QUASI_UNIFORM_KNOTS
	,PIECEWISE_BEZIER_KNOTS
	,UNSPECIFIED);
END_TYPE;

TYPE IfcLaborResourceTypeEnum = ENUMERATION OF
	(ADMINISTRATION
	,CARPENTRY
	,CLEANING
	,CONCRETE
	,DRYWALL
	,ELECTRIC
	,FINISHING
	,FLOORING
	,GENERAL
	,HVAC
	,LANDSCAPING
	,MASONRY
	,PAINTING
	,PAVING
	,PLUMBING
	,ROOFING
	,SITEGRADING
	,STEELWORK
	,SURVEYING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcLampTypeEnum = ENUMERATION OF
	(COMPACTFLUORESCENT
	,FLUORESCENT
	,HALOGEN
	,HIGHPRESSUREMERCURY
	,HIGHPRESSURESODIUM
	,LED
	,METALHALIDE
	,OLED
	,TUNGSTENFILAMENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcLayerSetDirectionEnum = ENUMERATION OF
	(AXIS1
	,AXIS2
	,AXIS3);
END_TYPE;

TYPE IfcLightDistributionCurveEnum = ENUMERATION OF
	(TYPE_A
	,TYPE_B
	,TYPE_C
	,NOTDEFINED);
END_TYPE;

TYPE IfcLightEmissionSourceEnum = ENUMERATION OF
	(COMPACTFLUORESCENT
	,FLUORESCENT
	,HIGHPRESSUREMERCURY
	,HIGHPRESSURESODIUM
	,LIGHTEMITTINGDIODE
	,LOWPRESSURESODIUM
	,LOWVOLTAGEHALOGEN
	,MAINVOLTAGEHALOGEN
	,METALHALIDE
	,TUNGSTENFILAMENT
	,NOTDEFINED);
END_TYPE;

TYPE IfcLightFixtureTypeEnum = ENUMERATION OF
	(DIRECTIONSOURCE
	,POINTSOURCE
	,SECURITYLIGHTING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcLiquidTerminalTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcLoadGroupTypeEnum = ENUMERATION OF
	(LOAD_CASE
	,LOAD_COMBINATION
	,LOAD_GROUP
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcLogicalOperatorEnum = ENUMERATION OF
	(LOGICALAND
	,LOGICALOR
	,LOGICALXOR
	,LOGICALNOTAND
	,LOGICALNOTOR);
END_TYPE;

TYPE IfcMarineFacilityTypeEnum = ENUMERATION OF
	(BARRIERBEACH
	,BREAKWATER
	,CANAL
	,DRYDOCK
	,EMBANKMENT
	,FLOATINGDOCK
	,HYDROLIFT
	,JETTY
	,LAUNCHRECOVERY
	,MARINEDEFENCE
	,NAVIGATIONALCHANNEL
	,PORT
	,QUAY
	,SHIPLIFT
	,SHIPLOCK
	,SHIPYARD
	,SLIPWAY
	,WATERWAY
	,WATERWAYSHIPLIFT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMarinePartTypeEnum = ENUMERATION OF
	(ABOVEWATERLINE
	,ANCHORAGE
	,APPROACHCHANNEL
	,BELOWWATERLINE
	,BERTHINGSTRUCTURE
	,CHAMBER
	,CILL_LEVEL
	,COPELEVEL
	,CORE
	,CREST
	,GATEHEAD
	,GUDINGSTRUCTURE
	,HIGHWATERLINE
	,LANDFIELD
	,LEEWARDSIDE
	,LOWWATERLINE
	,MANUFACTURING
	,NAVIGATIONALAREA
	,PROTECTION
	,SHIPTRANSFER
	,STORAGE
	,VEHICLESERVICING
	,WATERFIELD
	,WEATHERSIDE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMechanicalFastenerTypeEnum = ENUMERATION OF
	(ANCHORBOLT
	,BOLT
	,COUPLER
	,DOWEL
	,NAIL
	,NAILPLATE
	,RIVET
	,SCREW
	,SHEARCONNECTOR
	,STAPLE
	,STUDSHEARCONNECTOR
	,RAILJOINT
	,RAILFASTENING
	,CHAIN
	,ROPE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMedicalDeviceTypeEnum = ENUMERATION OF
	(AIRSTATION
	,FEEDAIRUNIT
	,OXYGENGENERATOR
	,OXYGENPLANT
	,VACUUMSTATION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMemberTypeEnum = ENUMERATION OF
	(ARCH_SEGMENT
	,BRACE
	,CHORD
	,COLLAR
	,MEMBER
	,MULLION
	,PLATE
	,POST
	,PURLIN
	,RAFTER
	,STAY_CABLE
	,STIFFENING_RIB
	,STRINGER
	,STRUT
	,STUD
	,SUSPENDER
	,SUSPENSION_CABLE
	,STRUCTURALCABLE
	,TIEBAR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMobileTelecommunicationsApplianceTypeEnum = ENUMERATION OF
	(ACCESSPOINT
	,BASEBANDUNIT
	,BASETRANSCEIVERSTATION
	,E_UTRAN_NODE_B
	,MASTERUNIT
	,REMOTE_RADIO_UNIT
	,REMOTEUNIT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMooringDeviceTypeEnum = ENUMERATION OF
	(BOLLARD
	,LINETENSIONER
	,MAGNETICDEVICE
	,MOORINGHOOKS
	,VACUUMDEVICE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMotorConnectionTypeEnum = ENUMERATION OF
	(BELTDRIVE
	,COUPLING
	,DIRECTDRIVE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcNavigationElementTypeEnum = ENUMERATION OF
	(BEACON
	,BUOY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcNullStyle = ENUMERATION OF
	(NULL);
END_TYPE;

TYPE IfcObjectTypeEnum = ENUMERATION OF
	(PRODUCT
	,PROCESS
	,CONTROL
	,RESOURCE
	,ACTOR
	,GROUP
	,PROJECT
	,NOTDEFINED);
END_TYPE;

TYPE IfcObjectiveEnum = ENUMERATION OF
	(CODECOMPLIANCE
	,CODEWAIVER
	,DESIGNINTENT
	,EXTERNAL
	,HEALTHANDSAFETY
	,MERGECONFLICT
	,MODELVIEW
	,PARAMETER
	,REQUIREMENT
	,SPECIFICATION
	,TRIGGERCONDITION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcOccupantTypeEnum = ENUMERATION OF
	(ASSIGNEE
	,ASSIGNOR
	,LESSEE
	,LESSOR
	,LETTINGAGENT
	,OWNER
	,TENANT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcOpeningElementTypeEnum = ENUMERATION OF
	(OPENING
	,RECESS
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcOutletTypeEnum = ENUMERATION OF
	(AUDIOVISUALOUTLET
	,COMMUNICATIONSOUTLET
	,DATAOUTLET
	,POWEROUTLET
	,TELEPHONEOUTLET
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPavementTypeEnum = ENUMERATION OF
	(PAVEMENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPerformanceHistoryTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPermeableCoveringOperationEnum = ENUMERATION OF
	(GRILL
	,LOUVER
	,SCREEN
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPermitTypeEnum = ENUMERATION OF
	(ACCESS
	,BUILDING
	,WORK
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPhysicalOrVirtualEnum = ENUMERATION OF
	(PHYSICAL
	,VIRTUAL
	,NOTDEFINED);
END_TYPE;

TYPE IfcPileConstructionEnum = ENUMERATION OF
	(CAST_IN_PLACE
	,COMPOSITE
	,PRECAST_CONCRETE
	,PREFAB_STEEL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPileTypeEnum = ENUMERATION OF
	(BORED
	,COHESION
	,DRIVEN
	,FRICTION
	,JETGROUTING
	,SUPPORT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPipeFittingTypeEnum = ENUMERATION OF
	(BEND
	,CONNECTOR
	,ENTRY
	,EXIT
	,JUNCTION
	,OBSTRUCTION
	,TRANSITION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPipeSegmentTypeEnum = ENUMERATION OF
	(CULVERT
	,FLEXIBLESEGMENT
	,GUTTER
	,RIGIDSEGMENT
	,SPOOL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPlateTypeEnum = ENUMERATION OF
	(BASE_PLATE
	,COVER_PLATE
	,CURTAIN_PANEL
	,FLANGE_PLATE
	,GUSSET_PLATE
	,SHEET
	,SPLICE_PLATE
	,STIFFENER_PLATE
	,WEB_PLATE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPreferredSurfaceCurveRepresentation = ENUMERATION OF
	(CURVE3D
	,PCURVE_S1
	,PCURVE_S2);
END_TYPE;

TYPE IfcProcedureTypeEnum = ENUMERATION OF
	(ADVICE_CAUTION
	,ADVICE_NOTE
	,ADVICE_WARNING
	,CALIBRATION
	,DIAGNOSTIC
	,SHUTDOWN
	,STARTUP
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcProfileTypeEnum = ENUMERATION OF
	(CURVE
	,AREA);
END_TYPE;

TYPE IfcProjectOrderTypeEnum = ENUMERATION OF
	(CHANGEORDER
	,MAINTENANCEWORKORDER
	,MOVEORDER
	,PURCHASEORDER
	,WORKORDER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcProjectedOrTrueLengthEnum = ENUMERATION OF
	(PROJECTED_LENGTH
	,TRUE_LENGTH);
END_TYPE;

TYPE IfcProjectionElementTypeEnum = ENUMERATION OF
	(BLISTER
	,DEVIATOR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPropertySetTemplateTypeEnum = ENUMERATION OF
	(QTO_OCCURRENCEDRIVEN
	,QTO_TYPEDRIVENONLY
	,PSET_TYPEDRIVENONLY
	,PSET_PERFORMANCEDRIVEN
	,PSET_OCCURRENCEDRIVEN
	,QTO_TYPEDRIVENOVERRIDE
	,PSET_TYPEDRIVENOVERRIDE);
END_TYPE;

TYPE IfcProtectiveDeviceTrippingUnitTypeEnum = ENUMERATION OF
	(ELECTROMAGNETIC
	,ELECTRONIC
	,RESIDUALCURRENT
	,THERMAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcProtectiveDeviceTypeEnum = ENUMERATION OF
	(CIRCUITBREAKER
	,EARTHINGSWITCH
	,EARTHLEAKAGECIRCUITBREAKER
	,FUSEDISCONNECTOR
	,RESIDUALCURRENTCIRCUITBREAKER
	,RESIDUALCURRENTSWITCH
	,VARISTOR
	,ANTI_ARCING_DEVICE
	,SPARKGAP
	,VOLTAGELIMITER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcPumpTypeEnum = ENUMERATION OF
	(CIRCULATOR
	,ENDSUCTION
	,SPLITCASE
	,SUBMERSIBLEPUMP
	,SUMPPUMP
	,VERTICALINLINE
	,VERTICALTURBINE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRailTypeEnum = ENUMERATION OF
	(RACKRAIL
	,GUARDRAIL
	,RAIL
	,CHECKRAIL
	,BLADE
	,STOCKRAIL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRailingTypeEnum = ENUMERATION OF
	(BALUSTRADE
	,GUARDRAIL
	,HANDRAIL
	,FENCE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRailwayPartTypeEnum = ENUMERATION OF
	(LINESIDESTRUCTURE
	,LINESIDESTRUCTUREPART
	,SUPERSTRUCTURE
	,TRACKSTRUCTURE
	,TRACKSTRUCTUREPART
	,PLAINTRACKSUPESTRUCTURE
	,TURNOUTSUPERSTRUCTURE
	,DILATATIONSUPERSTRUCTURE
	,SUBSTRUCTURE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRampFlightTypeEnum = ENUMERATION OF
	(SPIRAL
	,STRAIGHT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRampTypeEnum = ENUMERATION OF
	(HALF_TURN_RAMP
	,QUARTER_TURN_RAMP
	,SPIRAL_RAMP
	,STRAIGHT_RUN_RAMP
	,TWO_QUARTER_TURN_RAMP
	,TWO_STRAIGHT_RUN_RAMP
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRecurrenceTypeEnum = ENUMERATION OF
	(DAILY
	,WEEKLY
	,MONTHLY_BY_DAY_OF_MONTH
	,MONTHLY_BY_POSITION
	,BY_DAY_COUNT
	,BY_WEEKDAY_COUNT
	,YEARLY_BY_DAY_OF_MONTH
	,YEARLY_BY_POSITION);
END_TYPE;

TYPE IfcReferentTypeEnum = ENUMERATION OF
	(KILOPOINT
	,MILEPOINT
	,STATION
	,REFERENCEMARKER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcReflectanceMethodEnum = ENUMERATION OF
	(BLINN
	,FLAT
	,GLASS
	,MATT
	,METAL
	,MIRROR
	,PHONG
	,PLASTIC
	,STRAUSS
	,NOTDEFINED);
END_TYPE;

TYPE IfcReinforcedSoilTypeEnum = ENUMERATION OF
	(DYNAMICALLYCOMPACTED
	,GROUTED
	,REPLACED
	,ROLLERCOMPACTED
	,SURCHARGEPRELOADED
	,VERTICALLYDRAINED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcReinforcingBarRoleEnum = ENUMERATION OF
	(MAIN
	,SHEAR
	,LIGATURE
	,STUD
	,PUNCHING
	,EDGE
	,RING
	,ANCHORING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcReinforcingBarSurfaceEnum = ENUMERATION OF
	(PLAIN
	,TEXTURED);
END_TYPE;

TYPE IfcReinforcingBarTypeEnum = ENUMERATION OF
	(ANCHORING
	,EDGE
	,LIGATURE
	,MAIN
	,PUNCHING
	,RING
	,SHEAR
	,SPACEBAR
	,STUD
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcReinforcingMeshTypeEnum = ENUMERATION OF
	(USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRoadPartTypeEnum = ENUMERATION OF
	(TOLLPLAZA
	,ROADSEGMENT
	,JUNCTION
	,INTERSECTION
	,ROUNDABOUT
	,LEVEL_CROSSING
	,RAILWAYCROSSING
	,BICYCLECROSSING
	,PEDESTRIAN_CROSSING
	,CARRIAGEWAY
	,ROADWAYPLATEAU
	,TRAFFICLANE
	,LAYBY
	,PASSINGBAY
	,BUS_STOP
	,PARKINGBAY
	,CENTRALRESERVE
	,TRAFFICISLAND
	,CENTRALISLAND
	,REFUGEISLAND
	,SHOULDER
	,HARDSHOULDER
	,SOFTSHOULDER
	,SIDEWALK
	,ROADSIDE
	,ROADSIDEPART
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcRoleEnum = ENUMERATION OF
	(SUPPLIER
	,MANUFACTURER
	,CONTRACTOR
	,SUBCONTRACTOR
	,ARCHITECT
	,STRUCTURALENGINEER
	,COSTENGINEER
	,CLIENT
	,BUILDINGOWNER
	,BUILDINGOPERATOR
	,MECHANICALENGINEER
	,ELECTRICALENGINEER
	,PROJECTMANAGER
	,FACILITIESMANAGER
	,CIVILENGINEER
	,COMMISSIONINGENGINEER
	,ENGINEER
	,OWNER
	,CONSULTANT
	,CONSTRUCTIONMANAGER
	,FIELDCONSTRUCTIONMANAGER
	,RESELLER
	,USERDEFINED);
END_TYPE;

TYPE IfcRoofTypeEnum = ENUMERATION OF
	(BARREL_ROOF
	,BUTTERFLY_ROOF
	,DOME_ROOF
	,FLAT_ROOF
	,FREEFORM
	,GABLE_ROOF
	,GAMBREL_ROOF
	,HIP_ROOF
	,HIPPED_GABLE_ROOF
	,MANSARD_ROOF
	,PAVILION_ROOF
	,RAINBOW_ROOF
	,SHED_ROOF
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSIPrefix = ENUMERATION OF
	(EXA
	,PETA
	,TERA
	,GIGA
	,MEGA
	,KILO
	,HECTO
	,DECA
	,DECI
	,CENTI
	,MILLI
	,MICRO
	,NANO
	,PICO
	,FEMTO
	,ATTO);
END_TYPE;

TYPE IfcSIUnitName = ENUMERATION OF
	(AMPERE
	,BECQUEREL
	,CANDELA
	,COULOMB
	,CUBIC_METRE
	,DEGREE_CELSIUS
	,FARAD
	,GRAM
	,GRAY
	,HENRY
	,HERTZ
	,JOULE
	,KELVIN
	,LUMEN
	,LUX
	,METRE
	,MOLE
	,NEWTON
	,OHM
	,PASCAL
	,RADIAN
	,SECOND
	,SIEMENS
	,SIEVERT
	,SQUARE_METRE
	,STERADIAN
	,TESLA
	,VOLT
	,WATT
	,WEBER);
END_TYPE;

TYPE IfcSanitaryTerminalTypeEnum = ENUMERATION OF
	(BATH
	,BIDET
	,CISTERN
	,SANITARYFOUNTAIN
	,SHOWER
	,SINK
	,TOILETPAN
	,URINAL
	,WASHHANDBASIN
	,WCSEAT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSectionTypeEnum = ENUMERATION OF
	(UNIFORM
	,TAPERED);
END_TYPE;

TYPE IfcSensorTypeEnum = ENUMERATION OF
	(CO2SENSOR
	,CONDUCTANCESENSOR
	,CONTACTSENSOR
	,COSENSOR
	,FIRESENSOR
	,FLOWSENSOR
	,FROSTSENSOR
	,GASSENSOR
	,HEATSENSOR
	,HUMIDITYSENSOR
	,IDENTIFIERSENSOR
	,IONCONCENTRATIONSENSOR
	,LEVELSENSOR
	,LIGHTSENSOR
	,MOISTURESENSOR
	,MOVEMENTSENSOR
	,PHSENSOR
	,PRESSURESENSOR
	,RADIATIONSENSOR
	,RADIOACTIVITYSENSOR
	,SMOKESENSOR
	,SOUNDSENSOR
	,TEMPERATURESENSOR
	,WINDSENSOR
	,EARTHQUAKESENSOR
	,FOREIGNOBJECTDETECTIONSENSOR
	,OBSTACLESENSOR
	,RAINSENSOR
	,SNOWDEPTHSENSOR
	,TRAINSENSOR
	,TURNOUTCLOSURESENSOR
	,WHEELSENSOR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSequenceEnum = ENUMERATION OF
	(START_START
	,START_FINISH
	,FINISH_START
	,FINISH_FINISH
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcShadingDeviceTypeEnum = ENUMERATION OF
	(AWNING
	,JALOUSIE
	,SHUTTER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSignTypeEnum = ENUMERATION OF
	(MARKER
	,MIRROR
	,PICTORAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSignalTypeEnum = ENUMERATION OF
	(AUDIO
	,MIXED
	,VISUAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSimplePropertyTemplateTypeEnum = ENUMERATION OF
	(P_SINGLEVALUE
	,P_TABLEVALUE
	,Q_WEIGHT
	,Q_COUNT
	,P_LISTVALUE
	,Q_TIME
	,Q_LENGTH
	,P_ENUMERATEDVALUE
	,Q_VOLUME
	,P_BOUNDEDVALUE
	,P_REFERENCEVALUE
	,Q_AREA);
END_TYPE;

TYPE IfcSlabTypeEnum = ENUMERATION OF
	(APPROACH_SLAB
	,BASESLAB
	,FLOOR
	,LANDING
	,PAVING
	,ROOF
	,SIDEWALK
	,WEARING
	,TRACKSLAB
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSolarDeviceTypeEnum = ENUMERATION OF
	(SOLARCOLLECTOR
	,SOLARPANEL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSpaceHeaterTypeEnum = ENUMERATION OF
	(CONVECTOR
	,RADIATOR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSpaceTypeEnum = ENUMERATION OF
	(EXTERNAL
	,GFA
	,INTERNAL
	,PARKING
	,SPACE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSpatialZoneTypeEnum = ENUMERATION OF
	(CONSTRUCTION
	,FIRESAFETY
	,LIGHTING
	,OCCUPANCY
	,SECURITY
	,THERMAL
	,TRANSPORT
	,VENTILATION
	,RESERVATION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcStackTerminalTypeEnum = ENUMERATION OF
	(BIRDCAGE
	,COWL
	,RAINWATERHOPPER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcStairFlightTypeEnum = ENUMERATION OF
	(CURVED
	,FREEFORM
	,SPIRAL
	,STRAIGHT
	,WINDER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcStairTypeEnum = ENUMERATION OF
	(CURVED_RUN_STAIR
	,DOUBLE_RETURN_STAIR
	,HALF_TURN_STAIR
	,HALF_WINDING_STAIR
	,QUARTER_TURN_STAIR
	,QUARTER_WINDING_STAIR
	,SPIRAL_STAIR
	,STRAIGHT_RUN_STAIR
	,THREE_QUARTER_TURN_STAIR
	,THREE_QUARTER_WINDING_STAIR
	,TWO_CURVED_RUN_STAIR
	,TWO_QUARTER_TURN_STAIR
	,TWO_QUARTER_WINDING_STAIR
	,TWO_STRAIGHT_RUN_STAIR
	,LADDER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcStateEnum = ENUMERATION OF
	(READWRITE
	,READONLY
	,LOCKED
	,READWRITELOCKED
	,READONLYLOCKED);
END_TYPE;

TYPE IfcStructuralCurveActivityTypeEnum = ENUMERATION OF
	(CONST
	,DISCRETE
	,EQUIDISTANT
	,LINEAR
	,PARABOLA
	,POLYGONAL
	,SINUS
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcStructuralCurveMemberTypeEnum = ENUMERATION OF
	(CABLE
	,COMPRESSION_MEMBER
	,PIN_JOINED_MEMBER
	,RIGID_JOINED_MEMBER
	,TENSION_MEMBER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcStructuralSurfaceActivityTypeEnum = ENUMERATION OF
	(BILINEAR
	,CONST
	,DISCRETE
	,ISOCONTOUR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcStructuralSurfaceMemberTypeEnum = ENUMERATION OF
	(BENDING_ELEMENT
	,MEMBRANE_ELEMENT
	,SHELL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSubContractResourceTypeEnum = ENUMERATION OF
	(PURCHASE
	,WORK
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSurfaceFeatureTypeEnum = ENUMERATION OF
	(DEFECT
	,MARK
	,TAG
	,TREATMENT
	,HATCHMARKING
	,LINEMARKING
	,PAVEMENTSURFACEMARKING
	,SYMBOLMARKING
	,NONSKIDSURFACING
	,RUMBLESTRIP
	,TRANSVERSERUMBLESTRIP
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSurfaceSide = ENUMERATION OF
	(POSITIVE
	,NEGATIVE
	,BOTH);
END_TYPE;

TYPE IfcSwitchingDeviceTypeEnum = ENUMERATION OF
	(CONTACTOR
	,DIMMERSWITCH
	,EMERGENCYSTOP
	,KEYPAD
	,MOMENTARYSWITCH
	,SELECTORSWITCH
	,STARTER
	,SWITCHDISCONNECTOR
	,TOGGLESWITCH
	,RELAY
	,START_AND_STOP_EQUIPMENT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcSystemFurnitureElementTypeEnum = ENUMERATION OF
	(PANEL
	,WORKSURFACE
	,SUBRACK
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTankTypeEnum = ENUMERATION OF
	(BASIN
	,BREAKPRESSURE
	,EXPANSION
	,FEEDANDEXPANSION
	,PRESSUREVESSEL
	,STORAGE
	,VESSEL
	,OILRETENTIONTRAY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTaskDurationEnum = ENUMERATION OF
	(ELAPSEDTIME
	,WORKTIME
	,NOTDEFINED);
END_TYPE;

TYPE IfcTaskTypeEnum = ENUMERATION OF
	(ATTENDANCE
	,CONSTRUCTION
	,DEMOLITION
	,DISMANTLE
	,DISPOSAL
	,INSTALLATION
	,LOGISTIC
	,MAINTENANCE
	,MOVE
	,OPERATION
	,REMOVAL
	,RENOVATION
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTendonAnchorTypeEnum = ENUMERATION OF
	(COUPLER
	,FIXED_END
	,TENSIONING_END
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTendonConduitTypeEnum = ENUMERATION OF
	(COUPLER
	,DIABOLO
	,DUCT
	,GROUTING_DUCT
	,TRUMPET
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTendonTypeEnum = ENUMERATION OF
	(BAR
	,COATED
	,STRAND
	,WIRE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTextPath = ENUMERATION OF
	(LEFT
	,RIGHT
	,UP
	,DOWN);
END_TYPE;

TYPE IfcTimeSeriesDataTypeEnum = ENUMERATION OF
	(CONTINUOUS
	,DISCRETE
	,DISCRETEBINARY
	,PIECEWISEBINARY
	,PIECEWISECONSTANT
	,PIECEWISECONTINUOUS
	,NOTDEFINED);
END_TYPE;

TYPE IfcTrackElementTypeEnum = ENUMERATION OF
	(BLOCKINGDEVICE
	,TRACKENDOFALIGNMENT
	,DERAILER
	,SPEEDREGULATOR
	,VEHICLESTOP
	,FROG
	,HALF_SET_OF_BLADES
	,SLEEPER
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTransformerTypeEnum = ENUMERATION OF
	(CURRENT
	,FREQUENCY
	,INVERTER
	,RECTIFIER
	,VOLTAGE
	,CHOPPER
	,COMBINED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTransitionCode = ENUMERATION OF
	(DISCONTINUOUS
	,CONTINUOUS
	,CONTSAMEGRADIENT
	,CONTSAMEGRADIENTSAMECURVATURE);
END_TYPE;

TYPE IfcTransitionCurveType = ENUMERATION OF
	(BIQUADRATICPARABOLA
	,BLOSSCURVE
	,CLOTHOIDCURVE
	,COSINECURVE
	,CUBICPARABOLA
	,SINECURVE);
END_TYPE;

TYPE IfcTransportElementFixedTypeEnum = ENUMERATION OF
	(HAULINGGEAR
	,STRUCTURE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTransportElementNonFixedTypeEnum = ENUMERATION OF
	(CARGO
	,ROLLINGSTOCK
	,VEHICLE
	,VEHICLEAIR
	,VEHICLEMARINE
	,VEHICLETRACKED
	,VEHICLEWHEELED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcTrimmingPreference = ENUMERATION OF
	(CARTESIAN
	,PARAMETER
	,UNSPECIFIED);
END_TYPE;

TYPE IfcTubeBundleTypeEnum = ENUMERATION OF
	(FINNED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcUnitEnum = ENUMERATION OF
	(ABSORBEDDOSEUNIT
	,AMOUNTOFSUBSTANCEUNIT
	,AREAUNIT
	,DOSEEQUIVALENTUNIT
	,ELECTRICCAPACITANCEUNIT
	,ELECTRICCHARGEUNIT
	,ELECTRICCONDUCTANCEUNIT
	,ELECTRICCURRENTUNIT
	,ELECTRICRESISTANCEUNIT
	,ELECTRICVOLTAGEUNIT
	,ENERGYUNIT
	,FORCEUNIT
	,FREQUENCYUNIT
	,ILLUMINANCEUNIT
	,INDUCTANCEUNIT
	,LENGTHUNIT
	,LUMINOUSFLUXUNIT
	,LUMINOUSINTENSITYUNIT
	,MAGNETICFLUXDENSITYUNIT
	,MAGNETICFLUXUNIT
	,MASSUNIT
	,PLANEANGLEUNIT
	,POWERUNIT
	,PRESSUREUNIT
	,RADIOACTIVITYUNIT
	,SOLIDANGLEUNIT
	,THERMODYNAMICTEMPERATUREUNIT
	,TIMEUNIT
	,VOLUMEUNIT
	,USERDEFINED);
END_TYPE;

TYPE IfcUnitaryControlElementTypeEnum = ENUMERATION OF
	(ALARMPANEL
	,CONTROLPANEL
	,GASDETECTIONPANEL
	,HUMIDISTAT
	,INDICATORPANEL
	,MIMICPANEL
	,THERMOSTAT
	,WEATHERSTATION
	,COMBINED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcUnitaryEquipmentTypeEnum = ENUMERATION OF
	(AIRCONDITIONINGUNIT
	,AIRHANDLER
	,DEHUMIDIFIER
	,ROOFTOPUNIT
	,SPLITSYSTEM
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcValveTypeEnum = ENUMERATION OF
	(AIRRELEASE
	,ANTIVACUUM
	,CHANGEOVER
	,CHECK
	,COMMISSIONING
	,DIVERTING
	,DOUBLECHECK
	,DOUBLEREGULATING
	,DRAWOFFCOCK
	,FAUCET
	,FLUSHING
	,GASCOCK
	,GASTAP
	,ISOLATING
	,MIXING
	,PRESSUREREDUCING
	,PRESSURERELIEF
	,REGULATING
	,SAFETYCUTOFF
	,STEAMTRAP
	,STOPCOCK
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcVibrationDamperTypeEnum = ENUMERATION OF
	(AXIAL_YIELD
	,BENDING_YIELD
	,FRICTION
	,RUBBER
	,SHEAR_YIELD
	,VISCOUS
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcVibrationIsolatorTypeEnum = ENUMERATION OF
	(BASE
	,COMPRESSION
	,SPRING
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcVoidingFeatureTypeEnum = ENUMERATION OF
	(CHAMFER
	,CUTOUT
	,EDGE
	,HOLE
	,MITER
	,NOTCH
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWallTypeEnum = ENUMERATION OF
	(ELEMENTEDWALL
	,MOVABLE
	,PARAPET
	,PARTITIONING
	,PLUMBINGWALL
	,POLYGONAL
	,RETAININGWALL
	,SHEAR
	,SOLIDWALL
	,STANDARD
	,WAVEWALL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWasteTerminalTypeEnum = ENUMERATION OF
	(FLOORTRAP
	,FLOORWASTE
	,GULLYSUMP
	,GULLYTRAP
	,ROOFDRAIN
	,WASTEDISPOSALUNIT
	,WASTETRAP
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWindowPanelOperationEnum = ENUMERATION OF
	(SIDEHUNGRIGHTHAND
	,SIDEHUNGLEFTHAND
	,TILTANDTURNRIGHTHAND
	,TILTANDTURNLEFTHAND
	,TOPHUNG
	,BOTTOMHUNG
	,PIVOTHORIZONTAL
	,PIVOTVERTICAL
	,SLIDINGHORIZONTAL
	,SLIDINGVERTICAL
	,REMOVABLECASEMENT
	,FIXEDCASEMENT
	,OTHEROPERATION
	,NOTDEFINED);
END_TYPE;

TYPE IfcWindowPanelPositionEnum = ENUMERATION OF
	(LEFT
	,MIDDLE
	,RIGHT
	,BOTTOM
	,TOP
	,NOTDEFINED);
END_TYPE;

TYPE IfcWindowStyleConstructionEnum = ENUMERATION OF
	(ALUMINIUM
	,HIGH_GRADE_STEEL
	,STEEL
	,WOOD
	,ALUMINIUM_WOOD
	,PLASTIC
	,OTHER_CONSTRUCTION
	,NOTDEFINED);
END_TYPE;

TYPE IfcWindowStyleOperationEnum = ENUMERATION OF
	(SINGLE_PANEL
	,DOUBLE_PANEL_VERTICAL
	,DOUBLE_PANEL_HORIZONTAL
	,TRIPLE_PANEL_VERTICAL
	,TRIPLE_PANEL_BOTTOM
	,TRIPLE_PANEL_TOP
	,TRIPLE_PANEL_LEFT
	,TRIPLE_PANEL_RIGHT
	,TRIPLE_PANEL_HORIZONTAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWindowTypeEnum = ENUMERATION OF
	(LIGHTDOME
	,SKYLIGHT
	,WINDOW
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWindowTypePartitioningEnum = ENUMERATION OF
	(SINGLE_PANEL
	,DOUBLE_PANEL_VERTICAL
	,DOUBLE_PANEL_HORIZONTAL
	,TRIPLE_PANEL_VERTICAL
	,TRIPLE_PANEL_BOTTOM
	,TRIPLE_PANEL_TOP
	,TRIPLE_PANEL_LEFT
	,TRIPLE_PANEL_RIGHT
	,TRIPLE_PANEL_HORIZONTAL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWorkCalendarTypeEnum = ENUMERATION OF
	(FIRSTSHIFT
	,SECONDSHIFT
	,THIRDSHIFT
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWorkPlanTypeEnum = ENUMERATION OF
	(ACTUAL
	,BASELINE
	,PLANNED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcWorkScheduleTypeEnum = ENUMERATION OF
	(ACTUAL
	,BASELINE
	,PLANNED
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

ENTITY Ifc3dStructureGauge
 SUBTYPE OF (IfcSpecifications);
END_ENTITY;

ENTITY IfcAbsJoint
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcInsulatedJointWithFishplate
	,IfcInsulatedJoint
	,IfcEmergencyFishplate
	,IfcNotInsulatedJointWithFishplate
	,IfcWeldedJoint
	,IfcBondedJoint))
	Arrangement : IfcArrangement;
	Belongs to panel type : IfcPanelType;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Length : IfcLengthPositive0;
	Lifting Bracket : IfcBoolean;
	Location in the panel : IfcNewCoordinatesLocal;
	Manufacturer : IfcJointInstaller;
	Manufacturing Date : IfcDate;
	Number of screws : IfcIntegerPositive0;
	Position : IfcTrackAt;
	Production Type : IfcJointProductionType;
	Putting into operation date : IfcDate;
	Rail properties of adjacent rails : IfcRailProfile;
	Relative Position : IfcRelativePosition;
	Track edge : IfcIdentifier;
END_ENTITY;

ENTITY IfcAbsMechanicalEquipment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcBlockingDevice
	,IfcControllableRetarder
	,IfcTrackScale
	,IfcSpeedRegulator
	,IfcBiasLoadedInspector))
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Track edge : IfcIdentifier;
END_ENTITY;

ENTITY IfcAbsNetworkElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLineSection));
END_ENTITY;

ENTITY IfcAbsPanel
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTrackPanel
	,IfcDilatationPanel
	,IfcTurnoutPanel));
	Disassembly Date : IfcDate;
	Installation date : IfcDate;
	Installation plan : IfcText;
	Manufacturing Date : IfcDate;
	Position : IfcTrackAt;
	Putting into operation date : IfcDate;
	Track edge : IfcIdentifier;
END_ENTITY;

ENTITY IfcAbsSignallingEquipment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDerailer
	,IfcInputOutputDeviceOfTrackCircuit
	,IfcBalise
	,IfcAxleCountingEquipment
	,IfcAbsSignallingNonTracksideEquipment
	,IfcTrackCiruitLimits
	,IfcDetector
	,IfcSignal
	,IfcPassiveElectronicComponentOfTrackCircuit
	,IfcLock
	,IfcTurnoutSignallingEquipment
	,IfcLevelCrossingEqipment
	,IfcTrainProtectionEquipment));
 INVERSE
	provides energy to : Battery FOR None;
	provides protection to : Housing FOR None;
END_ENTITY;

ENTITY IfcAbsSignallingNonTracksideEquipment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcControlEquipment
	,IfcFullExtronicExecutionUnit))
 SUBTYPE OF (IfcAbsSignallingEquipment);
END_ENTITY;

ENTITY IfcAbsSleeper
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSleeper
	,IfcHollowSleeper))
	Coating : IfcSleeperCoating;
	Condition : IfcInstalledCondition;
	Contamination : IfcBoolean;
	Dilatation-Panel-Position : IfcIdentifier;
	Disassembly date : IfcDate;
	Electrical insulation : IfcBoolean;
	Equipment : IfcBoolean;
	Fastening Type : IfcFasteningType;
	Installation date : IfcDate;
	Location of variable spacing end : IfcNewDistancePositive0;
	Location of variable spacing start : IfcNewDistanceNonNegative0;
	Manufacturer : IfcSleeperManufacturer;
	Manufacturing date : IfcDate;
	Number of axles : IfcInteger;
	Panel-Sequence : IfcInteger;
	Putting into operation date : IfcDate;
	Sleeper dimension : IfcNumeric;
	Sleeper model : IfcSleeperModel;
	Sleeper type : IfcSleeperType;
	Technical standard / norm : IfcTechnicalStandard;
	Track / Turnout panel : IfcIdentifier;
	Track-Panel-Position : IfcNewDistancePositive0;
	Turnout-Panel-Position : IfcIdentifier;
	Undersleeperpad : IfcSleeperUndersleeperpad;
	Work company : IfcInstallerCompany;
END_ENTITY;

ENTITY IfcAbsTelecomObject
 SUPERTYPE OF (ONEOF
	(IfcTelecomPassiveEquipment
	,IfcTelecomActiveEquipment));
END_ENTITY;

ENTITY IfcAbsTrackCovering
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRailwayCrossing
	,IfcEmbeddedTrackForTraffic
	,IfcCessBetweenRails
	,IfcSoundAbsorption))
END_ENTITY;

ENTITY IfcAbsTrackStrengthening
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRailBrace
	,IfcPanelStrengthening))
END_ENTITY;

ENTITY IfcAbsTrackStrengtheningEquipment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSleeperCap
	,IfcRailClamp))
	Disassembly date : IfcDate;
	Installation date : IfcDate;
	Manufacturer : IfcTrackStrengtheningManufacturer;
	Manufacturing date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation date : IfcDate;
	Rail clamp : IfcRailClampType;
	Relative Position : IfcRelativePosition;
	Sleeper : IfcIdentifier;
	Sleeper cap type : IfcSleeperCapType;
	Sleeper type compatibility : IfcTrackStrengtheningSleeperCompatibility;
	Type / model : IfcStrengtheningType;
END_ENTITY;

ENTITY IfcAcControlPanel
 SUBTYPE OF (IfcSubstationControlEquipment);
END_ENTITY;

ENTITY IfcAccessPoint
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcAccessShaft;
END_ENTITY;

ENTITY IfcAccessoryArea;
END_ENTITY;

ENTITY IfcAcknowledgementCenter
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcAcousticSignal
 SUBTYPE OF (IfcLcTrafficSignal);
END_ENTITY;

ENTITY IfcActionRequest
 SUBTYPE OF (IfcControl);
	PredefinedType : OPTIONAL IfcActionRequestTypeEnum;
	Status : OPTIONAL IfcLabel;
	LongDescription : OPTIONAL IfcText;
END_ENTITY;

ENTITY IfcActiveBalise
 SUBTYPE OF (IfcBalise);
END_ENTITY;

ENTITY IfcActiveSignal
 SUBTYPE OF (IfcPhysicalSignal);
END_ENTITY;

ENTITY IfcActor
 SUPERTYPE OF (ONEOF
	(IfcOccupant))
 SUBTYPE OF (IfcObject);
	TheActor : IfcActorSelect;
 INVERSE
	IsActingUpon : SET  OF IfcRelAssignsToActor FOR RelatingActor;
END_ENTITY;

ENTITY IfcActorRole;
	Role : IfcRoleEnum;
	UserDefinedRole : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
 INVERSE
	HasExternalReference : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
 WHERE
	WR1 : (Role <> IfcRoleEnum.USERDEFINED) OR
((Role = IfcRoleEnum.USERDEFINED) AND
  EXISTS(SELF.UserDefinedRole));
END_ENTITY;

ENTITY IfcActuator
 SUBTYPE OF (IfcDistributionControlElement);
	PredefinedType : OPTIONAL IfcActuatorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcActuatorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcActuatorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCBUILDINGCONTROLSDOMAIN.IFCACTUATORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcActuator
 SUPERTYPE OF (ONEOF
	(IfcManualActuators
	,IfcElectricalActuators
	,IfcMechanicalActuators));
END_ENTITY;

ENTITY IfcActuatorType
 SUBTYPE OF (IfcDistributionControlElementType);
	PredefinedType : IfcActuatorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcActuatorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcActuatorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcAddress
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPostalAddress
	,IfcTelecomAddress));
	Purpose : OPTIONAL IfcAddressTypeEnum;
	Description : OPTIONAL IfcText;
	UserDefinedPurpose : OPTIONAL IfcLabel;
 INVERSE
	OfPerson : SET  OF IfcPerson FOR Addresses;
	OfOrganization : SET  OF IfcOrganization FOR Addresses;
 WHERE
	WR1 : (NOT(EXISTS(Purpose))) OR
((Purpose <> IfcAddressTypeEnum.USERDEFINED) OR
((Purpose = IfcAddressTypeEnum.USERDEFINED) AND
  EXISTS(SELF.UserDefinedPurpose)));
END_ENTITY;

ENTITY IfcAdvancedBrep
 SUPERTYPE OF (ONEOF
	(IfcAdvancedBrepWithVoids))
 SUBTYPE OF (IfcManifoldSolidBrep);
 WHERE
	HasAdvancedFaces : SIZEOF(QUERY(Afs <* SELF\IfcManifoldSolidBrep.Outer.CfsFaces |
  (NOT ('IFCTOPOLOGYRESOURCE.IFCADVANCEDFACE' IN TYPEOF(Afs)))
)) = 0;
END_ENTITY;

ENTITY IfcAdvancedBrepWithVoids
 SUBTYPE OF (IfcAdvancedBrep);
	Voids : SET  OF IfcClosedShell;
 WHERE
	VoidsHaveAdvancedFaces : SIZEOF (QUERY (Vsh <* Voids |
  SIZEOF (QUERY (Afs <* Vsh.CfsFaces |
  (NOT ('IFCTOPOLOGYRESOURCE.IFCADVANCEDFACE' IN TYPEOF(Afs)))
  )) = 0
)) = 0;
END_ENTITY;

ENTITY IfcAdvancedFace
 SUBTYPE OF (IfcFaceSurface);
 WHERE
	ApplicableSurface : SIZEOF (
['IFCGEOMETRYRESOURCE.IFCELEMENTARYSURFACE',
 'IFCGEOMETRYRESOURCE.IFCSWEPTSURFACE',
 'IFCGEOMETRYRESOURCE.IFCBSPLINESURFACE'] *
TYPEOF(SELF\IfcFaceSurface.FaceSurface)) = 1;
	RequiresEdgeCurve : SIZEOF(QUERY (ElpFbnds <* 
  QUERY (Bnds <* SELF\IfcFace.Bounds |
    'IFCTOPOLOGYRESOURCE.IFCEDGELOOP' IN TYPEOF(Bnds.Bound)) |
     NOT (SIZEOF (QUERY (Oe <* ElpFbnds.Bound\IfcEdgeLoop.EdgeList |
       NOT('IFCTOPOLOGYRESOURCE.IFCEDGECURVE' IN 
       TYPEOF(Oe\IfcOrientedEdge.EdgeElement)
  ))) = 0
))) = 0;
	ApplicableEdgeCurves : SIZEOF(QUERY (ElpFbnds <* 
  QUERY (Bnds <* SELF\IfcFace.Bounds |
    'IFCTOPOLOGYRESOURCE.IFCEDGELOOP' IN TYPEOF(Bnds.Bound)) |
     NOT (SIZEOF (QUERY (Oe <* ElpFbnds.Bound\IfcEdgeLoop.EdgeList |
       NOT (SIZEOF (['IFCGEOMETRYRESOURCE.IFCLINE',
                     'IFCGEOMETRYRESOURCE.IFCCONIC',
                     'IFCGEOMETRYRESOURCE.IFCPOLYLINE',
                     'IFCGEOMETRYRESOURCE.IFCBSPLINECURVE'] *
         TYPEOF(Oe\IfcOrientedEdge.EdgeElement\IfcEdgeCurve.EdgeGeometry)) = 1 )
  )) = 0
))) = 0;
END_ENTITY;

ENTITY IfcAirTerminal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcAirTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcAirTerminalTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcAirTerminalTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCAIRTERMINALTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcAirTerminalBox
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcAirTerminalBoxTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcAirTerminalBoxTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcAirTerminalBoxTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCAIRTERMINALBOXTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcAirTerminalBoxType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcAirTerminalBoxTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcAirTerminalBoxTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAirTerminalBoxTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcAirTerminalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcAirTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcAirTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAirTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcAirToAirHeatRecovery
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcAirToAirHeatRecoveryTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcAirToAirHeatRecoveryTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcAirToAirHeatRecoveryTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCAIRTOAIRHEATRECOVERYTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcAirToAirHeatRecoveryType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcAirToAirHeatRecoveryTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcAirToAirHeatRecoveryTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAirToAirHeatRecoveryTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcAlarm
 SUBTYPE OF (IfcDistributionControlElement);
	PredefinedType : OPTIONAL IfcAlarmTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcAlarmTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcAlarmTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCBUILDINGCONTROLSDOMAIN.IFCALARMTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcAlarmType
 SUBTYPE OF (IfcDistributionControlElementType);
	PredefinedType : IfcAlarmTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcAlarmTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAlarmTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcAlignment
 SUBTYPE OF (IfcLinearPositioningElement);
	PredefinedType : OPTIONAL IfcAlignmentTypeEnum;
END_ENTITY;

ENTITY IfcAlignment2DCant
 SUBTYPE OF (IfcAxisLateralInclination);
	Segments : IfcAlignment2DCantSegment;
	RailHeadDistance : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcAlignment2DCantSegLine
 SUBTYPE OF (IfcAlignment2DCantSegment);
END_ENTITY;

ENTITY IfcAlignment2DCantSegTransition
 SUBTYPE OF (IfcAlignment2DCantSegment);
	StartRadius : IfcPositiveLengthMeasure;
	EndRadius : IfcPositiveLengthMeasure;
	IsStartRadiusCCW : IfcBoolean;
	IsEndRadiusCCW : IfcBoolean;
	TransitionCurveType : IfcTransitionCurveType;
END_ENTITY;

ENTITY IfcAlignment2DCantSegment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignment2DCantSegTransition
	,IfcAlignment2DCantSegLine))
 SUBTYPE OF (IfcAlignment2DSegment);
	StartDistAlong : IfcPositiveLengthMeasure;
	ToCant : IfcAlignment2DCant;
	HorizontalLength : IfcPositiveLengthMeasure;
	StartCantLeft : IfcLengthMeasure;
	EndCantLeft : IfcLengthMeasure;
	StartCantRight : IfcLengthMeasure;
	EndCantRight : IfcLengthMeasure;
END_ENTITY;

ENTITY IfcAlignment2DHorizontal
 SUBTYPE OF (IfcGeometricRepresentationItem);
	StartDistAlong : OPTIONAL IfcLengthMeasure;
	Segments : LIST  OF IfcAlignment2DHorizontalSegment;
 INVERSE
	ToAlignmentCurve : SET  OF IfcAlignmentCurve FOR Horizontal;
END_ENTITY;

ENTITY IfcAlignment2DHorizontalSegment
 SUBTYPE OF (IfcAlignment2DSegment);
	CurveGeometry : IfcCurveSegment2D;
 INVERSE
	ToHorizontal : SET [1:1] OF IfcAlignment2DHorizontal FOR Segments;
END_ENTITY;

ENTITY IfcAlignment2DSegment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignment2DVerticalSegment
	,IfcAlignment2DHorizontalSegment
	,IfcAlignment2DCantSegment))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	TangentialContinuity : OPTIONAL IfcBoolean;
	StartTag : OPTIONAL IfcLabel;
	EndTag : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcAlignment2DVerSegCircularArc
 SUBTYPE OF (IfcAlignment2DVerticalSegment);
	Radius : IfcPositiveLengthMeasure;
	IsConvex : IfcBoolean;
END_ENTITY;

ENTITY IfcAlignment2DVerSegLine
 SUBTYPE OF (IfcAlignment2DVerticalSegment);
END_ENTITY;

ENTITY IfcAlignment2DVerSegParabolicArc
 SUBTYPE OF (IfcAlignment2DVerticalSegment);
	ParabolaConstant : IfcPositiveLengthMeasure;
	IsConvex : IfcBoolean;
END_ENTITY;

ENTITY IfcAlignment2DVerSegTransition
 SUBTYPE OF (IfcAlignment2DVerticalSegment);
	StartRadius : IfcPositiveLengthMeasure;
	EndRadius : IfcPositiveLengthMeasure;
	IsStartRadiusCCW : IfcBoolean;
	IsEndRadiusCCW : IfcBoolean;
	TransitionCurveType : IfcTransitionCurveType;
END_ENTITY;

ENTITY IfcAlignment2DVertical
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Segments : LIST  OF IfcAlignment2DVerticalSegment;
 INVERSE
	ToAlignmentCurve : SET [1:1] OF IfcAlignmentCurve FOR Vertical;
END_ENTITY;

ENTITY IfcAlignment2DVerticalSegment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignment2DVerSegLine
	,IfcAlignment2DVerSegCircularArc
	,IfcAlignment2DVerSegParabolicArc
	,IfcAlignment2DVerSegTransition))
 SUBTYPE OF (IfcAlignment2DSegment);
	StartDistAlong : IfcLengthMeasure;
	HorizontalLength : IfcPositiveLengthMeasure;
	StartHeight : IfcLengthMeasure;
	StartGradient : IfcRatioMeasure;
 INVERSE
	ToVertical : SET [1:1] OF IfcAlignment2DVertical FOR Segments;
END_ENTITY;

ENTITY IfcAlignmentCantSegment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignmentCantSegmentTransition
	,IfcAlignmentCantSegmentLine));
	Endig Cant right : IfcDouble;
	Ending Cant left : IfcDouble;
	Segment Length : IfcDouble;
	Starting Cant left : IfcDouble;
	Starting Cant right : IfcDouble;
	Starting Point : IfcDistanceAlongPoint;
	Starting point alternative : IfcCartesianPoint;
	Tangential Continuity : IfcEnum;
END_ENTITY;

ENTITY IfcAlignmentCantSegmentLine
 SUBTYPE OF (IfcAlignmentCantSegment);
	Smoothing : IfcBoolean;
END_ENTITY;

ENTITY IfcAlignmentCantSegmentTransition
 SUBTYPE OF (IfcAlignmentCantSegment);
	Final Radius : IfcDouble;
	Initial Radius : IfcDouble;
	Transition Type : IfcTransitionType;
END_ENTITY;

ENTITY IfcAlignmentCurve
 SUBTYPE OF (IfcBoundedCurve);
	Horizontal : IfcAlignment2DHorizontal;
	Vertical : OPTIONAL IfcAlignment2DVertical;
	Tag : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcAlignmentCurve;
	Acceptable tangential tolerance : IfcDouble;
END_ENTITY;

ENTITY IfcAlignmentHorizontal;
END_ENTITY;

ENTITY IfcAlignmentHorizontalSegment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignmentHorizontalSegmentLine
	,IfcAlignmentHorizontalSegmentArc
	,IfcAlignmentHorizontalSegmentTransition));
	Segment Length : IfcDouble;
	Starting Direction : IfcDouble;
	Starting Point : IfcCartesianPoint;
	Tangential Continuity : IfcEnum;
END_ENTITY;

ENTITY IfcAlignmentHorizontalSegmentArc
 SUBTYPE OF (IfcAlignmentHorizontalSegment);
	Radius : IfcDouble;
END_ENTITY;

ENTITY IfcAlignmentHorizontalSegmentLine
 SUBTYPE OF (IfcAlignmentHorizontalSegment);
END_ENTITY;

ENTITY IfcAlignmentHorizontalSegmentTransition
 SUBTYPE OF (IfcAlignmentHorizontalSegment);
	Final Radius : IfcDouble;
	Initial Radius : IfcDouble;
	Transition Type : IfcTransitionType;
END_ENTITY;

ENTITY IfcAlignmentLateralInclination
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignmentSuperelevation
	,IfcRailwayAlignmentCant));
END_ENTITY;

ENTITY IfcAlignmentSuperelevation
 SUBTYPE OF (IfcAlignmentLateralInclination);
END_ENTITY;

ENTITY IfcAlignmentVertical;
	Reference axis : IfcEnum;
END_ENTITY;

ENTITY IfcAlignmentVerticalSegment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignmentVerticalSegmentArc
	,IfcAlignmentVerticalSegmentLine
	,IfcAlignmentVerticalSegmentTransition));
	Segment Length : IfcDouble;
	Starting Direction : IfcDouble;
	Starting Point : IfcDistanceAlongPoint;
	Starting Point Elevation : IfcDouble;
	Starting Point alternative : IfcCartesianPoint;
	Tangential Continuity : IfcEnum;
END_ENTITY;

ENTITY IfcAlignmentVerticalSegmentArc
 SUBTYPE OF (IfcAlignmentVerticalSegment);
	Radius : IfcDouble;
END_ENTITY;

ENTITY IfcAlignmentVerticalSegmentLine
 SUBTYPE OF (IfcAlignmentVerticalSegment);
END_ENTITY;

ENTITY IfcAlignmentVerticalSegmentTransition
 SUBTYPE OF (IfcAlignmentVerticalSegment);
	Final Radius : IfcDouble;
	Initial Radius : IfcDouble;
	Transition Type : IfcTransitionType;
END_ENTITY;

ENTITY IfcAlongTrackFeeder
 SUBTYPE OF (IfcFeederLine);
END_ENTITY;

ENTITY IfcAnchoringBar;
END_ENTITY;

ENTITY IfcAnemometrograph
 SUBTYPE OF (IfcSensor);
END_ENTITY;

ENTITY IfcAnnotation
 SUBTYPE OF (IfcProduct);
	PredefinedType : IfcAnnotationTypeEnum;
 INVERSE
	ContainedInStructure : SET [0:1] OF IfcRelContainedInSpatialStructure FOR RelatedElements;
END_ENTITY;

ENTITY IfcAnnotationFillArea
 SUBTYPE OF (IfcGeometricRepresentationItem);
	OuterBoundary : IfcCurve;
	InnerBoundaries : OPTIONAL SET  OF IfcCurve;
END_ENTITY;

ENTITY IfcAnotherclass;
	yetAnotherAttribute : IfcBoolean;
END_ENTITY;

ENTITY IfcAntenna
 SUBTYPE OF (IfcTelecomPassiveEquipment);
END_ENTITY;

ENTITY IfcAntiArcingDevice;
END_ENTITY;

ENTITY IfcAntiFallDevice
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcAntiTrespassingGuard;
END_ENTITY;

ENTITY IfcAnticlimbing
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcApplication;
	ApplicationDeveloper : IfcOrganization;
	Version : IfcLabel;
	ApplicationFullName : IfcLabel;
	ApplicationIdentifier : IfcIdentifier;
 UNIQUE
	UR1 : ApplicationIdentifier;
	UR2 : ApplicationFullName, Version;
END_ENTITY;

ENTITY IfcAppliedValue
 SUPERTYPE OF (ONEOF
	(IfcCostValue));
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	AppliedValue : OPTIONAL IfcAppliedValueSelect;
	UnitBasis : OPTIONAL IfcMeasureWithUnit;
	ApplicableDate : OPTIONAL IfcDate;
	FixedUntilDate : OPTIONAL IfcDate;
	Category : OPTIONAL IfcLabel;
	Condition : OPTIONAL IfcLabel;
	ArithmeticOperator : OPTIONAL IfcArithmeticOperatorEnum;
	Components : OPTIONAL LIST  OF IfcAppliedValue;
 INVERSE
	HasExternalReference : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
END_ENTITY;

ENTITY IfcApproval;
	Identifier : OPTIONAL IfcIdentifier;
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	TimeOfApproval : OPTIONAL IfcDateTime;
	Status : OPTIONAL IfcLabel;
	Level : OPTIONAL IfcLabel;
	Qualifier : OPTIONAL IfcText;
	RequestingApproval : OPTIONAL IfcActorSelect;
	GivingApproval : OPTIONAL IfcActorSelect;
 INVERSE
	HasExternalReferences : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
	ApprovedObjects : SET  OF IfcRelAssociatesApproval FOR RelatingApproval;
	ApprovedResources : SET  OF IfcResourceApprovalRelationship FOR RelatingApproval;
	IsRelatedWith : SET  OF IfcApprovalRelationship FOR RelatedApprovals;
	Relates : SET  OF IfcApprovalRelationship FOR RelatingApproval;
 WHERE
	HasIdentifierOrName : EXISTS (Identifier) OR EXISTS (Name);
END_ENTITY;

ENTITY IfcApprovalRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingApproval : IfcApproval;
	RelatedApprovals : SET  OF IfcApproval;
END_ENTITY;

ENTITY IfcArbitraryClosedProfileDef
 SUPERTYPE OF (ONEOF
	(IfcArbitraryProfileDefWithVoids))
 SUBTYPE OF (IfcProfileDef);
	OuterCurve : IfcCurve;
 WHERE
	WR1 : OuterCurve.Dim = 2;
	WR2 : NOT('IFCGEOMETRYRESOURCE.IFCLINE' IN TYPEOF(OuterCurve));
	WR3 : NOT('IFCGEOMETRYRESOURCE.IFCOFFSETCURVE2D' IN TYPEOF(OuterCurve));
END_ENTITY;

ENTITY IfcArbitraryOpenProfileDef
 SUPERTYPE OF (ONEOF
	(IfcCenterLineProfileDef))
 SUBTYPE OF (IfcProfileDef);
	Curve : IfcBoundedCurve;
 WHERE
	WR11 : ('IFCPROFILERESOURCE.IFCCENTERLINEPROFILEDEF' IN TYPEOF(SELF)) OR 
 (SELF\IfcProfileDef.ProfileType = IfcProfileTypeEnum.CURVE);
	WR12 : Curve.Dim = 2;
END_ENTITY;

ENTITY IfcArbitraryProfileDefWithVoids
 SUBTYPE OF (IfcArbitraryClosedProfileDef);
	InnerCurves : SET  OF IfcCurve;
 WHERE
	WR1 : SELF\IfcProfileDef.ProfileType = AREA;
	WR2 : SIZEOF(QUERY(temp <* InnerCurves | temp.Dim <> 2)) = 0;
	WR3 : SIZEOF(QUERY(temp <* InnerCurves | 'IFCGEOMETRYRESOURCE.IFCLINE' IN TYPEOF(temp))) = 0;
END_ENTITY;

ENTITY IfcAsset
 SUBTYPE OF (IfcGroup);
	Identification : OPTIONAL IfcIdentifier;
	OriginalValue : OPTIONAL IfcCostValue;
	CurrentValue : OPTIONAL IfcCostValue;
	TotalReplacementCost : OPTIONAL IfcCostValue;
	Owner : OPTIONAL IfcActorSelect;
	User : OPTIONAL IfcActorSelect;
	ResponsiblePerson : OPTIONAL IfcPerson;
	IncorporationDate : OPTIONAL IfcDate;
	DepreciatedValue : OPTIONAL IfcCostValue;
END_ENTITY;

ENTITY IfcAsymmetricIShapeProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	BottomFlangeWidth : IfcPositiveLengthMeasure;
	OverallDepth : IfcPositiveLengthMeasure;
	WebThickness : IfcPositiveLengthMeasure;
	BottomFlangeThickness : IfcPositiveLengthMeasure;
	BottomFlangeFilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	TopFlangeWidth : IfcPositiveLengthMeasure;
	TopFlangeThickness : OPTIONAL IfcPositiveLengthMeasure;
	TopFlangeFilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	BottomFlangeEdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	BottomFlangeSlope : OPTIONAL IfcPlaneAngleMeasure;
	TopFlangeEdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	TopFlangeSlope : OPTIONAL IfcPlaneAngleMeasure;
 WHERE
	ValidFlangeThickness : NOT(EXISTS(TopFlangeThickness)) OR ((BottomFlangeThickness + TopFlangeThickness) < OverallDepth);
	ValidWebThickness : (WebThickness < BottomFlangeWidth) AND (WebThickness < TopFlangeWidth);
	ValidBottomFilletRadius : (NOT(EXISTS(BottomFlangeFilletRadius))) OR 
(BottomFlangeFilletRadius <= (BottomFlangeWidth - WebThickness)/2.);
	ValidTopFilletRadius : (NOT(EXISTS(TopFlangeFilletRadius))) OR 
(TopFlangeFilletRadius <= (TopFlangeWidth - WebThickness)/2.);
END_ENTITY;

ENTITY IfcAudioVisualAppliance
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcAudioVisualApplianceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcAudioVisualApplianceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcAudioVisualApplianceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCAUDIOVISUALAPPLIANCETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcAudioVisualApplianceType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcAudioVisualApplianceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcAudioVisualApplianceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAudioVisualApplianceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcAutomaticGate
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcAutomaton;
END_ENTITY;

ENTITY IfcAutotransformer
 SUBTYPE OF (IfcPowerTransformer);
END_ENTITY;

ENTITY IfcAutotransformerPost
 SUBTYPE OF (IfcPowerSupplyFacilitySpatialStructure);
END_ENTITY;

ENTITY IfcAuxiliaryCatenaryWire
 SUBTYPE OF (IfcCatenaryWire);
END_ENTITY;

ENTITY IfcAuxiliaryElectricCabinet;
END_ENTITY;

ENTITY IfcAuxiliaryServices;
END_ENTITY;

ENTITY IfcAuxiliaryTransformer
 SUBTYPE OF (IfcPowerTransformer);
END_ENTITY;

ENTITY IfcAxis1Placement
 SUBTYPE OF (IfcPlacement);
	Axis : OPTIONAL IfcDirection;
 DERIVE
	Z : IfcDirection := NVL (IfcNormalise(Axis), IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,0.0,1.0]));
 WHERE
	AxisIs3D : (NOT (EXISTS (Axis))) OR (Axis.Dim = 3);
	LocationIs3D : SELF\IfcPlacement.Location.Dim = 3;
END_ENTITY;

ENTITY IfcAxis2Placement2D
 SUBTYPE OF (IfcPlacement);
	RefDirection : OPTIONAL IfcDirection;
 DERIVE
	P : LIST [2:2] OF IfcDirection := IfcBuild2Axes(RefDirection);
 WHERE
	RefDirIs2D : (NOT (EXISTS (RefDirection))) OR (RefDirection.Dim = 2);
	LocationIs2D : SELF\IfcPlacement.Location.Dim = 2;
END_ENTITY;

ENTITY IfcAxis2Placement3D
 SUBTYPE OF (IfcPlacement);
	Axis : OPTIONAL IfcDirection;
	RefDirection : OPTIONAL IfcDirection;
 DERIVE
	P : LIST [3:3] OF IfcDirection := IfcBuildAxes(Axis, RefDirection);
 WHERE
	LocationIs3D : SELF\IfcPlacement.Location.Dim = 3;
	AxisIs3D : (NOT (EXISTS (Axis))) OR (Axis.Dim = 3);
	RefDirIs3D : (NOT (EXISTS (RefDirection))) OR (RefDirection.Dim = 3);
	AxisToRefDirPosition : (NOT (EXISTS (Axis))) OR (NOT (EXISTS (RefDirection))) OR (IfcCrossProduct(Axis,RefDirection).Magnitude > 0.0);
	AxisAndRefDirProvision : NOT ((EXISTS (Axis)) XOR (EXISTS (RefDirection)));
END_ENTITY;

ENTITY IfcAxisLateralInclination
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAlignment2DCant))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	ToLinearAxis : IfcLinearAxisWithInclination;
END_ENTITY;

ENTITY IfcAxleCountingEquipment
 SUPERTYPE OF (ONEOF
	(IfcEvaluator
	,IfcWheelDetector))
 SUBTYPE OF (IfcAbsSignallingEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcBSplineCurve
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcBSplineCurveWithKnots))
 SUBTYPE OF (IfcBoundedCurve);
	Degree : IfcInteger;
	ControlPointsList : LIST  OF IfcCartesianPoint;
	CurveForm : IfcBSplineCurveForm;
	ClosedCurve : IfcLogical;
	SelfIntersect : IfcLogical;
 DERIVE
	UpperIndexOnControlPoints : IfcInteger := (SIZEOF(ControlPointsList) - 1);
	ControlPoints : ARRAY [0:UpperIndexOnControlPoints] OF IfcCartesianPoint := IfcListToArray(ControlPointsList,0,UpperIndexOnControlPoints);
 WHERE
	SameDim : SIZEOF(QUERY(Temp <* ControlPointsList |
  Temp.Dim <> ControlPointsList[1].Dim))
= 0;
END_ENTITY;

ENTITY IfcBSplineCurveWithKnots
 SUPERTYPE OF (ONEOF
	(IfcRationalBSplineCurveWithKnots))
 SUBTYPE OF (IfcBSplineCurve);
	KnotSpec : IfcKnotType;
 DERIVE
	UpperIndexOnKnots : IfcInteger := SIZEOF(Knots);
 WHERE
	ConsistentBSpline : IfcConstraintsParamBSpline(Degree, UpperIndexOnKnots,
UpperIndexOnControlPoints, KnotMultiplicities, Knots);
	CorrespondingKnotLists : SIZEOF(KnotMultiplicities) = UpperIndexOnKnots;
END_ENTITY;

ENTITY IfcBSplineSurface
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcBSplineSurfaceWithKnots))
 SUBTYPE OF (IfcBoundedSurface);
	UDegree : IfcInteger;
	VDegree : IfcInteger;
	ControlPointsList : LIST  OF IfcCartesianPoint;
	SurfaceForm : IfcBSplineSurfaceForm;
	UClosed : IfcLogical;
	VClosed : IfcLogical;
	SelfIntersect : IfcLogical;
 DERIVE
	UUpper : IfcInteger := SIZEOF(ControlPointsList) - 1;
	VUpper : IfcInteger := SIZEOF(ControlPointsList[1]) - 1;
	ControlPoints : ARRAY [0:UUpper] OF ARRAY [0:VUpper] OF IfcCartesianPoint := IfcMakeArrayOfArray(ControlPointsList,
0,UUpper,0,VUpper);
END_ENTITY;

ENTITY IfcBSplineSurfaceWithKnots
 SUPERTYPE OF (ONEOF
	(IfcRationalBSplineSurfaceWithKnots))
 SUBTYPE OF (IfcBSplineSurface);
	KnotSpec : IfcKnotType;
 DERIVE
	KnotVUpper : IfcInteger := SIZEOF(VKnots);
	KnotUUpper : IfcInteger := SIZEOF(UKnots);
 WHERE
	UDirectionConstraints : IfcConstraintsParamBSpline (
  SELF\IfcBSplineSurface.UDegree, KnotUUpper, 
  SELF\IfcBSplineSurface.UUpper, UMultiplicities, UKnots);
	VDirectionConstraints : IfcConstraintsParamBSpline (
  SELF\IfcBSplineSurface.VDegree, KnotVUpper, 
  SELF\IfcBSplineSurface.VUpper, VMultiplicities, VKnots);
	CorrespondingULists : SIZEOF(UMultiplicities) = KnotUUpper;
	CorrespondingVLists : SIZEOF(VMultiplicities) = KnotVUpper;
END_ENTITY;

ENTITY IfcBalanceWeightTensioner
 SUBTYPE OF (IfcTensioningEquipment);
END_ENTITY;

ENTITY IfcBalise
 SUPERTYPE OF (ONEOF
	(IfcActiveBalise
	,IfcPassiveBalise))
 SUBTYPE OF (IfcAbsSignallingEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcBallastBed
	Ballast depth : IfcReal;
	Ballast layer type : IfcBallastLayer;
	Ballast profile : IfcBallastProfile;
	Ballast type : IfcBallastType;
	Disassembly date : IfcDate;
	Grain size : IfcBallastSize;
	Installation date : IfcDate;
	Manufacturing Date : IfcDate;
	Origins : IfcBallastManufacturer;
	Position : IfcTrackFromTo;
	Putting into operation date : IfcDate;
	Reconditioning : IfcBoolean;
	Stone type : IfcBallastStoneType;
	Track edge : IfcIdentifier;
	Work company : IfcInstallerCompany;
END_ENTITY;

ENTITY IfcBallastBedStrengthening
	Cross band : IfcReal;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation date : IfcDate;
	Track edge : IfcIdentifier;
END_ENTITY;

ENTITY IfcBandPassFilter
 SUBTYPE OF (IfcFilters);
END_ENTITY;

ENTITY IfcBandStopFilter
 SUBTYPE OF (IfcFilters);
END_ENTITY;

ENTITY IfcBanquetElement
	Access : IfcBanquetAccessType;
	Accessible by vehicle : IfcBoolean;
	Disassembly Date : IfcDate;
	Extension walkside : IfcNewRealNonNegative0;
	Installation Date : IfcDate;
	Left walkside distance : IfcNewRealNonNegative0;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Relative Position : IfcRelativePosition;
	Restriction : IfcBanquetRestrictionType;
	Right walkside distance : IfcNewRealNonNegative0;
	Track edge : IfcIdentifier;
	Type : IfcBanquetType;
	Width : IfcNewRealPositive0;
END_ENTITY;

ENTITY IfcBarrier
 SUPERTYPE OF (ONEOF
	(IfcFence));
END_ENTITY;

ENTITY IfcBarrierElement;
END_ENTITY;

ENTITY IfcBarrierLayer;
END_ENTITY;

ENTITY IfcBaseStationController
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcBaseTransceiverStation
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcBasebandUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcBases
 SUBTYPE OF (IfcFoundation);
END_ENTITY;

ENTITY IfcBattery;
END_ENTITY;

ENTITY IfcBatteryCharger;
END_ENTITY;

ENTITY IfcBeam
 SUPERTYPE OF (ONEOF
	(IfcBeamStandardCase))
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcBeamTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcBeamTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcBeamTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCBEAMTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcBeamStandardCase
 SUBTYPE OF (IfcBeam);
 WHERE
	HasMaterialProfileSetUsage : SIZEOF (QUERY(temp <* USEDIN(SELF, 'IFCKERNEL.IFCRELASSOCIATES.RELATEDOBJECTS') |
              ('IFCPRODUCTEXTENSION.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)) AND
              ('IFCMATERIALRESOURCE.IFCMATERIALPROFILESETUSAGE' IN TYPEOF(temp.RelatingMaterial))
              )) = 1;
END_ENTITY;

ENTITY IfcBeamType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcBeamTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcBeamTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBeamTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcBearerStructure;
END_ENTITY;

ENTITY IfcBearing
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcBearingTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcBearingTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcBearingTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCBEARINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcBearingType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcBearingTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcBearingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBearingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcBedJoint;
END_ENTITY;

ENTITY IfcBiasLoadedInspector
 SUBTYPE OF (IfcAbsMechanicalEquipment);
	Type : IfcBiasLoadedInspectorType;
END_ENTITY;

ENTITY IfcBirdProtection
 SUBTYPE OF (IfcEnvironnementalProtection);
END_ENTITY;

ENTITY IfcBlade
 SUPERTYPE OF (ONEOF
	(IfcBladeElementary
	,IfcBladeHsb));
	Articulated blade : IfcBoolean;
	Disassembly date : IfcDate;
	Fallback device : IfcBoolean;
	Function of turnout : IfcTrackCategory;
	Installation date : IfcDate;
	Length : IfcLengthPositive0;
	Location in the turnout / dilatation panel : IfcNewCoordinatesLocal;
	Manufacturing date : IfcDate;
	Putting into operation date : IfcDate;
	Radius of blade : IfcReal;
	Turnout / Dilatation panel : IfcIdentifier;
	Turnout blade : IfcTurnoutTongue;
	Type of Installation : IfcBladeType;
	Type of Turnout : IfcTypeOfTurnout;
END_ENTITY;

ENTITY IfcBladeElementary
 SUBTYPE OF (IfcBlade);
END_ENTITY;

ENTITY IfcBladeHsb
 SUBTYPE OF (IfcBlade);
END_ENTITY;

ENTITY IfcBladeSwitch
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcBlobTexture
 SUBTYPE OF (IfcSurfaceTexture);
	RasterFormat : IfcIdentifier;
	RasterCode : IfcBinary;
 WHERE
	SupportedRasterFormat : SELF.RasterFormat IN ['BMP', 'JPG', 'GIF', 'PNG'];
	RasterCodeByteStream : BLENGTH(RasterCode) MOD 8 = 0;
END_ENTITY;

ENTITY IfcBlock
 SUBTYPE OF (IfcCsgPrimitive3D);
	XLength : IfcPositiveLengthMeasure;
	YLength : IfcPositiveLengthMeasure;
	ZLength : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcBlockFoundation
 SUBTYPE OF (IfcOcsFoundation);
END_ENTITY;

ENTITY IfcBlockingDevice
 SUBTYPE OF (IfcAbsMechanicalEquipment);
	Type : IfcBlockingDeviceType;
END_ENTITY;

ENTITY IfcBoiler
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcBoilerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcBoilerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcBoilerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCBOILERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcBoilerType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcBoilerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcBoilerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBoilerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcBondedJoint
 SUBTYPE OF (IfcAbsJoint);
	Equipment DCGM : IfcBoolean;
	Type : IfcBondedJointType;
END_ENTITY;

ENTITY IfcBooleanClippingResult
 SUBTYPE OF (IfcBooleanResult);
 WHERE
	FirstOperandType : ('IFCGEOMETRICMODELRESOURCE.IFCSWEPTAREASOLID' IN TYPEOF(FirstOperand)) OR 
('IFCGEOMETRICMODELRESOURCE.IFCSWEPTDISCSOLID' IN TYPEOF(FirstOperand)) OR 
('IFCGEOMETRICMODELRESOURCE.IFCBOOLEANCLIPPINGRESULT' IN TYPEOF(FirstOperand));
	SecondOperandType : ('IFCGEOMETRICMODELRESOURCE.IFCHALFSPACESOLID' IN TYPEOF(SecondOperand));
	OperatorType : Operator = DIFFERENCE;
END_ENTITY;

ENTITY IfcBooleanResult
 SUPERTYPE OF (ONEOF
	(IfcBooleanClippingResult))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Operator : IfcBooleanOperator;
	FirstOperand : IfcBooleanOperand;
	SecondOperand : IfcBooleanOperand;
 DERIVE
	Dim : IfcDimensionCount := FirstOperand.Dim;
 WHERE
	SameDim : FirstOperand.Dim = SecondOperand.Dim;
	FirstOperandClosed : NOT('IFCGEOMETRICMODELRESOURCE.IFCTESSELLATEDFACESET' IN TYPEOF(FirstOperand)) OR (EXISTS(FirstOperand.Closed) AND FirstOperand.Closed);
	SecondOperandClosed : NOT('IFCGEOMETRICMODELRESOURCE.IFCTESSELLATEDFACESET' IN TYPEOF(SecondOperand)) OR (EXISTS(SecondOperand.Closed) AND SecondOperand.Closed);
END_ENTITY;

ENTITY IfcBoosterTransformer
 SUBTYPE OF (IfcPowerTransformer);
END_ENTITY;

ENTITY IfcBoostingCable;
END_ENTITY;

ENTITY IfcBorehole
 SUBTYPE OF (IfcGeotechnicalAssembly);
END_ENTITY;

ENTITY IfcBottomEquipmentAccessZone
 SUBTYPE OF (IfcEquipmentAccessZone);
END_ENTITY;

ENTITY IfcBoundaryCondition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcBoundaryEdgeCondition
	,IfcBoundaryFaceCondition
	,IfcBoundaryNodeCondition));
	Name : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcBoundaryCurve
 SUPERTYPE OF (ONEOF
	(IfcOuterBoundaryCurve))
 SUBTYPE OF (IfcCompositeCurveOnSurface);
 WHERE
	IsClosed : SELF\IfcCompositeCurve.ClosedCurve;
END_ENTITY;

ENTITY IfcBoundaryEdgeCondition
 SUBTYPE OF (IfcBoundaryCondition);
	TranslationalStiffnessByLengthX : OPTIONAL IfcModulusOfTranslationalSubgradeReactionSelect;
	TranslationalStiffnessByLengthY : OPTIONAL IfcModulusOfTranslationalSubgradeReactionSelect;
	TranslationalStiffnessByLengthZ : OPTIONAL IfcModulusOfTranslationalSubgradeReactionSelect;
	RotationalStiffnessByLengthX : OPTIONAL IfcModulusOfRotationalSubgradeReactionSelect;
	RotationalStiffnessByLengthY : OPTIONAL IfcModulusOfRotationalSubgradeReactionSelect;
	RotationalStiffnessByLengthZ : OPTIONAL IfcModulusOfRotationalSubgradeReactionSelect;
END_ENTITY;

ENTITY IfcBoundaryFaceCondition
 SUBTYPE OF (IfcBoundaryCondition);
	TranslationalStiffnessByAreaX : OPTIONAL IfcModulusOfSubgradeReactionSelect;
	TranslationalStiffnessByAreaY : OPTIONAL IfcModulusOfSubgradeReactionSelect;
	TranslationalStiffnessByAreaZ : OPTIONAL IfcModulusOfSubgradeReactionSelect;
END_ENTITY;

ENTITY IfcBoundaryNodeCondition
 SUPERTYPE OF (ONEOF
	(IfcBoundaryNodeConditionWarping))
 SUBTYPE OF (IfcBoundaryCondition);
	TranslationalStiffnessX : OPTIONAL IfcTranslationalStiffnessSelect;
	TranslationalStiffnessY : OPTIONAL IfcTranslationalStiffnessSelect;
	TranslationalStiffnessZ : OPTIONAL IfcTranslationalStiffnessSelect;
	RotationalStiffnessX : OPTIONAL IfcRotationalStiffnessSelect;
	RotationalStiffnessY : OPTIONAL IfcRotationalStiffnessSelect;
	RotationalStiffnessZ : OPTIONAL IfcRotationalStiffnessSelect;
END_ENTITY;

ENTITY IfcBoundaryNodeConditionWarping
 SUBTYPE OF (IfcBoundaryNodeCondition);
	WarpingStiffness : OPTIONAL IfcWarpingStiffnessSelect;
END_ENTITY;

ENTITY IfcBoundedCurve
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPolyline
	,IfcBSplineCurve
	,IfcAlignmentCurve
	,IfcIndexedPolyCurve
	,IfcCurveSegment2D
	,IfcTrimmedCurve
	,IfcCompositeCurve))
 SUBTYPE OF (IfcCurve);
 INVERSE
	PositioningElement : IfcLinearPositioningElement FOR Axis;
END_ENTITY;

ENTITY IfcBoundedSurface
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCurveBoundedSurface
	,IfcBSplineSurface
	,IfcCurveBoundedPlane
	,IfcRectangularTrimmedSurface))
 SUBTYPE OF (IfcSurface);
END_ENTITY;

ENTITY IfcBoundingBox
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Corner : IfcCartesianPoint;
	XDim : IfcPositiveLengthMeasure;
	YDim : IfcPositiveLengthMeasure;
	ZDim : IfcPositiveLengthMeasure;
 DERIVE
	Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcBox
 SUPERTYPE OF (ONEOF
	(IfcProtectionBoxOutoor
	,IfcBoxForOpticalCableAndCableConnection
	,IfcTransformerBox
	,IfcPowerDistributionBox
	,IfcOutdoorTerminalBox
	,IfcOutdoorDirectionBox))
 SUBTYPE OF (IfcHousing);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcBoxForOpticalCableAndCableConnection
 SUBTYPE OF (IfcBox);
END_ENTITY;

ENTITY IfcBoxTypeSubstation
 SUBTYPE OF (IfcSubstation);
END_ENTITY;

ENTITY IfcBoxedHalfSpace
 SUBTYPE OF (IfcHalfSpaceSolid);
	Enclosure : IfcBoundingBox;
 WHERE
	UnboundedSurface : NOT ('IFCGEOMETRYRESOURCE.IFCCURVEBOUNDEDPLANE' IN TYPEOF(SELF\IfcHalfSpaceSolid.BaseSurface));
END_ENTITY;

ENTITY IfcBridge
 SUBTYPE OF (IfcFacility);
	PredefinedType : OPTIONAL IfcBridgeTypeEnum;
END_ENTITY;

ENTITY IfcBridgePart
 SUBTYPE OF (IfcFacilityPart);
	PredefinedType : OPTIONAL IfcBridgePartTypeEnum;
END_ENTITY;

ENTITY IfcBufferZone;
END_ENTITY;

ENTITY IfcBuilding
 SUBTYPE OF (IfcFacility);
	ElevationOfRefHeight : OPTIONAL IfcLengthMeasure;
	ElevationOfTerrain : OPTIONAL IfcLengthMeasure;
	BuildingAddress : OPTIONAL IfcPostalAddress;
END_ENTITY;

ENTITY IfcBuildingElementPart
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : IfcBuildingElementPartTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcBuildingElementPartTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBuildingElementPartTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSHAREDCOMPONENTELEMENTS.IFCBUILDINGELEMENTPARTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcBuildingElementPartType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : IfcBuildingElementPartTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcBuildingElementPartTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBuildingElementPartTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcBuildingElementProxy
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcBuildingElementProxyTypeEnum;
 WHERE
	HasObjectName : EXISTS(SELF\IfcRoot.Name);
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcBuildingElementProxyTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcBuildingElementProxyTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCBUILDINGELEMENTPROXYTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcBuildingElementProxyType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcBuildingElementProxyTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcBuildingElementProxyTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBuildingElementProxyTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcBuildingFoundation
 SUBTYPE OF (IfcFoundation);
END_ENTITY;

ENTITY IfcBuildingStorey
 SUBTYPE OF (IfcSpatialStructureElement);
	Elevation : OPTIONAL IfcLengthMeasure;
END_ENTITY;

ENTITY IfcBuildingSystem
 SUBTYPE OF (IfcSystem);
	PredefinedType : IfcBuildingSystemTypeEnum;
	LongName : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcBuiltElement
 SUPERTYPE OF (ONEOF
	(IfcDeepFoundation
	,IfcDoor
	,IfcColumn
	,IfcShadingDevice
	,IfcWindow
	,IfcPavement
	,IfcMooringDevice
	,IfcPlate
	,IfcBuildingElementProxy
	,IfcMember
	,IfcCurtainWall
	,IfcFooting
	,IfcWall
	,IfcRamp
	,IfcCovering
	,IfcTrackElement
	,IfcChimney
	,IfcRoof
	,IfcNavigationElement
	,IfcBeam
	,IfcRailing
	,IfcRampFlight
	,IfcStair
	,IfcRail
	,IfcBearing
	,IfcStairFlight
	,IfcKerb
	,IfcSlab
	,IfcEarthworksElement
	,IfcCourse))
 SUBTYPE OF (IfcElement);
 WHERE
	MaxOneMaterialAssociation : SIZEOF (QUERY(temp <* SELF\IfcObjectDefinition.HasAssociations |
  'IFCPRODUCTEXTENSION.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)
  )) <= 1;
END_ENTITY;

ENTITY IfcBuiltElementType
 SUPERTYPE OF (ONEOF
	(IfcChimneyType
	,IfcCourseType
	,IfcTrackElementType
	,IfcRampType
	,IfcBuildingElementProxyType
	,IfcDeepFoundationType
	,IfcStairFlightType
	,IfcNavigationElementType
	,IfcSlabType
	,IfcWallType
	,IfcPavementType
	,IfcRampFlightType
	,IfcBearingType
	,IfcPlateType
	,IfcCoveringType
	,IfcBeamType
	,IfcRailingType
	,IfcWindowType
	,IfcStairType
	,IfcKerbType
	,IfcShadingDeviceType
	,IfcColumnType
	,IfcCurtainWallType
	,IfcMooringDeviceType
	,IfcMemberType
	,IfcRoofType
	,IfcFootingType
	,IfcDoorType
	,IfcRailType))
 SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcBuiltSystem
 SUBTYPE OF (IfcSystem);
	PredefinedType : OPTIONAL IfcBuiltSystemTypeEnum;
	LongName : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcBumper
	Absorbed energy : IfcEnergy;
	At Coordinates (former: Position) : IfcNewCoordinatesGlobal;
	Braking length : IfcLengthNonNegative0;
	Cushioning elements : IfcBumperCushioningElementsType;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Load retention : IfcNewRealNonNegative0;
	Manufacturing Date : IfcDate;
	Orientation : IfcBumperOrientation;
	Position : IfcTrackAt;
	Putting into operation Date : IfcDate;
	Removeable : IfcBoolean;
	Track edge : IfcIdentifier;
	Type : IfcBumperType;
END_ENTITY;

ENTITY IfcBurner
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcBurnerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcBurnerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcBurnerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCBURNERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcBurnerType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcBurnerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcBurnerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBurnerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcBusbar
 SUBTYPE OF (IfcElectricalConductor);
END_ENTITY;

ENTITY IfcByPassFeeder
 SUBTYPE OF (IfcFeederLine);
END_ENTITY;

ENTITY IfcCShapeProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	Depth : IfcPositiveLengthMeasure;
	Width : IfcPositiveLengthMeasure;
	WallThickness : IfcPositiveLengthMeasure;
	Girth : IfcPositiveLengthMeasure;
	InternalFilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
 WHERE
	ValidGirth : Girth < (Depth / 2.);
	ValidInternalFilletRadius : NOT(EXISTS(InternalFilletRadius)) OR
((InternalFilletRadius <= Width/2. - WallThickness) AND (InternalFilletRadius <= Depth/2. - WallThickness));
	ValidWallThickness : (WallThickness < Width/2.) AND (WallThickness < Depth/2.);
END_ENTITY;

ENTITY IfcCabinet
 SUPERTYPE OF (ONEOF
	(IfcTemporarySpeedRestrictionServerTsrsCabinet
	,IfcCabinetOfLocalInterlockingSystemActuator
	,IfcHostCabinetOfInterlockingSystem
	,IfcCabinetForApplicationServerOfMonitoringSystem
	,IfcNetworkManagementServerEmsCabinet
	,IfcCabinetOfDigitalItEquipmentControlSystem
	,IfcLeuOutdoorCabinet
	,IfcCabinetForAcquisitionEquipmentOfStationMonitoringEquipment
	,IfcDistributionCabinetOfLightningProtectionDevice
	,IfcCabinetForInternetSafetyDeviceOfMonitoringSystem
	,IfcCabinetForClockServerOfMonitoringSystem
	,IfcPioCabinetOfTrainControlCenter
	,IfcCabinetForWebServerOfMonitoringSystem
	,IfcCabinetOfSignallingTotalWiring
	,IfcCabinetOfCommunicationQualitySupervisionEquipment
	,IfcLeuCabinetOfTrainControlCenter
	,IfcCabinetofStationMonitoringEquipment
	,IfcCabinetOfInterlockingSystemElectronicTerminal
	,IfcCabinetOfExternalInformationProvidingServer
	,IfcCabinetOfPowerSupplyForLocalInterlockingSystem
	,IfcCabinetOfStorageDevice
	,IfcCabinetOfSimulationTrainingServer
	,IfcCabinetOfDistributingTerminalBoard
	,IfcCabinetOfInterlockingSystemPowerSupply
	,IfcCabinetOfCommunicationPrepositiveServer
	,IfcRbcHostCabinet
	,IfcStationCodingCompositeCabinet
	,IfcTemporarySpeedRestrictionServerTsrsCommunicationDeviceCabinet
	,IfcCabinetOfInterfaceNetwork
	,IfcCabinetForZpw2000TrackCircuitInterfaceAndMonitoringDeviceOfRelayStation
	,IfcCabinetForInterfaceServerOfMonitoringSystem
	,IfcCabinetOf25hzTrackRack
	,IfcCabinetForTrainControlCenterOfRelayStation
	,IfcCabinetOfPowerSupply
	,IfcCabinetOfBlocksUnitCombination
	,IfcCabinetOfNetworkSafetyServer
	,IfcCabinetOfDriverAndAcquisitionInterfaceEquipment
	,IfcCabinetForComputerPowerEnvironmentalMonitoringSystem
	,IfcCabinetForStationTrainControlCenterEquipmentIndoor
	,IfcCabinetForStationZpw2000TrackCircuitInterfaceAndMonitoringDevice
	,IfcCabinetForDataServerOfMonitoringSystem
	,IfcCabinetOfNetworkEquipment
	,IfcNetworkManagementServerNmsCabinet
	,IfcCabinetOfBlocksFrequencyShiftEquipment
	,IfcCabinetOfDatabaseServer
	,IfcCabinetOfSystemSoftwareManagementServer
	,IfcCabinetOfSpareMachine
	,IfcCabinetOfApplicationServer
	,IfcCabinetOfInterlockingSystemMonitoringEquipment
	,IfcCabinetForCommunicationPreprocessorOfMonitoringSystem
	,IfcElectricControlCabinetOutdoor
	,IfcCabinetForNetworkManagementServerOfMonitoringSystem
	,IfcCabinetOfStationFrequencyShift
	,IfcCabinetOfInterlockingSystemRemoteControlAndDisplay
	,IfcRbcInterfaceCabinet
	,IfcCabinetOfStationUnitBlock
	,IfcCabinetOfRepeatingQueryTerminalServer
	,IfcCabinetOfClockServer
	,IfcCabinetOfSimulationNetworkPannelEquipment
	,IfcCabinetOfInterfaceServer))
 SUBTYPE OF (IfcHousing);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcCabinetForAcquisitionEquipmentOfStationMonitoringEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForApplicationServerOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForClockServerOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForCommunicationPreprocessorOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForComputerPowerEnvironmentalMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForDataServerOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForInterfaceServerOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForInternetSafetyDeviceOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForNetworkManagementServerOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForStationTrainControlCenterEquipmentIndoor
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForStationZpw2000TrackCircuitInterfaceAndMonitoringDevice
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForTrainControlCenterOfRelayStation
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForWebServerOfMonitoringSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetForZpw2000TrackCircuitInterfaceAndMonitoringDeviceOfRelayStation
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOf25hzTrackRack
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfApplicationServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfBlocksFrequencyShiftEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfBlocksUnitCombination
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfClockServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfCommunicationPrepositiveServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfCommunicationQualitySupervisionEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfDatabaseServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfDigitalItEquipmentControlSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfDistributingTerminalBoard
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfDriverAndAcquisitionInterfaceEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfExternalInformationProvidingServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfInterfaceNetwork
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfInterfaceServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfInterlockingSystemElectronicTerminal
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfInterlockingSystemMonitoringEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfInterlockingSystemPowerSupply
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfInterlockingSystemRemoteControlAndDisplay
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfLocalInterlockingSystemActuator
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfNetworkEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfNetworkSafetyServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfPowerSupply
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfPowerSupplyForLocalInterlockingSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfRepeatingQueryTerminalServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfSignallingTotalWiring
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfSimulationNetworkPannelEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfSimulationTrainingServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfSpareMachine
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfStationFrequencyShift
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfStationUnitBlock
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfStorageDevice
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetOfSystemSoftwareManagementServer
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetofStationMonitoringEquipment
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcCabinetsForBlockSystem;
END_ENTITY;

ENTITY IfcCabinetsForCtsTdcs;
END_ENTITY;

ENTITY IfcCabinetsForInterlocking;
END_ENTITY;

ENTITY IfcCabinetsForTcs;
END_ENTITY;

ENTITY IfcCable
 SUBTYPE OF (IfcElectricalConductor);
END_ENTITY;

ENTITY IfcCableAndWire;
END_ENTITY;

ENTITY IfcCableBridge
 SUBTYPE OF (IfcCableRoute);
END_ENTITY;

ENTITY IfcCableCarrierFitting
 SUBTYPE OF (IfcFlowFitting);
	PredefinedType : OPTIONAL IfcCableCarrierFittingTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCableCarrierFittingTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCableCarrierFittingTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCCABLECARRIERFITTINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCableCarrierFittingType
 SUBTYPE OF (IfcFlowFittingType);
	PredefinedType : IfcCableCarrierFittingTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCableCarrierFittingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCableCarrierFittingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCableCarrierSegment
 SUBTYPE OF (IfcFlowSegment);
	PredefinedType : OPTIONAL IfcCableCarrierSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCableCarrierSegmentTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCableCarrierSegmentTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCCABLECARRIERSEGMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCableCarrierSegmentType
 SUBTYPE OF (IfcFlowSegmentType);
	PredefinedType : IfcCableCarrierSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCableCarrierSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCableCarrierSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCableChamber
 SUBTYPE OF (IfcUndergroundFacilities);
END_ENTITY;

ENTITY IfcCableFitting
 SUBTYPE OF (IfcFlowFitting);
	PredefinedType : OPTIONAL IfcCableFittingTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCableFittingTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCableFittingTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCCABLEFITTINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCableFitting
 SUBTYPE OF (IfcCablingAccessory);
END_ENTITY;

ENTITY IfcCableFittingType
 SUBTYPE OF (IfcFlowFittingType);
	PredefinedType : IfcCableFittingTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCableFittingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCableFittingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCableGantry
 SUBTYPE OF (IfcUndergroundFacilities);
END_ENTITY;

ENTITY IfcCablePit;
END_ENTITY;

ENTITY IfcCableRoute
 SUPERTYPE OF (ONEOF
	(IfcCableTrench
	,IfcCableBridge
	,IfcCableUtx));
END_ENTITY;

ENTITY IfcCableSegment
 SUBTYPE OF (IfcFlowSegment);
	PredefinedType : OPTIONAL IfcCableSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCableSegmentTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCableSegmentTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCCABLESEGMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCableSegmentType
 SUBTYPE OF (IfcFlowSegmentType);
	PredefinedType : IfcCableSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCableSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCableSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCableSheathing
 SUBTYPE OF (IfcUndergroundFacilities);
END_ENTITY;

ENTITY IfcCableTrench
 SUBTYPE OF (IfcCableRoute);
END_ENTITY;

ENTITY IfcCableUtx
 SUBTYPE OF (IfcCableRoute);
END_ENTITY;

ENTITY IfcCablingAccessory
 SUPERTYPE OF (ONEOF
	(IfcFanOut
	,IfcCableFitting))
 SUBTYPE OF (IfcTelecomPassiveEquipment);
END_ENTITY;

ENTITY IfcCablingAlignment;
END_ENTITY;

ENTITY IfcCaissonFoundation
 SUBTYPE OF (IfcDeepFoundation);
	PredefinedType : OPTIONAL IfcCaissonFoundationTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcCaissonFoundationTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcCaissonFoundationTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCCAISSONFOUNDATIONTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCaissonFoundationType
 SUBTYPE OF (IfcDeepFoundationType);
	PredefinedType : IfcCaissonFoundationTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCaissonFoundationTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCaissonFoundationTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCantileverAssembly
 SUPERTYPE OF (ONEOF
	(IfcCenterCantilever
	,IfcMultipleTrackCantilever
	,IfcTransitionCantilever
	,IfcMechanicalOverlapCantilever
	,IfcSingleCantilever
	,IfcPhaseSeparationCantilever
	,IfcOutOfRunningCantilever
	,IfcInsulatedSuspensionSet
	,IfcSystemSeparationCantilever
	,IfcUnderbridgeCantilever
	,IfcTurnoutCantilever
	,IfcDirectSuspension
	,IfcInsulatedOverlapCantilever
	,IfcMidPointCantilever))
 SUBTYPE OF (IfcOcsSuspension);
END_ENTITY;

ENTITY IfcCapacitor;
END_ENTITY;

ENTITY IfcCartesianPoint
 SUBTYPE OF (IfcPoint);
	Coordinates : LIST [1:3] OF IfcLengthMeasure;
 DERIVE
	Dim : IfcDimensionCount := HIINDEX(Coordinates);
 WHERE
	CP2Dor3D : HIINDEX(Coordinates) >= 2;
END_ENTITY;

ENTITY IfcCartesianPoint
 SUBTYPE OF (IfcPoint);
	Easting : IfcDouble;
	Northing : IfcDouble;
END_ENTITY;

ENTITY IfcCartesianPointList
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCartesianPointList2D
	,IfcCartesianPointList3D))
 SUBTYPE OF (IfcGeometricRepresentationItem);
 DERIVE
	Dim : IfcDimensionCount := IfcPointListDim(SELF);
END_ENTITY;

ENTITY IfcCartesianPointList2D
 SUBTYPE OF (IfcCartesianPointList);
END_ENTITY;

ENTITY IfcCartesianPointList3D
 SUBTYPE OF (IfcCartesianPointList);
END_ENTITY;

ENTITY IfcCartesianTransformationOperator
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCartesianTransformationOperator3D
	,IfcCartesianTransformationOperator2D))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Axis1 : OPTIONAL IfcDirection;
	Axis2 : OPTIONAL IfcDirection;
	LocalOrigin : IfcCartesianPoint;
	Scale : OPTIONAL IfcReal;
 DERIVE
	Scl : IfcReal := NVL(Scale, 1.0);
	Dim : IfcDimensionCount := LocalOrigin.Dim;
 WHERE
	ScaleGreaterZero : Scl > 0.0;
END_ENTITY;

ENTITY IfcCartesianTransformationOperator2D
 SUPERTYPE OF (ONEOF
	(IfcCartesianTransformationOperator2DnonUniform))
 SUBTYPE OF (IfcCartesianTransformationOperator);
 DERIVE
	U : LIST [2:2] OF IfcDirection := IfcBaseAxis(2,SELF\IfcCartesianTransformationOperator.Axis1,
SELF\IfcCartesianTransformationOperator.Axis2,?);
 WHERE
	DimEqual2 : SELF\IfcCartesianTransformationOperator.Dim = 2;
	Axis1Is2D : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis1)) OR 
(SELF\IfcCartesianTransformationOperator.Axis1.Dim = 2);
	Axis2Is2D : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis2)) OR 
(SELF\IfcCartesianTransformationOperator.Axis2.Dim = 2);
END_ENTITY;

ENTITY IfcCartesianTransformationOperator2DnonUniform
 SUBTYPE OF (IfcCartesianTransformationOperator2D);
	Scale2 : OPTIONAL IfcReal;
 DERIVE
	Scl2 : IfcReal := NVL(Scale2, SELF\IfcCartesianTransformationOperator.Scl);
 WHERE
	Scale2GreaterZero : Scl2 > 0.0;
END_ENTITY;

ENTITY IfcCartesianTransformationOperator3D
 SUPERTYPE OF (ONEOF
	(IfcCartesianTransformationOperator3DnonUniform))
 SUBTYPE OF (IfcCartesianTransformationOperator);
	Axis3 : OPTIONAL IfcDirection;
 DERIVE
	U : LIST [3:3] OF IfcDirection := IfcBaseAxis(3,SELF\IfcCartesianTransformationOperator.Axis1,
SELF\IfcCartesianTransformationOperator.Axis2,Axis3);
 WHERE
	DimIs3D : SELF\IfcCartesianTransformationOperator.Dim = 3;
	Axis1Is3D : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis1)) OR 
(SELF\IfcCartesianTransformationOperator.Axis1.Dim = 3);
	Axis2Is3D : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis2)) OR 
(SELF\IfcCartesianTransformationOperator.Axis2.Dim = 3);
	Axis3Is3D : NOT(EXISTS(Axis3)) OR (Axis3.Dim = 3);
END_ENTITY;

ENTITY IfcCartesianTransformationOperator3DnonUniform
 SUBTYPE OF (IfcCartesianTransformationOperator3D);
	Scale2 : OPTIONAL IfcReal;
	Scale3 : OPTIONAL IfcReal;
 DERIVE
	Scl2 : IfcReal := NVL(Scale2, SELF\IfcCartesianTransformationOperator.Scl);
	Scl3 : IfcReal := NVL(Scale3, SELF\IfcCartesianTransformationOperator.Scl);
 WHERE
	Scale2GreaterZero : Scl2 > 0.0;
	Scale3GreaterZero : Scl3 > 0.0;
END_ENTITY;

ENTITY IfcCatchDrainGrating;
END_ENTITY;

ENTITY IfcCatenaryAlignement;
END_ENTITY;

ENTITY IfcCatenarySystem;
END_ENTITY;

ENTITY IfcCatenaryWire
 SUPERTYPE OF (ONEOF
	(IfcAuxiliaryCatenaryWire
	,IfcMainCatenaryWire))
 SUBTYPE OF (IfcStrandedConductor);
END_ENTITY;

ENTITY IfcCenterCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcCenterLineProfileDef
 SUBTYPE OF (IfcArbitraryOpenProfileDef);
	Thickness : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcCessBetweenRails
 SUBTYPE OF (IfcAbsTrackCovering);
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Load capacity : IfcNewRealNonNegative0;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Relative Position : IfcRelativePosition;
	Track edge : IfcIdentifier;
	Type : IfcCessType;
	User : IfcCessPermittedUserType;
	Width : IfcNewRealPositive0;
END_ENTITY;

ENTITY IfcChangeOverSwitch
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcChangesInOwnership;
END_ENTITY;

ENTITY IfcChannel;
END_ENTITY;

ENTITY IfcCheckRail
	Adjustable : IfcBoolean;
	Design : IfcCheckRailDesign;
	Disassembly date : IfcDate;
	Fastening : IfcFasteningType;
	Installation date : IfcDate;
	Installation plan : IfcIdentifier;
	Location in the track/turnout panel : IfcNewCoordinatesLocal;
	Manufacturing date : IfcDate;
	Putting into operation date : IfcDate;
	Track / Turnout panel : IfcIdentifier;
	Type : IfcCheckRailType;
	Use : IfcCheckRailUsage;
END_ENTITY;

ENTITY IfcChiller
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcChillerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcChillerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcChillerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCCHILLERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcChillerType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcChillerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcChillerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcChillerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcChimney
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcChimneyTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcChimneyTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcChimneyTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCCHIMNEYTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcChimneyType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcChimneyTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcChimneyTypeEnum.USERDEFINED) OR
((PredefinedType = IfcChimneyTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcChopper
 SUBTYPE OF (IfcElectricPowerConverter);
END_ENTITY;

ENTITY IfcCircle
 SUBTYPE OF (IfcConic);
	Radius : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcCircleHollowProfileDef
 SUBTYPE OF (IfcCircleProfileDef);
	WallThickness : IfcPositiveLengthMeasure;
 WHERE
	WR1 : WallThickness < SELF\IfcCircleProfileDef.Radius;
END_ENTITY;

ENTITY IfcCircleProfileDef
 SUPERTYPE OF (ONEOF
	(IfcCircleHollowProfileDef))
 SUBTYPE OF (IfcParameterizedProfileDef);
	Radius : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcCircuitBreaker
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcCircularArcSegment2D
 SUBTYPE OF (IfcCurveSegment2D);
	Radius : IfcPositiveLengthMeasure;
	IsCCW : IfcBoolean;
END_ENTITY;

ENTITY IfcCivilElement
 SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcCivilElementType
 SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcClamp;
END_ENTITY;

ENTITY IfcClass
 SUPERTYPE OF (ONEOF
	(IfcSubclass));
	aProperty : IfcInt;
	anotherProperty : IfcEnum;
	pset : IfcPropertyset;
END_ENTITY;

ENTITY IfcClass1;
END_ENTITY;

ENTITY IfcClass2;
END_ENTITY;

ENTITY IfcClassification
 SUBTYPE OF (IfcExternalInformation);
	Source : OPTIONAL IfcLabel;
	Edition : OPTIONAL IfcLabel;
	EditionDate : OPTIONAL IfcDate;
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	Location : OPTIONAL IfcURIReference;
 INVERSE
	ClassificationForObjects : SET  OF IfcRelAssociatesClassification FOR RelatingClassification;
	HasReferences : SET  OF IfcClassificationReference FOR ReferencedSource;
END_ENTITY;

ENTITY IfcClassificationReference
 SUBTYPE OF (IfcExternalReference);
	ReferencedSource : OPTIONAL IfcClassificationReferenceSelect;
	Description : OPTIONAL IfcText;
	Sort : OPTIONAL IfcIdentifier;
 INVERSE
	HasReferences : IfcClassificationReference FOR ReferencedSource;
	ClassificationRefForObjects : SET  OF IfcRelAssociatesClassification FOR RelatingClassification;
END_ENTITY;

ENTITY IfcClosedAccessDueToProject;
END_ENTITY;

ENTITY IfcClosedShell
 SUBTYPE OF (IfcConnectedFaceSet);
END_ENTITY;

ENTITY IfcClosure
 SUBTYPE OF (IfcTelecomCasingElements);
END_ENTITY;

ENTITY IfcCoaxialCable
 SUPERTYPE OF (ONEOF
	(IfcLeakyCoaxialCable
	,IfcFeeder))
 SUBTYPE OF (IfcCopperCable);
END_ENTITY;

ENTITY IfcCoil
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcCoilTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCoilTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCoilTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCCOILTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCoilType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcCoilTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCoilTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCoilTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCollectingWell;
END_ENTITY;

ENTITY IfcColourRgb
 SUBTYPE OF (IfcColourSpecification);
	Red : IfcNormalisedRatioMeasure;
	Green : IfcNormalisedRatioMeasure;
	Blue : IfcNormalisedRatioMeasure;
END_ENTITY;

ENTITY IfcColourRgbList
 SUBTYPE OF (IfcPresentationItem);
END_ENTITY;

ENTITY IfcColourSpecification
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcColourRgb))
 SUBTYPE OF (IfcPresentationItem);
	Name : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcColumn
 SUPERTYPE OF (ONEOF
	(IfcColumnStandardCase))
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcColumnTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcColumnTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcColumnTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCCOLUMNTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcColumnStandardCase
 SUBTYPE OF (IfcColumn);
 WHERE
	HasMaterialProfileSetUsage : SIZEOF (QUERY(temp <* USEDIN(SELF, 'IFCKERNEL.IFCRELASSOCIATES.RELATEDOBJECTS') |
              ('IFCPRODUCTEXTENSION.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)) AND
              ('IFCMATERIALRESOURCE.IFCMATERIALPROFILESETUSAGE' IN TYPEOF(temp.RelatingMaterial))
              )) = 1;
END_ENTITY;

ENTITY IfcColumnType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcColumnTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcColumnTypeEnum.USERDEFINED) OR
((PredefinedType = IfcColumnTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCombinedTransformer
 SUBTYPE OF (IfcInstrumentTransformer);
END_ENTITY;

ENTITY IfcCommonProtectingFacility
 SUPERTYPE OF (ONEOF
	(IfcAnticlimbing
	,IfcProtectiveObstacle
	,IfcProtectiveBarrier
	,IfcLevelCrossingProtection
	,IfcAntiFallDevice
	,IfcEnvironnementalProtection
	,IfcProtectiveCanope
	,IfcProfileGate
	,IfcGuardPile))
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcCommonSupplying;
END_ENTITY;

ENTITY IfcCommunicationInterface
 SUBTYPE OF (IfcConnectionInterface);
END_ENTITY;

ENTITY IfcCommunicationsAppliance
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcCommunicationsApplianceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCommunicationsApplianceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCommunicationsApplianceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCCOMMUNICATIONSAPPLIANCETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCommunicationsApplianceType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcCommunicationsApplianceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCommunicationsApplianceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCommunicationsApplianceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCompensatorEquipment
 SUPERTYPE OF (ONEOF
	(IfcPowerFactorCorrectionPfc
	,IfcUnbalancingCompensator
	,IfcHighVoltageBoosterHvb));
END_ENTITY;

ENTITY IfcComplexProperty
 SUBTYPE OF (IfcProperty);
	UsageName : IfcIdentifier;
	HasProperties : SET  OF IfcProperty;
 WHERE
	WR21 : SIZEOF(QUERY(temp <* HasProperties | SELF :=: temp)) = 0;
	WR22 : IfcUniquePropertyName(HasProperties);
END_ENTITY;

ENTITY IfcComplexPropertyTemplate
 SUBTYPE OF (IfcPropertyTemplate);
	UsageName : OPTIONAL IfcLabel;
	TemplateType : OPTIONAL IfcComplexPropertyTemplateTypeEnum;
	HasPropertyTemplates : OPTIONAL SET  OF IfcPropertyTemplate;
 WHERE
	UniquePropertyNames : IfcUniquePropertyTemplateNames(HasPropertyTemplates);
	NoSelfReference : SIZEOF(QUERY(temp <* HasPropertyTemplates | SELF :=: temp)) = 0;
END_ENTITY;

ENTITY IfcCompositeCurve
 SUPERTYPE OF (ONEOF
	(IfcCompositeCurveOnSurface))
 SUBTYPE OF (IfcBoundedCurve);
	Segments : LIST  OF IfcCompositeCurveSegment;
	SelfIntersect : IfcLogical;
 DERIVE
	NSegments : IfcInteger := SIZEOF(Segments);
	ClosedCurve : IfcLogical := Segments[NSegments].Transition <> Discontinuous;
 WHERE
	CurveContinuous : ((NOT ClosedCurve) AND (SIZEOF(QUERY(Temp <* Segments | Temp.Transition = Discontinuous)) = 1)) OR ((ClosedCurve) AND (SIZEOF(QUERY(Temp <* Segments | Temp.Transition = Discontinuous)) = 0));
	SameDim : SIZEOF( QUERY( Temp <* Segments | Temp.Dim <> Segments[1].Dim)) = 0;
END_ENTITY;

ENTITY IfcCompositeCurveOnSurface
 SUPERTYPE OF (ONEOF
	(IfcBoundaryCurve))
 SUBTYPE OF (IfcCompositeCurve);
 DERIVE
	BasisSurface : SET [0:1] OF IfcSurface := IfcGetBasisSurface(SELF);
 WHERE
	SameSurface : SIZEOF(BasisSurface) > 0;
END_ENTITY;

ENTITY IfcCompositeCurveSegment
 SUPERTYPE OF (ONEOF
	(IfcReparametrisedCompositeCurveSegment))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Transition : IfcTransitionCode;
	SameSense : IfcBoolean;
	ParentCurve : IfcCurve;
 DERIVE
	Dim : IfcDimensionCount := ParentCurve.Dim;
 INVERSE
	UsingCurves : SET  OF IfcCompositeCurve FOR Segments;
 WHERE
	ParentIsBoundedCurve : ('IFCGEOMETRYRESOURCE.IFCBOUNDEDCURVE' IN TYPEOF(ParentCurve));
END_ENTITY;

ENTITY IfcCompositeProfileDef
 SUBTYPE OF (IfcProfileDef);
	Profiles : SET  OF IfcProfileDef;
	Label : OPTIONAL IfcLabel;
 WHERE
	InvariantProfileType : SIZEOF(QUERY(temp <* Profiles | temp.ProfileType <> Profiles[1].ProfileType)) = 0;
	NoRecursion : SIZEOF(QUERY(temp <* Profiles | 'IFCPROFILERESOURCE.IFCCOMPOSITEPROFILEDEF' IN TYPEOF(temp))) = 0;
END_ENTITY;

ENTITY IfcCompressor
 SUBTYPE OF (IfcFlowMovingDevice);
	PredefinedType : OPTIONAL IfcCompressorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCompressorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCompressorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCCOMPRESSORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCompressorType
 SUBTYPE OF (IfcFlowMovingDeviceType);
	PredefinedType : IfcCompressorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCompressorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCompressorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCondenser
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcCondenserTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCondenserTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCondenserTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCCONDENSERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCondenserType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcCondenserTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCondenserTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCondenserTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcConduitDuct;
END_ENTITY;

ENTITY IfcConic
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCircle
	,IfcEllipse))
 SUBTYPE OF (IfcCurve);
	Position : IfcAxis2Placement;
END_ENTITY;

ENTITY IfcConnectedFaceSet
 SUPERTYPE OF (ONEOF
	(IfcClosedShell
	,IfcOpenShell))
 SUBTYPE OF (IfcTopologicalRepresentationItem);
	CfsFaces : SET  OF IfcFace;
END_ENTITY;

ENTITY IfcConnectedOverlap;
END_ENTITY;

ENTITY IfcConnectedOverlap
 SUBTYPE OF (IfcOverheadLineOverlapZone);
END_ENTITY;

ENTITY IfcConnectionCurveGeometry
 SUBTYPE OF (IfcConnectionGeometry);
	CurveOnRelatingElement : IfcCurveOrEdgeCurve;
	CurveOnRelatedElement : OPTIONAL IfcCurveOrEdgeCurve;
END_ENTITY;

ENTITY IfcConnectionGeometry
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcConnectionSurfaceGeometry
	,IfcConnectionVolumeGeometry
	,IfcConnectionCurveGeometry
	,IfcConnectionPointGeometry));
END_ENTITY;

ENTITY IfcConnectionInterface
 SUPERTYPE OF (ONEOF
	(IfcCommunicationInterface
	,IfcPowerSupplyInterface))
 SUBTYPE OF (IfcTelecomEquipmentElement);
END_ENTITY;

ENTITY IfcConnectionPointEccentricity
 SUBTYPE OF (IfcConnectionPointGeometry);
	EccentricityInX : OPTIONAL IfcLengthMeasure;
	EccentricityInY : OPTIONAL IfcLengthMeasure;
	EccentricityInZ : OPTIONAL IfcLengthMeasure;
END_ENTITY;

ENTITY IfcConnectionPointGeometry
 SUPERTYPE OF (ONEOF
	(IfcConnectionPointEccentricity))
 SUBTYPE OF (IfcConnectionGeometry);
	PointOnRelatingElement : IfcPointOrVertexPoint;
	PointOnRelatedElement : OPTIONAL IfcPointOrVertexPoint;
END_ENTITY;

ENTITY IfcConnectionSurfaceGeometry
 SUBTYPE OF (IfcConnectionGeometry);
	SurfaceOnRelatingElement : IfcSurfaceOrFaceSurface;
	SurfaceOnRelatedElement : OPTIONAL IfcSurfaceOrFaceSurface;
END_ENTITY;

ENTITY IfcConnectionVolumeGeometry
 SUBTYPE OF (IfcConnectionGeometry);
	VolumeOnRelatingElement : IfcSolidOrShell;
	VolumeOnRelatedElement : OPTIONAL IfcSolidOrShell;
END_ENTITY;

ENTITY IfcConnector
 SUPERTYPE OF (ONEOF
	(IfcTelecomConnector
	,IfcPowerCableConnector));
END_ENTITY;

ENTITY IfcConstraint
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcObjective
	,IfcMetric));
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	ConstraintGrade : IfcConstraintEnum;
	ConstraintSource : OPTIONAL IfcLabel;
	CreatingActor : OPTIONAL IfcActorSelect;
	CreationTime : OPTIONAL IfcDateTime;
	UserDefinedGrade : OPTIONAL IfcLabel;
 INVERSE
	HasExternalReferences : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
	PropertiesForConstraint : SET  OF IfcResourceConstraintRelationship FOR RelatingConstraint;
 WHERE
	WR11 : (ConstraintGrade <> IfcConstraintEnum.USERDEFINED) OR
((ConstraintGrade = IfcConstraintEnum.USERDEFINED) AND EXISTS(SELF\IfcConstraint.UserDefinedGrade));
END_ENTITY;

ENTITY IfcConstructionEquipmentResource
 SUBTYPE OF (IfcConstructionResource);
	PredefinedType : OPTIONAL IfcConstructionEquipmentResourceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcConstructionEquipmentResourceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcConstructionEquipmentResourceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcConstructionEquipmentResourceType
 SUBTYPE OF (IfcConstructionResourceType);
	PredefinedType : IfcConstructionEquipmentResourceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcConstructionEquipmentResourceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcConstructionEquipmentResourceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeResource.ResourceType));
END_ENTITY;

ENTITY IfcConstructionJoint;
END_ENTITY;

ENTITY IfcConstructionMaterialResource
 SUBTYPE OF (IfcConstructionResource);
	PredefinedType : OPTIONAL IfcConstructionMaterialResourceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcConstructionMaterialResourceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcConstructionMaterialResourceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcConstructionMaterialResourceType
 SUBTYPE OF (IfcConstructionResourceType);
	PredefinedType : IfcConstructionMaterialResourceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcConstructionMaterialResourceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcConstructionMaterialResourceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeResource.ResourceType));
END_ENTITY;

ENTITY IfcConstructionProductResource
 SUBTYPE OF (IfcConstructionResource);
	PredefinedType : OPTIONAL IfcConstructionProductResourceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcConstructionProductResourceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcConstructionProductResourceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcConstructionProductResourceType
 SUBTYPE OF (IfcConstructionResourceType);
	PredefinedType : IfcConstructionProductResourceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcConstructionProductResourceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcConstructionProductResourceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeResource.ResourceType));
END_ENTITY;

ENTITY IfcConstructionResource
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCrewResource
	,IfcLaborResource
	,IfcConstructionEquipmentResource
	,IfcConstructionProductResource
	,IfcSubContractResource
	,IfcConstructionMaterialResource))
 SUBTYPE OF (IfcResource);
	Usage : OPTIONAL IfcResourceTime;
	BaseCosts : OPTIONAL LIST  OF IfcAppliedValue;
	BaseQuantity : OPTIONAL IfcPhysicalQuantity;
END_ENTITY;

ENTITY IfcConstructionResourceType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSubContractResourceType
	,IfcConstructionEquipmentResourceType
	,IfcLaborResourceType
	,IfcConstructionMaterialResourceType
	,IfcCrewResourceType
	,IfcConstructionProductResourceType))
 SUBTYPE OF (IfcTypeResource);
	BaseCosts : OPTIONAL LIST  OF IfcAppliedValue;
	BaseQuantity : OPTIONAL IfcPhysicalQuantity;
END_ENTITY;

ENTITY IfcContactLineLrs;
END_ENTITY;

ENTITY IfcContactLineSuspension
 SUBTYPE OF (IfcOcsSuspension);
END_ENTITY;

ENTITY IfcContactWire
 SUBTYPE OF (IfcSolidConductor);
END_ENTITY;

ENTITY IfcContext
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcProject
	,IfcProjectLibrary))
 SUBTYPE OF (IfcObjectDefinition);
	ObjectType : OPTIONAL IfcLabel;
	LongName : OPTIONAL IfcLabel;
	Phase : OPTIONAL IfcLabel;
	RepresentationContexts : OPTIONAL SET  OF IfcRepresentationContext;
	UnitsInContext : OPTIONAL IfcUnitAssignment;
 INVERSE
	IsDefinedBy : SET  OF IfcRelDefinesByProperties FOR RelatedObjects;
	Declares : SET  OF IfcRelDeclares FOR RelatingContext;
END_ENTITY;

ENTITY IfcContextDependentUnit
 SUBTYPE OF (IfcNamedUnit);
	Name : IfcLabel;
 INVERSE
	HasExternalReference : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
END_ENTITY;

ENTITY IfcControl
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcWorkControl
	,IfcProjectOrder
	,IfcWorkCalendar
	,IfcPerformanceHistory
	,IfcCostItem
	,IfcCostSchedule
	,IfcActionRequest
	,IfcPermit))
 SUBTYPE OF (IfcObject);
	Identification : OPTIONAL IfcIdentifier;
 INVERSE
	Controls : SET  OF IfcRelAssignsToControl FOR RelatingControl;
END_ENTITY;

ENTITY IfcControlEquipment
 SUPERTYPE OF (ONEOF
	(IfcTerminalOfInterlockingSystem
	,IfcStationConsoleOfCtc
	,IfcRemoteWorkstationOfCtc
	,IfcRemoteControlDisplayTerminationOfCtc
	,IfcRemoteControlDisplayTerminationOfTdcs
	,IfcInterlockingControlPanel
	,IfcTerminalOfMaintainance
	,IfcTerminalOfCtcDispatchingCenter))
 SUBTYPE OF (IfcAbsSignallingNonTracksideEquipment);
END_ENTITY;

ENTITY IfcControllableRetarder
 SUBTYPE OF (IfcAbsMechanicalEquipment);
	Inside/Outside Position : IfcInsideOutsidePosition;
	Number of units : IfcIntegerPositive0;
	Relative Position : IfcRelativePosition;
	Type : IfcControllableRetarderType;
END_ENTITY;

ENTITY IfcController
 SUBTYPE OF (IfcDistributionControlElement);
	PredefinedType : OPTIONAL IfcControllerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcControllerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcControllerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCBUILDINGCONTROLSDOMAIN.IFCCONTROLLERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcControllerType
 SUBTYPE OF (IfcDistributionControlElementType);
	PredefinedType : IfcControllerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcControllerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcControllerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcConversionBasedUnit
 SUPERTYPE OF (ONEOF
	(IfcConversionBasedUnitWithOffset))
 SUBTYPE OF (IfcNamedUnit);
	Name : IfcLabel;
	ConversionFactor : IfcMeasureWithUnit;
 INVERSE
	HasExternalReference : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
END_ENTITY;

ENTITY IfcConversionBasedUnitWithOffset
 SUBTYPE OF (IfcConversionBasedUnit);
	ConversionOffset : IfcReal;
END_ENTITY;

ENTITY IfcConveyorSegment
 SUBTYPE OF (IfcFlowSegment);
	PredefinedType : IfcConveyorSegmentTypeEnum;
END_ENTITY;

ENTITY IfcConveyorSegmentType
 SUBTYPE OF (IfcFlowSegmentType);
	PredefinedType : IfcConveyorSegmentTypeEnum;
END_ENTITY;

ENTITY IfcCooledBeam
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcCooledBeamTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCooledBeamTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCooledBeamTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCCOOLEDBEAMTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCooledBeamType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcCooledBeamTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCooledBeamTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCooledBeamTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCoolingTower
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcCoolingTowerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCoolingTowerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCoolingTowerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCCOOLINGTOWERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCoolingTowerType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcCoolingTowerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCoolingTowerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCoolingTowerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCoordinateOperation
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcMapConversion));
	SourceCRS : IfcCoordinateReferenceSystemSelect;
	TargetCRS : IfcCoordinateReferenceSystem;
END_ENTITY;

ENTITY IfcCoordinateReferenceSystem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcProjectedCRS));
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	GeodeticDatum : OPTIONAL IfcIdentifier;
	VerticalDatum : OPTIONAL IfcIdentifier;
 INVERSE
	HasCoordinateOperation : SET [0:1] OF IfcCoordinateOperation FOR SourceCRS;
END_ENTITY;

ENTITY IfcCopperCable
 SUPERTYPE OF (ONEOF
	(IfcCopperPatchCord
	,IfcCoaxialCable
	,IfcCopperSymmetricPairCable))
 SUBTYPE OF (IfcTelecomCable);
END_ENTITY;

ENTITY IfcCopperConnector
 SUBTYPE OF (IfcTelecomConnector);
END_ENTITY;

ENTITY IfcCopperPatchCord
 SUBTYPE OF (IfcCopperCable);
END_ENTITY;

ENTITY IfcCopperSymmetricPairCable
 SUBTYPE OF (IfcCopperCable);
END_ENTITY;

ENTITY IfcCorbel
 SUBTYPE OF (IfcOcsFoundation);
END_ENTITY;

ENTITY IfcCostItem
 SUBTYPE OF (IfcControl);
	PredefinedType : OPTIONAL IfcCostItemTypeEnum;
	CostValues : OPTIONAL LIST  OF IfcCostValue;
	CostQuantities : OPTIONAL LIST  OF IfcPhysicalQuantity;
END_ENTITY;

ENTITY IfcCostSchedule
 SUBTYPE OF (IfcControl);
	PredefinedType : OPTIONAL IfcCostScheduleTypeEnum;
	Status : OPTIONAL IfcLabel;
	SubmittedOn : OPTIONAL IfcDateTime;
	UpdateDate : OPTIONAL IfcDateTime;
END_ENTITY;

ENTITY IfcCostValue
 SUBTYPE OF (IfcAppliedValue);
END_ENTITY;

ENTITY IfcCourse
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : IfcCourseTypeEnum;
END_ENTITY;

ENTITY IfcCourse;
END_ENTITY;

ENTITY IfcCourseType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcCourseTypeEnum;
END_ENTITY;

ENTITY IfcCovering
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcCoveringTypeEnum;
 INVERSE
	CoversSpaces : SET [0:1] OF IfcRelCoversSpaces FOR RelatedCoverings;
	CoversElements : SET [0:1] OF IfcRelCoversBldgElements FOR RelatedCoverings;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCoveringTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCoveringTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCCOVERINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCoveringType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcCoveringTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCoveringTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCoveringTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCpDiscretizedpoint;
	Chainage : IfcLength;
	LineKilometer : IfcLength;
	PointID : IfcIdentifier;
END_ENTITY;

ENTITY IfcCrewResource
 SUBTYPE OF (IfcConstructionResource);
	PredefinedType : OPTIONAL IfcCrewResourceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcCrewResourceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCrewResourceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcCrewResourceType
 SUBTYPE OF (IfcConstructionResourceType);
	PredefinedType : IfcCrewResourceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCrewResourceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCrewResourceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeResource.ResourceType));
END_ENTITY;

ENTITY IfcCrocodile
 SUBTYPE OF (IfcTrainProtectionEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcCrossBeam
 SUBTYPE OF (IfcOcsSupportingElements);
END_ENTITY;

ENTITY IfcCrossBond;
END_ENTITY;

ENTITY IfcCsMediaGateway
 SUBTYPE OF (IfcGateway);
END_ENTITY;

ENTITY IfcCsgPrimitive3D
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRightCircularCylinder
	,IfcRectangularPyramid
	,IfcRightCircularCone
	,IfcBlock
	,IfcSphere))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Position : IfcAxis2Placement3D;
 DERIVE
	Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcCsgSolid
 SUBTYPE OF (IfcSolidModel);
	TreeRootExpression : IfcCsgSelect;
END_ENTITY;

ENTITY IfcCulvert;
END_ENTITY;

ENTITY IfcCurrencyRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingMonetaryUnit : IfcMonetaryUnit;
	RelatedMonetaryUnit : IfcMonetaryUnit;
	ExchangeRate : IfcPositiveRatioMeasure;
	RateDateTime : OPTIONAL IfcDateTime;
	RateSource : OPTIONAL IfcLibraryInformation;
END_ENTITY;

ENTITY IfcCurrentTransformer
 SUBTYPE OF (IfcInstrumentTransformer);
END_ENTITY;

ENTITY IfcCurtainWall
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcCurtainWallTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcCurtainWallTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcCurtainWallTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCCURTAINWALLTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcCurtainWallType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcCurtainWallTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcCurtainWallTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCurtainWallTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcCurve
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLine
	,IfcSurfaceCurve
	,IfcBoundedCurve
	,IfcOffsetCurve
	,IfcPcurve
	,IfcConic))
 SUBTYPE OF (IfcGeometricRepresentationItem);
 DERIVE
	Dim : IfcDimensionCount := IfcCurveDim(SELF);
END_ENTITY;

ENTITY IfcCurveBoundedPlane
 SUBTYPE OF (IfcBoundedSurface);
	BasisSurface : IfcPlane;
	OuterBoundary : IfcCurve;
	InnerBoundaries : SET  OF IfcCurve;
END_ENTITY;

ENTITY IfcCurveBoundedSurface
 SUBTYPE OF (IfcBoundedSurface);
	BasisSurface : IfcSurface;
	Boundaries : SET  OF IfcBoundaryCurve;
	ImplicitOuter : IfcBoolean;
END_ENTITY;

ENTITY IfcCurveSegment2D
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTransitionCurveSegment2D
	,IfcCircularArcSegment2D
	,IfcLineSegment2D))
 SUBTYPE OF (IfcBoundedCurve);
	StartPoint : IfcCartesianPoint;
	StartDirection : IfcPlaneAngleMeasure;
	SegmentLength : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcCurveStyle
 SUBTYPE OF (IfcPresentationStyle);
	CurveFont : OPTIONAL IfcCurveFontOrScaledCurveFontSelect;
	CurveWidth : OPTIONAL IfcSizeSelect;
	CurveColour : OPTIONAL IfcColour;
	ModelOrDraughting : OPTIONAL IfcBoolean;
 WHERE
	MeasureOfWidth : (NOT(EXISTS(CurveWidth))) OR
('IFCMEASURERESOURCE.IFCPOSITIVELENGTHMEASURE' IN TYPEOF(CurveWidth)) OR 
 (('IFCMEASURERESOURCE.IFCDESCRIPTIVEMEASURE' IN TYPEOF(CurveWidth)) AND
 (CurveWidth = 'by layer'));
	IdentifiableCurveStyle : EXISTS(CurveFont) OR EXISTS(CurveWidth) OR EXISTS(CurveColour);
END_ENTITY;

ENTITY IfcCurveStyleFont
 SUBTYPE OF (IfcPresentationItem);
	Name : OPTIONAL IfcLabel;
	PatternList : LIST  OF IfcCurveStyleFontPattern;
END_ENTITY;

ENTITY IfcCurveStyleFontAndScaling
 SUBTYPE OF (IfcPresentationItem);
	Name : OPTIONAL IfcLabel;
	CurveFont : IfcCurveStyleFontSelect;
	CurveFontScaling : IfcPositiveRatioMeasure;
END_ENTITY;

ENTITY IfcCurveStyleFontPattern
 SUBTYPE OF (IfcPresentationItem);
	VisibleSegmentLength : IfcLengthMeasure;
	InvisibleSegmentLength : IfcPositiveLengthMeasure;
 WHERE
	VisibleLengthGreaterEqualZero : VisibleSegmentLength >= 0.;
END_ENTITY;

ENTITY IfcCylindricalSurface
 SUBTYPE OF (IfcElementarySurface);
	Radius : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcDamper
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcDamperTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcDamperTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcDamperTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCDAMPERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDamperType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcDamperTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcDamperTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDamperTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDataTransmissionUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcDcControlPanel
 SUBTYPE OF (IfcSubstationControlEquipment);
END_ENTITY;

ENTITY IfcDecouplerTransformer
 SUBTYPE OF (IfcPowerTransformer);
END_ENTITY;

ENTITY IfcDeepFoundation
 SUPERTYPE OF (ONEOF
	(IfcPile
	,IfcCaissonFoundation))
 SUBTYPE OF (IfcBuiltElement);
 WHERE
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCDEEPFOUNDATIONTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDeepFoundationType
 SUPERTYPE OF (ONEOF
	(IfcCaissonFoundationType
	,IfcPileType))
 SUBTYPE OF (IfcBuiltElementType);
END_ENTITY;

ENTITY IfcDelineatorMarkerPost;
END_ENTITY;

ENTITY IfcDerailer
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcDerivedProfileDef
 SUPERTYPE OF (ONEOF
	(IfcMirroredProfileDef))
 SUBTYPE OF (IfcProfileDef);
	ParentProfile : IfcProfileDef;
	Operator : IfcCartesianTransformationOperator2D;
	Label : OPTIONAL IfcLabel;
 WHERE
	InvariantProfileType : SELF\IfcProfileDef.ProfileType = ParentProfile.ProfileType;
END_ENTITY;

ENTITY IfcDerivedUnit;
	Elements : SET  OF IfcDerivedUnitElement;
	UnitType : IfcDerivedUnitEnum;
	UserDefinedType : OPTIONAL IfcLabel;
 DERIVE
	Dimensions : IfcDimensionalExponents := IfcDeriveDimensionalExponents(Elements);
 WHERE
	WR1 : (SIZEOF (Elements) > 1) OR ((SIZEOF (Elements) = 1) AND (Elements[1].Exponent <> 1 ));
	WR2 : (UnitType <> IfcDerivedUnitEnum.USERDEFINED) OR
((UnitType = IfcDerivedUnitEnum.USERDEFINED) AND 
 (EXISTS(SELF.UserDefinedType)));
END_ENTITY;

ENTITY IfcDerivedUnitElement;
	Unit : IfcNamedUnit;
	Exponent : INTEGER;
END_ENTITY;

ENTITY IfcDesktopConsole
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcDetector
 SUPERTYPE OF (ONEOF
	(IfcPointClosureDetector
	,IfcRockfallDetector
	,IfcObstacleDetector
	,IfcHotAxleBoxDetector
	,IfcStrongWindDetector
	,IfcTrainDetector
	,IfcWheelDetector
	,IfcFallDetector))
 SUBTYPE OF (IfcAbsSignallingEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcDilatationPanel
 SUBTYPE OF (IfcAbsPanel);
	Dilatation length : IfcReal;
	Dilatation type : IfcDilatationType;
	Expansion direction : IfcDilatationExpansionDirection;
	Orientation : IfcOrientation;
	Track panel : IfcIdentifier;
END_ENTITY;

ENTITY IfcDilatationSuperstructure
 SUBTYPE OF (IfcTrackPart);
END_ENTITY;

ENTITY IfcDilatationTurnoutAsset;
END_ENTITY;

ENTITY IfcDilatationTurnoutAssetVersion;
END_ENTITY;

ENTITY IfcDimensionalExponents;
	LengthExponent : INTEGER;
	MassExponent : INTEGER;
	TimeExponent : INTEGER;
	ElectricCurrentExponent : INTEGER;
	ThermodynamicTemperatureExponent : INTEGER;
	AmountOfSubstanceExponent : INTEGER;
	LuminousIntensityExponent : INTEGER;
END_ENTITY;

ENTITY IfcDirectSuspension
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcDirection
 SUBTYPE OF (IfcGeometricRepresentationItem);
	DirectionRatios : LIST [2:3] OF IfcReal;
 DERIVE
	Dim : IfcDimensionCount := HIINDEX(DirectionRatios);
 WHERE
	MagnitudeGreaterZero : SIZEOF(QUERY(Tmp <* DirectionRatios | Tmp <> 0.0)) > 0;
END_ENTITY;

ENTITY IfcDirectrixCurveSweptAreaSolid
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSurfaceCurveSweptAreaSolid
	,IfcFixedReferenceSweptAreaSolid))
 SUBTYPE OF (IfcSweptAreaSolid);
	Directrix : IfcCurve;
	StartParam : IfcParameterValue;
	EndParam : IfcParameterValue;
END_ENTITY;

ENTITY IfcDirectrixDistanceSweptAreaSolid
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcInclinedReferenceSweptAreaSolid))
 SUBTYPE OF (IfcSweptAreaSolid);
	Directrix : IfcCurve;
	StartDistance : IfcDistanceExpression;
	EndDistance : IfcDistanceExpression;
END_ENTITY;

ENTITY IfcDisconnector
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcDiscreteAccessory
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : OPTIONAL IfcDiscreteAccessoryTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcDiscreteAccessoryTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDiscreteAccessoryTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSHAREDCOMPONENTELEMENTS.IFCDISCRETEACCESSORYTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDiscreteAccessoryType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : IfcDiscreteAccessoryTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcDiscreteAccessoryTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDiscreteAccessoryTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDiscretizedPoint
 SUPERTYPE OF (ONEOF
	(IfcRailwayDiscretizedPoint));
	Chainage : IfcFloat;
	Easting : IfcDouble;
	Elevation : IfcDouble;
	Northing : IfcDouble;
	Number : IfcId;
	Rotation axis : IfcEnum;
END_ENTITY;

ENTITY IfcDiscretizedPointSet;
	Associated discretized method : IfcEnum;
	Standard deviation horizontal : IfcFloat;
	Standard deviation vertical : IfcFloat;
END_ENTITY;

ENTITY IfcDispatchingSwitch
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcDisplayDevice;
END_ENTITY;

ENTITY IfcDistanceAlongPoint
 SUBTYPE OF (IfcPoint);
	Distance Along : IfcDouble;
END_ENTITY;

ENTITY IfcDistanceExpression
 SUBTYPE OF (IfcGeometricRepresentationItem);
	DistanceAlong : IfcLengthMeasure;
	OffsetLateral : OPTIONAL IfcLengthMeasure;
	OffsetVertical : OPTIONAL IfcLengthMeasure;
	OffsetLongitudinal : OPTIONAL IfcLengthMeasure;
	AlongHorizontal : OPTIONAL IfcBoolean;
END_ENTITY;

ENTITY IfcDistributionBoard
 SUBTYPE OF (IfcFlowController);
	PredefinedType : IfcDistributionBoardTypeEnum;
END_ENTITY;

ENTITY IfcDistributionBoardType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcDistributionBoardTypeEnum;
END_ENTITY;

ENTITY IfcDistributionCabinetOfLightningProtectionDevice
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcDistributionChamberElement
 SUBTYPE OF (IfcDistributionFlowElement);
	PredefinedType : OPTIONAL IfcDistributionChamberElementTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcDistributionChamberElementTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcDistributionChamberElementTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCSHAREDBLDGSERVICEELEMENTS.IFCDISTRIBUTIONCHAMBERELEMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDistributionChamberElementType
 SUBTYPE OF (IfcDistributionFlowElementType);
	PredefinedType : IfcDistributionChamberElementTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcDistributionChamberElementTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDistributionChamberElementTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDistributionCircuit
 SUBTYPE OF (IfcDistributionSystem);
END_ENTITY;

ENTITY IfcDistributionControlElement
 SUPERTYPE OF (ONEOF
	(IfcActuator
	,IfcSensor
	,IfcController
	,IfcFlowInstrument
	,IfcProtectiveDeviceTrippingUnit
	,IfcAlarm
	,IfcUnitaryControlElement))
 SUBTYPE OF (IfcDistributionElement);
 INVERSE
	AssignedToFlowElement : SET [0:1] OF IfcRelFlowControlElements FOR RelatedControlElements;
END_ENTITY;

ENTITY IfcDistributionControlElementType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcProtectiveDeviceTrippingUnitType
	,IfcAlarmType
	,IfcSensorType
	,IfcActuatorType
	,IfcControllerType
	,IfcFlowInstrumentType
	,IfcUnitaryControlElementType))
 SUBTYPE OF (IfcDistributionElementType);
END_ENTITY;

ENTITY IfcDistributionElement
 SUPERTYPE OF (ONEOF
	(IfcDistributionControlElement
	,IfcDistributionFlowElement))
 SUBTYPE OF (IfcElement);
 INVERSE
	HasPorts : SET  OF IfcRelConnectsPortToElement FOR RelatedElement;
END_ENTITY;

ENTITY IfcDistributionElementType
 SUPERTYPE OF (ONEOF
	(IfcDistributionFlowElementType
	,IfcDistributionControlElementType))
 SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcDistributionFlowElement
 SUPERTYPE OF (ONEOF
	(IfcFlowController
	,IfcFlowSegment
	,IfcFlowTerminal
	,IfcFlowStorageDevice
	,IfcFlowMovingDevice
	,IfcFlowTreatmentDevice
	,IfcEnergyConversionDevice
	,IfcFlowFitting
	,IfcDistributionChamberElement))
 SUBTYPE OF (IfcDistributionElement);
 INVERSE
	HasControlElements : SET [0:1] OF IfcRelFlowControlElements FOR RelatingFlowElement;
END_ENTITY;

ENTITY IfcDistributionFlowElementType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcFlowFittingType
	,IfcFlowSegmentType
	,IfcEnergyConversionDeviceType
	,IfcDistributionChamberElementType
	,IfcFlowControllerType
	,IfcFlowStorageDeviceType
	,IfcFlowTreatmentDeviceType
	,IfcFlowTerminalType
	,IfcFlowMovingDeviceType))
 SUBTYPE OF (IfcDistributionElementType);
END_ENTITY;

ENTITY IfcDistributionFrame
 SUBTYPE OF (IfcTelecomPassiveEquipment);
END_ENTITY;

ENTITY IfcDistributionPort
 SUBTYPE OF (IfcPort);
	FlowDirection : OPTIONAL IfcFlowDirectionEnum;
	PredefinedType : OPTIONAL IfcDistributionPortTypeEnum;
END_ENTITY;

ENTITY IfcDistributionPort;
END_ENTITY;

ENTITY IfcDistributionSystem
 SUPERTYPE OF (ONEOF
	(IfcDistributionCircuit))
 SUBTYPE OF (IfcSystem);
	LongName : OPTIONAL IfcLabel;
	PredefinedType : OPTIONAL IfcDistributionSystemEnum;
END_ENTITY;

ENTITY IfcDitch;
END_ENTITY;

ENTITY IfcDocumentInformation
 SUBTYPE OF (IfcExternalInformation);
	Identification : IfcIdentifier;
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	Location : OPTIONAL IfcURIReference;
	Purpose : OPTIONAL IfcText;
	IntendedUse : OPTIONAL IfcText;
	Scope : OPTIONAL IfcText;
	Revision : OPTIONAL IfcLabel;
	DocumentOwner : OPTIONAL IfcActorSelect;
	CreationTime : OPTIONAL IfcDateTime;
	LastRevisionTime : OPTIONAL IfcDateTime;
	ElectronicFormat : OPTIONAL IfcIdentifier;
	ValidFrom : OPTIONAL IfcDate;
	ValidUntil : OPTIONAL IfcDate;
	Confidentiality : OPTIONAL IfcDocumentConfidentialityEnum;
	Status : OPTIONAL IfcDocumentStatusEnum;
 INVERSE
	DocumentInfoForObjects : SET  OF IfcRelAssociatesDocument FOR RelatingDocument;
	HasDocumentReferences : SET  OF IfcDocumentReference FOR ReferencedDocument;
	IsPointedTo : SET  OF IfcDocumentInformationRelationship FOR RelatedDocuments;
	IsPointer : SET [0:1] OF IfcDocumentInformationRelationship FOR RelatingDocument;
END_ENTITY;

ENTITY IfcDocumentInformationRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingDocument : IfcDocumentInformation;
	RelatedDocuments : SET  OF IfcDocumentInformation;
	RelationshipType : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcDocumentReference
 SUBTYPE OF (IfcExternalReference);
	Description : OPTIONAL IfcText;
	ReferencedDocument : OPTIONAL IfcDocumentInformation;
 INVERSE
	DocumentRefForObjects : SET  OF IfcRelAssociatesDocument FOR RelatingDocument;
 WHERE
	WR1 : EXISTS(Name) XOR EXISTS(ReferencedDocument);
END_ENTITY;

ENTITY IfcDoor
 SUPERTYPE OF (ONEOF
	(IfcDoorStandardCase))
 SUBTYPE OF (IfcBuiltElement);
	OverallHeight : OPTIONAL IfcPositiveLengthMeasure;
	OverallWidth : OPTIONAL IfcPositiveLengthMeasure;
	PredefinedType : OPTIONAL IfcDoorTypeEnum;
	OperationType : OPTIONAL IfcDoorTypeOperationEnum;
	UserDefinedOperationType : OPTIONAL IfcLabel;
 WHERE
	CorrectStyleAssigned : (SIZEOF(IsTypedBy) = 0) 
OR ('IFCSHAREDBLDGELEMENTS.IFCDOORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDoorLiningProperties
 SUBTYPE OF (IfcPreDefinedPropertySet);
	LiningDepth : OPTIONAL IfcPositiveLengthMeasure;
	LiningThickness : OPTIONAL IfcNonNegativeLengthMeasure;
	ThresholdDepth : OPTIONAL IfcPositiveLengthMeasure;
	ThresholdThickness : OPTIONAL IfcNonNegativeLengthMeasure;
	TransomThickness : OPTIONAL IfcNonNegativeLengthMeasure;
	TransomOffset : OPTIONAL IfcLengthMeasure;
	LiningOffset : OPTIONAL IfcLengthMeasure;
	ThresholdOffset : OPTIONAL IfcLengthMeasure;
	CasingThickness : OPTIONAL IfcPositiveLengthMeasure;
	CasingDepth : OPTIONAL IfcPositiveLengthMeasure;
	ShapeAspectStyle : OPTIONAL IfcShapeAspect;
	LiningToPanelOffsetX : OPTIONAL IfcLengthMeasure;
	LiningToPanelOffsetY : OPTIONAL IfcLengthMeasure;
 WHERE
	WR31 : NOT(EXISTS(LiningDepth) AND NOT(EXISTS(LiningThickness)));
	WR32 : NOT(EXISTS(ThresholdDepth) AND NOT(EXISTS(ThresholdThickness)));
	WR33 : (EXISTS(TransomOffset) AND EXISTS(TransomThickness)) XOR
(NOT(EXISTS(TransomOffset)) AND NOT(EXISTS(TransomThickness)));
	WR34 : (EXISTS(CasingDepth) AND EXISTS(CasingThickness)) XOR
(NOT(EXISTS(CasingDepth)) AND NOT(EXISTS(CasingThickness)));
	WR35 : (EXISTS(SELF\IfcPropertySetDefinition.DefinesType[1])) 
AND 
(
 ('IFCSHAREDBLDGELEMENTS.IFCDOORTYPE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
  OR
 ('IFCARCHITECTUREDOMAIN.IFCDOORSTYLE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
);
END_ENTITY;

ENTITY IfcDoorPanelProperties
 SUBTYPE OF (IfcPreDefinedPropertySet);
	PanelDepth : OPTIONAL IfcPositiveLengthMeasure;
	PanelOperation : IfcDoorPanelOperationEnum;
	PanelWidth : OPTIONAL IfcNormalisedRatioMeasure;
	PanelPosition : IfcDoorPanelPositionEnum;
	ShapeAspectStyle : OPTIONAL IfcShapeAspect;
 WHERE
	ApplicableToType : (EXISTS(SELF\IfcPropertySetDefinition.DefinesType[1])) 
AND 
(
 ('IFCSHAREDBLDGELEMENTS.IFCDOORTYPE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
  OR
 ('IFCARCHITECTUREDOMAIN.IFCDOORSTYLE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
);
END_ENTITY;

ENTITY IfcDoorStandardCase
 SUBTYPE OF (IfcDoor);
END_ENTITY;

ENTITY IfcDoorStyle
 SUBTYPE OF (IfcTypeProduct);
	OperationType : IfcDoorStyleOperationEnum;
	ConstructionType : IfcDoorStyleConstructionEnum;
	ParameterTakesPrecedence : IfcBoolean;
	Sizeable : IfcBoolean;
END_ENTITY;

ENTITY IfcDoorType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcDoorTypeEnum;
	OperationType : IfcDoorTypeOperationEnum;
	ParameterTakesPrecedence : OPTIONAL IfcBoolean;
	UserDefinedOperationType : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcDoorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDoorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDrainChannel;
END_ENTITY;

ENTITY IfcDrainPipe;
END_ENTITY;

ENTITY IfcDrainageAlignment;
END_ENTITY;

ENTITY IfcDraughtingPreDefinedColour
 SUBTYPE OF (IfcPreDefinedColour);
 WHERE
	PreDefinedColourNames : SELF\IfcPreDefinedItem.Name IN ['black','red','green','blue','yellow',
     'magenta','cyan','white','by layer'];
END_ENTITY;

ENTITY IfcDraughtingPreDefinedCurveFont
 SUBTYPE OF (IfcPreDefinedCurveFont);
 WHERE
	PreDefinedCurveFontNames : SELF\IfcPredefinedItem.Name IN
       ['continuous',
        'chain',
        'chain double dash',
        'dashed',
        'dotted',
        'by layer'];
END_ENTITY;

ENTITY IfcDropper;
END_ENTITY;

ENTITY IfcDuct
 SUBTYPE OF (IfcTelecomLayingInfrastructure);
	primaryPosition : IfcLineFromTo;
END_ENTITY;

ENTITY IfcDuctFitting
 SUBTYPE OF (IfcFlowFitting);
	PredefinedType : OPTIONAL IfcDuctFittingTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcDuctFittingTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcDuctFittingTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCDUCTFITTINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDuctFittingType
 SUBTYPE OF (IfcFlowFittingType);
	PredefinedType : IfcDuctFittingTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcDuctFittingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDuctFittingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDuctSegment
 SUBTYPE OF (IfcFlowSegment);
	PredefinedType : OPTIONAL IfcDuctSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcDuctSegmentTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcDuctSegmentTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCDUCTSEGMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDuctSegmentType
 SUBTYPE OF (IfcFlowSegmentType);
	PredefinedType : IfcDuctSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcDuctSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDuctSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDuctSilencer
 SUBTYPE OF (IfcFlowTreatmentDevice);
	PredefinedType : OPTIONAL IfcDuctSilencerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcDuctSilencerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcDuctSilencerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCDUCTSILENCERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcDuctSilencerType
 SUBTYPE OF (IfcFlowTreatmentDeviceType);
	PredefinedType : IfcDuctSilencerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcDuctSilencerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDuctSilencerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDynamicParameters
 SUBTYPE OF (IfcSpecifications);
END_ENTITY;

ENTITY IfcEUtranNodeB
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcEarth;
END_ENTITY;

ENTITY IfcEarthAnchor;
END_ENTITY;

ENTITY IfcEarthElectrode;
END_ENTITY;

ENTITY IfcEarthGrid;
END_ENTITY;

ENTITY IfcEarthMat
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Installation Depth : IfcReal;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation date : IfcDate;
	Track edge : IfcIdentifier;
	Transverse Incline : IfcReal;
	Type : IfcEarthMatType;
END_ENTITY;

ENTITY IfcEarthingCircuit;
END_ENTITY;

ENTITY IfcEarthingConductor
 SUBTYPE OF (IfcStrandedConductor);
END_ENTITY;

ENTITY IfcEarthingFitting
 SUBTYPE OF (IfcOcsFitting);
END_ENTITY;

ENTITY IfcEarthingLine;
END_ENTITY;

ENTITY IfcEarthingSwitch
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcEarthingTerminal;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Position : IfcTrackAt;
	Putting into operation Date : IfcDate;
	Track / Concrete slab : IfcIdentifier;
	Track base Type : IfcEarthingTerminalTrackBaseType;
END_ENTITY;

ENTITY IfcEarthingTerminal;
END_ENTITY;

ENTITY IfcEarthquakeAccelerometer
 SUBTYPE OF (IfcSensor);
END_ENTITY;

ENTITY IfcEarthworksCut
 SUBTYPE OF (IfcFeatureElementSubtraction);
	PredefinedType : IfcEarthworksCutTypeEnum;
END_ENTITY;

ENTITY IfcEarthworksElement
 SUPERTYPE OF (ONEOF
	(IfcReinforcedSoil
	,IfcEarthworksFill))
 SUBTYPE OF (IfcBuiltElement);
END_ENTITY;

ENTITY IfcEarthworksFill
 SUBTYPE OF (IfcEarthworksElement);
	PredefinedType : IfcEarthworksFillTypeEnum;
END_ENTITY;

ENTITY IfcEdge
 SUPERTYPE OF (ONEOF
	(IfcOrientedEdge
	,IfcEdgeCurve
	,IfcSubedge))
 SUBTYPE OF (IfcTopologicalRepresentationItem);
	EdgeStart : IfcVertex;
	EdgeEnd : IfcVertex;
END_ENTITY;

ENTITY IfcEdge
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTrackEdge));
END_ENTITY;

ENTITY IfcEdgeCurve
 SUBTYPE OF (IfcEdge);
	EdgeGeometry : IfcCurve;
	SameSense : IfcBoolean;
END_ENTITY;

ENTITY IfcEdgeLoop
 SUBTYPE OF (IfcLoop);
	EdgeList : LIST  OF IfcOrientedEdge;
 DERIVE
	Ne : IfcInteger := SIZEOF(EdgeList);
 WHERE
	IsClosed : (EdgeList[1].EdgeStart) :=: (EdgeList[Ne].EdgeEnd);
	IsContinuous : IfcLoopHeadToTail(SELF);
END_ENTITY;

ENTITY IfcElectricAppliance
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcElectricApplianceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcElectricApplianceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcElectricApplianceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCELECTRICAPPLIANCETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcElectricApplianceType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcElectricApplianceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcElectricApplianceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcElectricApplianceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElectricControlCabinetOutdoor
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcElectricDistributionBoard
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcElectricDistributionBoardTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcElectricDistributionBoardTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcElectricDistributionBoardTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCELECTRICDISTRIBUTIONBOARDTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcElectricDistributionBoard;
END_ENTITY;

ENTITY IfcElectricDistributionBoardType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcElectricDistributionBoardTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcElectricDistributionBoardTypeEnum.USERDEFINED) OR
((PredefinedType = IfcElectricDistributionBoardTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElectricFlowStorageDevice
 SUBTYPE OF (IfcFlowStorageDevice);
	PredefinedType : OPTIONAL IfcElectricFlowStorageDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcElectricFlowStorageDeviceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcElectricFlowStorageDeviceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCELECTRICFLOWSTORAGEDEVICETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcElectricFlowStorageDeviceType
 SUBTYPE OF (IfcFlowStorageDeviceType);
	PredefinedType : IfcElectricFlowStorageDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcElectricFlowStorageDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcElectricFlowStorageDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElectricFlowTreatmentDevice
 SUBTYPE OF (IfcFlowTreatmentDevice);
	PredefinedType : IfcElectricFlowTreatmentDeviceTypeEnum;
END_ENTITY;

ENTITY IfcElectricFlowTreatmentDeviceType
 SUBTYPE OF (IfcFlowTreatmentDeviceType);
	PredefinedType : IfcElectricFlowTreatmentDeviceTypeEnum;
END_ENTITY;

ENTITY IfcElectricGenerator
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcElectricGeneratorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcElectricGeneratorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcElectricGeneratorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCELECTRICGENERATORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcElectricGeneratorType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcElectricGeneratorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcElectricGeneratorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcElectricGeneratorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElectricGutter
 SUBTYPE OF (IfcUndergroundFacilities);
END_ENTITY;

ENTITY IfcElectricMotor
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcElectricMotorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcElectricMotorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcElectricMotorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCELECTRICMOTORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcElectricMotorType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcElectricMotorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcElectricMotorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcElectricMotorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElectricPowerConverter
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcInverter
	,IfcChopper
	,IfcRectifier))
 SUBTYPE OF (IfcEnergyConversionDevice);
END_ENTITY;

ENTITY IfcElectricStorageDevice;
END_ENTITY;

ENTITY IfcElectricTimeControl
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcElectricTimeControlTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcElectricTimeControlTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcElectricTimeControlTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCELECTRICTIMECONTROLTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcElectricTimeControlType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcElectricTimeControlTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcElectricTimeControlTypeEnum.USERDEFINED) OR
((PredefinedType = IfcElectricTimeControlTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElectricalActuators
 SUBTYPE OF (IfcActuator);
END_ENTITY;

ENTITY IfcElectricalConductor
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCable
	,IfcNonInsulatedConductor
	,IfcStrandedConductor
	,IfcInsulatedCables
	,IfcBusbar
	,IfcSolidConductor));
END_ENTITY;

ENTITY IfcElectricalConnector;
END_ENTITY;

ENTITY IfcElectronicFilter;
END_ENTITY;

ENTITY IfcElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcBuiltElement
	,IfcElementComponent
	,IfcFeatureElement
	,IfcVirtualElement
	,IfcElementAssembly
	,IfcGeographicElement
	,IfcGeotechnicalElement
	,IfcFurnishingElement
	,IfcTransportElement
	,IfcCivilElement
	,IfcDistributionElement))
 SUBTYPE OF (IfcProduct);
 INVERSE
	FillsVoids : SET [0:1] OF IfcRelFillsElement FOR RelatedBuildingElement;
	ConnectedTo : SET  OF IfcRelConnectsElements FOR RelatingElement;
	HasProjections : SET  OF IfcRelProjectsElement FOR RelatingElement;
	HasOpenings : SET  OF IfcRelVoidsElement FOR RelatingBuildingElement;
	IsConnectionRealization : SET  OF IfcRelConnectsWithRealizingElements FOR RealizingElements;
	ProvidesBoundaries : SET  OF IfcRelSpaceBoundary FOR RelatedBuildingElement;
	ConnectedFrom : SET  OF IfcRelConnectsElements FOR RelatedElement;
	ContainedInStructure : SET [0:1] OF IfcRelContainedInSpatialStructure FOR RelatedElements;
	HasCoverings : SET  OF IfcRelCoversBldgElements FOR RelatingBuildingElement;
END_ENTITY;

ENTITY IfcElementAssembly
 SUBTYPE OF (IfcElement);
	PredefinedType : IfcElementAssemblyTypeEnum;
	AssemblyPlace : OPTIONAL IfcAssemblyPlaceEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcElementAssemblyTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcElementAssemblyTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCPRODUCTEXTENSION.IFCELEMENTASSEMBLYTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcElementAssemblyType
 SUBTYPE OF (IfcElementType);
	PredefinedType : IfcElementAssemblyTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcElementAssemblyTypeEnum.USERDEFINED) OR 
((PredefinedType = IfcElementAssemblyTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElementComponent
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcFastener
	,IfcVibrationDamper
	,IfcBuildingElementPart
	,IfcMechanicalFastener
	,IfcDiscreteAccessory
	,IfcVibrationIsolator
	,IfcSign
	,IfcReinforcingElement
	,IfcImpactProtectionDevice))
 SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcElementComponentType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcVibrationIsolatorType
	,IfcVibrationDamperType
	,IfcSignType
	,IfcFastenerType
	,IfcReinforcingElementType
	,IfcDiscreteAccessoryType
	,IfcImpactProtectionDeviceType
	,IfcBuildingElementPartType
	,IfcMechanicalFastenerType))
 SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcElementQuantity
 SUBTYPE OF (IfcQuantitySet);
	MethodOfMeasurement : OPTIONAL IfcLabel;
	Quantities : SET  OF IfcPhysicalQuantity;
 WHERE
	UniqueQuantityNames : IfcUniqueQuantityNames(Quantities);
END_ENTITY;

ENTITY IfcElementType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDistributionElementType
	,IfcFurnishingElementType
	,IfcTransportElementType
	,IfcCivilElementType
	,IfcElementComponentType
	,IfcBuiltElementType
	,IfcGeographicElementType
	,IfcElementAssemblyType))
 SUBTYPE OF (IfcTypeProduct);
	ElementType : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcElementarySector;
END_ENTITY;

ENTITY IfcElementarySurface
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSphericalSurface
	,IfcToroidalSurface
	,IfcPlane
	,IfcCylindricalSurface))
 SUBTYPE OF (IfcSurface);
	Position : IfcAxis2Placement3D;
END_ENTITY;

ENTITY IfcEllipse
 SUBTYPE OF (IfcConic);
	SemiAxis1 : IfcPositiveLengthMeasure;
	SemiAxis2 : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcEllipseProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	SemiAxis1 : IfcPositiveLengthMeasure;
	SemiAxis2 : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcEmbeddedTrackForTraffic
 SUBTYPE OF (IfcAbsTrackCovering);
	Accessible by vehicle : IfcBoolean;
	Contract : IfcIdentifier;
	Covering Material : IfcEmbeddedTrackCoveringMaterial;
	Disassembly Date : IfcDate;
	Drainage : IfcBoolean;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Name / Town/City : IfcText;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Rated Load : IfcReal;
	Relative Position : IfcRelativePosition;
	Track edge : IfcIdentifier;
	Type : IfcEmbeddedTrackType;
	Width : IfcReal;
END_ENTITY;

ENTITY IfcEmergencyFishplate
 SUBTYPE OF (IfcAbsJoint);
	Joint Control Equipment : IfcBoolean;
	Type : IfcBondedJointType;
END_ENTITY;

ENTITY IfcEmergencySwitchOff
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcEnergyConversionDevice
 SUPERTYPE OF (ONEOF
	(IfcMotorConnection
	,IfcSolarDevice
	,IfcChiller
	,IfcTubeBundle
	,IfcBoiler
	,IfcHeatExchanger
	,IfcTransformer
	,IfcCoil
	,IfcAirToAirHeatRecovery
	,IfcEvaporativeCooler
	,IfcUnitaryEquipment
	,IfcEvaporator
	,IfcCooledBeam
	,IfcEngine
	,IfcCondenser
	,IfcElectricGenerator
	,IfcCoolingTower
	,IfcHumidifier
	,IfcBurner
	,IfcElectricMotor))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcEnergyConversionDevice
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcElectricPowerConverter
	,IfcPowerTransformer
	,IfcInstrumentTransformer));
END_ENTITY;

ENTITY IfcEnergyConversionDeviceType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCooledBeamType
	,IfcChillerType
	,IfcUnitaryEquipmentType
	,IfcElectricMotorType
	,IfcEvaporatorType
	,IfcSolarDeviceType
	,IfcEngineType
	,IfcCoolingTowerType
	,IfcEvaporativeCoolerType
	,IfcElectricGeneratorType
	,IfcBoilerType
	,IfcHumidifierType
	,IfcTransformerType
	,IfcBurnerType
	,IfcCoilType
	,IfcMotorConnectionType
	,IfcAirToAirHeatRecoveryType
	,IfcCondenserType
	,IfcTubeBundleType
	,IfcHeatExchangerType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcEnergyEarthingZone
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcEnergyElectricTransferZone
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcEnergyEquipmentVolume
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcEnergyInfrastructureVolume
 SUPERTYPE OF (ONEOF
	(IfcOverheadLineInfrastructureReservation))
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcEnergyReservedVolume
 SUPERTYPE OF (ONEOF
	(IfcEnergyReturnCurrentZone
	,IfcEnergyUndergroundLineZone
	,IfcTechnicalBuilding
	,IfcTensioningSection
	,IfcEnergyElectricTransferZone
	,IfcEnergyEarthingZone
	,IfcEnergyEquipmentVolume
	,IfcOverheadLineOverlapZone
	,IfcEnergyInfrastructureVolume))
 SUBTYPE OF (IfcRailwayReservedVolume);
END_ENTITY;

ENTITY IfcEnergyReturnCurrentZone
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcEnergyToTrainTransmissionSystem;
END_ENTITY;

ENTITY IfcEnergyUndergroundLineZone
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcEngine
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcEngineTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcEngineTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcEngineTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCHVACDOMAIN.IFCENGINETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcEngineType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcEngineTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcEngineTypeEnum.USERDEFINED) OR
((PredefinedType = IfcEngineTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcEntity  New
 SUPERTYPE OF (ONEOF
	(IfcNewPredefinedtype
	,IfcExistingPredefinedtype))
 SUBTYPE OF (IfcEntity Modified);
END_ENTITY;

ENTITY IfcEntity Exisitng
 SUPERTYPE OF (ONEOF
	(IfcEntity Modified));
END_ENTITY;

ENTITY IfcEntity Modified
 SUPERTYPE OF (ONEOF
	(IfcEntity  New))
 SUBTYPE OF (IfcEntity Exisitng);
END_ENTITY;

ENTITY IfcEnvironmentalIssues;
END_ENTITY;

ENTITY IfcEnvironnementalProtection
 SUPERTYPE OF (ONEOF
	(IfcBirdProtection
	,IfcOilRetentionTray))
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcEquipmentAccessZone
 SUPERTYPE OF (ONEOF
	(IfcTopEquipmentAccessZone
	,IfcRearEquipmentAccessZone
	,IfcRightEquipmentAccessZone
	,IfcLeftEquipmentAccessZone
	,IfcFrontEquipmentAccessZone
	,IfcBottomEquipmentAccessZone));
END_ENTITY;

ENTITY IfcEquipmentIdentityRegister
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcEvaluator
 SUBTYPE OF (IfcAxleCountingEquipment);
END_ENTITY;

ENTITY IfcEvaporativeCooler
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcEvaporativeCoolerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcEvaporativeCoolerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcEvaporativeCoolerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCEVAPORATIVECOOLERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcEvaporativeCoolerType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcEvaporativeCoolerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcEvaporativeCoolerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcEvaporativeCoolerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcEvaporator
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcEvaporatorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcEvaporatorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcEvaporatorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCEVAPORATORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcEvaporatorType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcEvaporatorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcEvaporatorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcEvaporatorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcEvent
 SUBTYPE OF (IfcProcess);
	PredefinedType : OPTIONAL IfcEventTypeEnum;
	EventTriggerType : OPTIONAL IfcEventTriggerTypeEnum;
	UserDefinedEventTriggerType : OPTIONAL IfcLabel;
	EventOccurenceTime : OPTIONAL IfcEventTime;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR (PredefinedType <> IfcEventTypeEnum.USERDEFINED) OR ((PredefinedType = IfcEventTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : NOT(EXISTS(EventTriggerType)) OR (EventTriggerType <> IfcEventTriggerTypeEnum.USERDEFINED) OR ((EventTriggerType = IfcEventTriggerTypeEnum.USERDEFINED) AND EXISTS(UserDefinedEventTriggerType));
END_ENTITY;

ENTITY IfcEventTime
 SUBTYPE OF (IfcSchedulingTime);
	ActualDate : OPTIONAL IfcDateTime;
	EarlyDate : OPTIONAL IfcDateTime;
	LateDate : OPTIONAL IfcDateTime;
	ScheduleDate : OPTIONAL IfcDateTime;
END_ENTITY;

ENTITY IfcEventType
 SUBTYPE OF (IfcTypeProcess);
	PredefinedType : IfcEventTypeEnum;
	EventTriggerType : IfcEventTriggerTypeEnum;
	UserDefinedEventTriggerType : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcEventTypeEnum.USERDEFINED) OR ((PredefinedType = IfcEventTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeProcess.ProcessType)) ;
	CorrectEventTriggerType : (EventTriggerType <> IfcEventTriggerTypeEnum.USERDEFINED) OR ((EventTriggerType = IfcEventTriggerTypeEnum.USERDEFINED) AND EXISTS(UserDefinedEventTriggerType)) ;
END_ENTITY;

ENTITY IfcEventlist;
END_ENTITY;

ENTITY IfcExit;
END_ENTITY;

ENTITY IfcExit;
END_ENTITY;

ENTITY IfcExpansionJoint;
END_ENTITY;

ENTITY IfcExtendedProperties
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcMaterialProperties
	,IfcProfileProperties))
 SUBTYPE OF (IfcPropertyAbstraction);
	Name : OPTIONAL IfcIdentifier;
	Description : OPTIONAL IfcText;
	Properties : SET  OF IfcProperty;
END_ENTITY;

ENTITY IfcExternalInformation
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDocumentInformation
	,IfcClassification
	,IfcLibraryInformation));
END_ENTITY;

ENTITY IfcExternalLockingDevice
 SUBTYPE OF (IfcTurnoutSignallingEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcExternalReference
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcExternallyDefinedTextFont
	,IfcExternallyDefinedSurfaceStyle
	,IfcClassificationReference
	,IfcDocumentReference
	,IfcLibraryReference
	,IfcExternallyDefinedHatchStyle));
	Location : OPTIONAL IfcURIReference;
	Identification : OPTIONAL IfcIdentifier;
	Name : OPTIONAL IfcLabel;
 INVERSE
	ExternalReferenceForResources : SET  OF IfcExternalReferenceRelationship FOR RelatingReference;
 WHERE
	WR1 : EXISTS(Identification) OR EXISTS(Location) OR EXISTS(Name);
END_ENTITY;

ENTITY IfcExternalReferenceRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingReference : IfcExternalReference;
END_ENTITY;

ENTITY IfcExternalSpatialElement
 SUBTYPE OF (IfcExternalSpatialStructureElement);
	PredefinedType : OPTIONAL IfcExternalSpatialElementTypeEnum;
 INVERSE
	BoundedBy : SET  OF IfcRelSpaceBoundary FOR RelatingSpace;
END_ENTITY;

ENTITY IfcExternalSpatialStructureElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcExternalSpatialElement))
 SUBTYPE OF (IfcSpatialElement);
END_ENTITY;

ENTITY IfcExternallyDefinedHatchStyle
 SUBTYPE OF (IfcExternalReference);
END_ENTITY;

ENTITY IfcExternallyDefinedSurfaceStyle
 SUBTYPE OF (IfcExternalReference);
END_ENTITY;

ENTITY IfcExternallyDefinedTextFont
 SUBTYPE OF (IfcExternalReference);
END_ENTITY;

ENTITY IfcExtrudedAreaSolid
 SUPERTYPE OF (ONEOF
	(IfcExtrudedAreaSolidTapered))
 SUBTYPE OF (IfcSweptAreaSolid);
	ExtrudedDirection : IfcDirection;
	Depth : IfcPositiveLengthMeasure;
 WHERE
	ValidExtrusionDirection : IfcDotProduct(IfcRepresentationItem() || IfcGeometricRepresentationItem() || IfcDirection([0.0,0.0,1.0]), SELF.ExtrudedDirection) <> 0.0;
END_ENTITY;

ENTITY IfcExtrudedAreaSolidTapered
 SUBTYPE OF (IfcExtrudedAreaSolid);
	EndSweptArea : IfcProfileDef;
 WHERE
	CorrectProfileAssignment : IfcTaperedSweptAreaProfiles(SELF\IfcSweptAreaSolid.SweptArea, SELF.EndSweptArea);
END_ENTITY;

ENTITY IfcFace
 SUPERTYPE OF (ONEOF
	(IfcFaceSurface))
 SUBTYPE OF (IfcTopologicalRepresentationItem);
	Bounds : SET  OF IfcFaceBound;
 INVERSE
	HasTextureMaps : SET  OF IfcTextureMap FOR MappedTo;
 WHERE
	HasOuterBound : SIZEOF(QUERY(temp <* Bounds | 'IFCTOPOLOGYRESOURCE.IFCFACEOUTERBOUND' IN TYPEOF(temp))) <= 1;
END_ENTITY;

ENTITY IfcFaceBasedSurfaceModel
 SUBTYPE OF (IfcGeometricRepresentationItem);
	FbsmFaces : SET  OF IfcConnectedFaceSet;
 DERIVE
	Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcFaceBound
 SUPERTYPE OF (ONEOF
	(IfcFaceOuterBound))
 SUBTYPE OF (IfcTopologicalRepresentationItem);
	Bound : IfcLoop;
	Orientation : IfcBoolean;
END_ENTITY;

ENTITY IfcFaceOuterBound
 SUBTYPE OF (IfcFaceBound);
END_ENTITY;

ENTITY IfcFaceSurface
 SUPERTYPE OF (ONEOF
	(IfcAdvancedFace))
 SUBTYPE OF (IfcFace);
	FaceSurface : IfcSurface;
	SameSense : IfcBoolean;
END_ENTITY;

ENTITY IfcFacetedBrep
 SUPERTYPE OF (ONEOF
	(IfcFacetedBrepWithVoids))
 SUBTYPE OF (IfcManifoldSolidBrep);
END_ENTITY;

ENTITY IfcFacetedBrepWithVoids
 SUBTYPE OF (IfcFacetedBrep);
	Voids : SET  OF IfcClosedShell;
END_ENTITY;

ENTITY IfcFacility
 SUPERTYPE OF (ONEOF
	(IfcRailway
	,IfcMarineFacility
	,IfcBuilding
	,IfcRoad
	,IfcBridge))
 SUBTYPE OF (IfcSpatialStructureElement);
END_ENTITY;

ENTITY IfcFacilityPart
 SUPERTYPE OF (ONEOF
	(IfcBridgePart))
 SUBTYPE OF (IfcSpatialStructureElement);
	PredefinedType : IfcFacilityPartTypeSelect;
	UsageType : IfcFacilityUsageEnum;
END_ENTITY;

ENTITY IfcFailureConnectionCondition
 SUBTYPE OF (IfcStructuralConnectionCondition);
	TensionFailureX : OPTIONAL IfcForceMeasure;
	TensionFailureY : OPTIONAL IfcForceMeasure;
	TensionFailureZ : OPTIONAL IfcForceMeasure;
	CompressionFailureX : OPTIONAL IfcForceMeasure;
	CompressionFailureY : OPTIONAL IfcForceMeasure;
	CompressionFailureZ : OPTIONAL IfcForceMeasure;
END_ENTITY;

ENTITY IfcFairlead;
END_ENTITY;

ENTITY IfcFallDetector
 SUBTYPE OF (IfcDetector);
END_ENTITY;

ENTITY IfcFan
 SUBTYPE OF (IfcFlowMovingDevice);
	PredefinedType : OPTIONAL IfcFanTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcFanTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcFanTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCFANTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcFanOut
 SUBTYPE OF (IfcCablingAccessory);
END_ENTITY;

ENTITY IfcFanType
 SUBTYPE OF (IfcFlowMovingDeviceType);
	PredefinedType : IfcFanTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFanTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFanTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFastener
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : OPTIONAL IfcFastenerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcFastenerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFastenerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSHAREDCOMPONENTELEMENTS.IFCFASTENERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcFastenerType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : IfcFastenerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFastenerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFastenerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFastening
	Disassembly date : IfcDate;
	Installation date : IfcDate;
	Manufacturing date : IfcDate;
	Place of application : IfcNewCoordinatesLocal;
	Putting into operation date : IfcDate;
	Rail clip (fastening) : IfcFasteningRailClip;
	Rail insulator : IfcFasteningRailInsulator;
	Rail support : IfcFasteningRailSupport;
	Relative Position : IfcRelativePosition;
	Ripped plate : IfcBoolean;
	Rock bolt : IfcFasteningRockBolt;
	Sleeper : IfcIdentifier;
	Sleeper fastening : IfcFasteningSleeper;
	Sleeper screw : IfcFasteningSleeperScrew;
	Technical Standard / Norm : IfcTechnicalStandard;
	Tie Plate : IfcFasteningTiePlate;
	Track fastening elasticity type : IfcFasteningTrackElasticityType;
	Type : IfcBoolean;
	is reduced resistance fastening : IfcBoolean;
END_ENTITY;

ENTITY IfcFeatureElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcFeatureElementAddition
	,IfcSurfaceFeature
	,IfcFeatureElementSubtraction))
 SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcFeatureElementAddition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcProjectionElement))
 SUBTYPE OF (IfcFeatureElement);
 INVERSE
	ProjectsElements : IfcRelProjectsElement FOR RelatedFeatureElement;
END_ENTITY;

ENTITY IfcFeatureElementSubtraction
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcOpeningElement
	,IfcVoidingFeature
	,IfcEarthworksCut))
 SUBTYPE OF (IfcFeatureElement);
 INVERSE
	VoidsElements : IfcRelVoidsElement FOR RelatedOpeningElement;
 WHERE
	HasNoSubtraction : SIZEOF(SELF\IfcElement.HasOpenings) = 0;
	IsNotFilling : SIZEOF(SELF\IfcElement.FillsVoids) = 0;
END_ENTITY;

ENTITY IfcFeeder
 SUBTYPE OF (IfcCoaxialCable);
END_ENTITY;

ENTITY IfcFeederLine
 SUPERTYPE OF (ONEOF
	(IfcAlongTrackFeeder
	,IfcByPassFeeder
	,IfcReinforcingFeeder
	,IfcPositiveFeeder
	,IfcNegativeFeeder));
END_ENTITY;

ENTITY IfcFeederSuspension
 SUBTYPE OF (IfcOcsSuspension);
END_ENTITY;

ENTITY IfcFeederWire
 SUBTYPE OF (IfcStrandedConductor);
END_ENTITY;

ENTITY IfcFeedingSection;
END_ENTITY;

ENTITY IfcFence
 SUBTYPE OF (IfcBarrier);
END_ENTITY;

ENTITY IfcFiber;
END_ENTITY;

ENTITY IfcFiberEndpoint;
END_ENTITY;

ENTITY IfcFiberTube;
END_ENTITY;

ENTITY IfcFillAreaStyle
 SUBTYPE OF (IfcPresentationStyle);
	ModelorDraughting : OPTIONAL IfcBoolean;
 WHERE
	MaxOneColour : SIZEOF(QUERY(Style <* SELF.FillStyles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCCOLOUR' IN
   TYPEOF(Style)
  )) <= 1;
	MaxOneExtHatchStyle : SIZEOF(QUERY(Style <* SELF.FillStyles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCEXTERNALLYDEFINEDHATCHSTYLE' IN
   TYPEOF(Style)
  )) <= 1;
	ConsistentHatchStyleDef : IfcCorrectFillAreaStyle(SELF.FillStyles);
END_ENTITY;

ENTITY IfcFillAreaStyleHatching
 SUBTYPE OF (IfcGeometricRepresentationItem);
	HatchLineAppearance : IfcCurveStyle;
	StartOfNextHatchLine : IfcHatchLineDistanceSelect;
	PointOfReferenceHatchLine : OPTIONAL IfcCartesianPoint;
	PatternStart : OPTIONAL IfcCartesianPoint;
	HatchLineAngle : IfcPlaneAngleMeasure;
 WHERE
	PatternStart2D : NOT(EXISTS(PatternStart)) OR (PatternStart.Dim = 2)
;
	RefHatchLine2D : NOT(EXISTS(PointOfReferenceHatchLine)) OR (PointOfReferenceHatchLine.Dim = 2);
END_ENTITY;

ENTITY IfcFillAreaStyleTiles
 SUBTYPE OF (IfcGeometricRepresentationItem);
	TilingPattern : LIST [2:2] OF IfcVector;
	Tiles : SET  OF IfcStyledItem;
	TilingScale : IfcPositiveRatioMeasure;
END_ENTITY;

ENTITY IfcFilter
 SUBTYPE OF (IfcFlowTreatmentDevice);
	PredefinedType : OPTIONAL IfcFilterTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcFilterTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcFilterTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCFILTERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcFilterCapacitor
 SUBTYPE OF (IfcLowPassFilter);
END_ENTITY;

ENTITY IfcFilterType
 SUBTYPE OF (IfcFlowTreatmentDeviceType);
	PredefinedType : IfcFilterTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFilterTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFilterTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFilters
 SUPERTYPE OF (ONEOF
	(IfcHighPassFilter
	,IfcHarmonicFilter
	,IfcBandPassFilter
	,IfcBandStopFilter
	,IfcLowPassFilter));
END_ENTITY;

ENTITY IfcFireSuppressionTerminal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcFireSuppressionTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcFireSuppressionTerminalTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcFireSuppressionTerminalTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCPLUMBINGFIREPROTECTIONDOMAIN.IFCFIRESUPPRESSIONTERMINALTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcFireSuppressionTerminalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcFireSuppressionTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFireSuppressionTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFireSuppressionTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFittingAccessory;
END_ENTITY;

ENTITY IfcFixedReferenceSweptAreaSolid
 SUBTYPE OF (IfcDirectrixCurveSweptAreaSolid);
	FixedReference : IfcDirection;
 WHERE
	DirectrixBounded : (EXISTS(StartParam) AND EXISTS(EndParam)) OR 
(SIZEOF(['IFCGEOMETRYRESOURCE.IFCCONIC', 'IFCGEOMETRYRESOURCE.IFCBOUNDEDCURVE'] * TYPEOF(Directrix)) = 1);
END_ENTITY;

ENTITY IfcFixing;
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcFlowController
 SUPERTYPE OF (ONEOF
	(IfcProtectiveDevice
	,IfcFlowMeter
	,IfcElectricDistributionBoard
	,IfcAirTerminalBox
	,IfcElectricTimeControl
	,IfcSwitchingDevice
	,IfcValve
	,IfcDistributionBoard
	,IfcDamper))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowControllerType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAirTerminalBoxType
	,IfcDistributionBoardType
	,IfcElectricTimeControlType
	,IfcValveType
	,IfcFlowMeterType
	,IfcProtectiveDeviceType
	,IfcSwitchingDeviceType
	,IfcDamperType
	,IfcElectricDistributionBoardType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowFitting
 SUPERTYPE OF (ONEOF
	(IfcCableFitting
	,IfcDuctFitting
	,IfcJunctionBox
	,IfcCableCarrierFitting
	,IfcPipeFitting))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowFittingType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcJunctionBoxType
	,IfcCableCarrierFittingType
	,IfcCableFittingType
	,IfcPipeFittingType
	,IfcDuctFittingType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowInstrument
 SUBTYPE OF (IfcDistributionControlElement);
	PredefinedType : OPTIONAL IfcFlowInstrumentTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcFlowInstrumentTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcFlowInstrumentTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCBUILDINGCONTROLSDOMAIN.IFCFLOWINSTRUMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcFlowInstrumentType
 SUBTYPE OF (IfcDistributionControlElementType);
	PredefinedType : IfcFlowInstrumentTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFlowInstrumentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFlowInstrumentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFlowMeter
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcFlowMeterTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcFlowMeterTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcFlowMeterTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCFLOWMETERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcFlowMeterType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcFlowMeterTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFlowMeterTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFlowMeterTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFlowMovingDevice
 SUPERTYPE OF (ONEOF
	(IfcCompressor
	,IfcPump
	,IfcFan))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowMovingDeviceType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPumpType
	,IfcCompressorType
	,IfcFanType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowSegment
 SUPERTYPE OF (ONEOF
	(IfcDuctSegment
	,IfcPipeSegment
	,IfcCableCarrierSegment
	,IfcCableSegment
	,IfcConveyorSegment))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowSegmentType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCableCarrierSegmentType
	,IfcPipeSegmentType
	,IfcDuctSegmentType
	,IfcConveyorSegmentType
	,IfcCableSegmentType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowStorageDevice
 SUPERTYPE OF (ONEOF
	(IfcTank
	,IfcElectricFlowStorageDevice))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowStorageDeviceType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcElectricFlowStorageDeviceType
	,IfcTankType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowTerminal
 SUPERTYPE OF (ONEOF
	(IfcLightFixture
	,IfcOutlet
	,IfcWasteTerminal
	,IfcElectricAppliance
	,IfcMobileTelecommunicationsAppliance
	,IfcSanitaryTerminal
	,IfcSignal
	,IfcFireSuppressionTerminal
	,IfcLiquidTerminal
	,IfcMedicalDevice
	,IfcStackTerminal
	,IfcAudioVisualAppliance
	,IfcSpaceHeater
	,IfcLamp
	,IfcAirTerminal
	,IfcCommunicationsAppliance))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowTerminalType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSignalType
	,IfcLightFixtureType
	,IfcMobileTelecommunicationsApplianceType
	,IfcFireSuppressionTerminalType
	,IfcOutletType
	,IfcWasteTerminalType
	,IfcElectricApplianceType
	,IfcStackTerminalType
	,IfcAudioVisualApplianceType
	,IfcAirTerminalType
	,IfcMedicalDeviceType
	,IfcCommunicationsApplianceType
	,IfcSanitaryTerminalType
	,IfcSpaceHeaterType
	,IfcLampType
	,IfcLiquidTerminalType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowTreatmentDevice
 SUPERTYPE OF (ONEOF
	(IfcInterceptor
	,IfcFilter
	,IfcDuctSilencer
	,IfcElectricFlowTreatmentDevice))
 SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowTreatmentDeviceType
 SUPERTYPE OF (ONEOF
	(IfcDuctSilencerType
	,IfcElectricFlowTreatmentDeviceType
	,IfcInterceptorType
	,IfcFilterType))
 SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFooting
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcFootingTypeEnum;
 WHERE
	CorrectPredefinedType : NOT EXISTS(PredefinedType) OR
(PredefinedType <> IfcFootingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFootingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSTRUCTURALELEMENTSDOMAIN.IFCFOOTINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType))
;
END_ENTITY;

ENTITY IfcFootingType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcFootingTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFootingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFootingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcForeignObjectDualPowerNetworkSensor
 SUBTYPE OF (IfcSensor);
END_ENTITY;

ENTITY IfcFoundation
 SUPERTYPE OF (ONEOF
	(IfcBuildingFoundation
	,IfcBases));
END_ENTITY;

ENTITY IfcFoundationLayer;
END_ENTITY;

ENTITY IfcFrog;
	Disassembly date : IfcDate;
	Frog angle : IfcFrogAngle;
	Frog bend : IfcFrogBend;
	Frog moveable : IfcBoolean;
	Incline of Turnout end : IfcTurnoutIncline;
	Installation date : IfcDate;
	Location in the Turnout panel : IfcNewCoordinatesLocal;
	Manufacturing Date : IfcDate;
	Material : IfcFrogMaterial;
	Putting into operation date : IfcDate;
	Turnout panel : IfcIdentifier;
	Type1 : IfcTbd;
	Type2 : IfcTbd;
END_ENTITY;

ENTITY IfcFrontEquipmentAccessZone
 SUBTYPE OF (IfcEquipmentAccessZone);
END_ENTITY;

ENTITY IfcFrontSidePort;
END_ENTITY;

ENTITY IfcFullExtronicExecutionUnit
 SUBTYPE OF (IfcAbsSignallingNonTracksideEquipment);
END_ENTITY;

ENTITY IfcFurnishingElement
 SUPERTYPE OF (ONEOF
	(IfcFurniture
	,IfcSystemFurnitureElement))
 SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcFurnishingElementType
 SUPERTYPE OF (ONEOF
	(IfcSystemFurnitureElementType
	,IfcFurnitureType))
 SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcFurniture
 SUBTYPE OF (IfcFurnishingElement);
	PredefinedType : OPTIONAL IfcFurnitureTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcFurnitureTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcFurnitureTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
   ('IFCSHAREDFACILITIESELEMENTS.IFCFURNITURETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcFurnitureType
 SUBTYPE OF (IfcFurnishingElementType);
	AssemblyPlace : IfcAssemblyPlaceEnum;
	PredefinedType : OPTIONAL IfcFurnitureTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcFurnitureTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFurnitureTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFuseDisconnector
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcFusionSplicing;
END_ENTITY;

ENTITY IfcGantryPortal;
END_ENTITY;

ENTITY IfcGateway
 SUPERTYPE OF (ONEOF
	(IfcCsMediaGateway
	,IfcGatewayGprsSupportNode))
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcGatewayGprsSupportNode
 SUBTYPE OF (IfcGateway);
END_ENTITY;

ENTITY IfcGaugeTieRod
	Disassembly date : IfcDate;
	Installation Date : IfcDate;
	Located in the turnout panel : IfcNewCoordinatesLocal;
	Manufacturing date : IfcDate;
	Position : IfcTrackAt;
	Putting into operation date : IfcDate;
	Track edge : IfcIdentifier;
	Type : IfcGaugeTieRodType;
END_ENTITY;

ENTITY IfcGenericProperties;
	Actors (e.g. owner) : IfcOwner;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Putting into operation Date : IfcDate;
	Technical Standard / Norm : IfcTechnicalStandard;
END_ENTITY;

ENTITY IfcGeographicElement
 SUPERTYPE OF (ONEOF
	(IfcPlant))
 SUBTYPE OF (IfcElement);
	PredefinedType : IfcGeographicElementTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcGeographicElementTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcGeographicElementTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCPRODUCTEXTENSION.IFCGEOGRAPHICELEMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcGeographicElementType
 SUBTYPE OF (IfcElementType);
	PredefinedType : IfcGeographicElementTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcGeographicElementTypeEnum.USERDEFINED) OR
((PredefinedType = IfcGeographicElementTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcGeometricCurveSet
 SUBTYPE OF (IfcGeometricSet);
 WHERE
	NoSurfaces : SIZEOF(QUERY(Temp <* SELF\IfcGeometricSet.Elements |
'IFCGEOMETRYRESOURCE.IFCSURFACE' IN TYPEOF(Temp))) = 0;
END_ENTITY;

ENTITY IfcGeometricRepresentationContext
 SUPERTYPE OF (ONEOF
	(IfcGeometricRepresentationSubContext))
 SUBTYPE OF (IfcRepresentationContext);
	CoordinateSpaceDimension : IfcDimensionCount;
	Precision : OPTIONAL IfcReal;
	WorldCoordinateSystem : IfcAxis2Placement;
	TrueNorth : OPTIONAL IfcDirection;
 INVERSE
	HasSubContexts : SET  OF IfcGeometricRepresentationSubContext FOR ParentContext;
	HasCoordinateOperation : SET [0:1] OF IfcCoordinateOperation FOR SourceCRS;
 WHERE
	North2D : NOT(EXISTS(TrueNorth)) OR (HIINDEX(TrueNorth.DirectionRatios) = 2);
END_ENTITY;

ENTITY IfcGeometricRepresentationItem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLightSource
	,IfcAlignment2DSegment
	,IfcTessellatedItem
	,IfcFillAreaStyleTiles
	,IfcHalfSpaceSolid
	,IfcCompositeCurveSegment
	,IfcBooleanResult
	,IfcSurface
	,IfcAlignment2DHorizontal
	,IfcPoint
	,IfcOrientationExpression
	,IfcSolidModel
	,IfcFillAreaStyleHatching
	,IfcBoundingBox
	,IfcVector
	,IfcShellBasedSurfaceModel
	,IfcPlacement
	,IfcCsgPrimitive3D
	,IfcLinearAxisWithInclination
	,IfcCurve
	,IfcCartesianPointList
	,IfcCartesianTransformationOperator
	,IfcAlignment2DVertical
	,IfcSectionedSpine
	,IfcTextLiteral
	,IfcGeometricSet
	,IfcDirection
	,IfcAnnotationFillArea
	,IfcDistanceExpression
	,IfcPlanarExtent
	,IfcFaceBasedSurfaceModel
	,IfcAxisLateralInclination))
 SUBTYPE OF (IfcRepresentationItem);
END_ENTITY;

ENTITY IfcGeometricRepresentationSubContext
 SUBTYPE OF (IfcGeometricRepresentationContext);
	ParentContext : IfcGeometricRepresentationContext;
	TargetScale : OPTIONAL IfcPositiveRatioMeasure;
	TargetView : IfcGeometricProjectionEnum;
	UserDefinedTargetView : OPTIONAL IfcLabel;
 DERIVE
	SELF\IfcGeometricRepresentationContext.WorldCoordinateSystem : IfcAxis2Placement := ParentContext.WorldCoordinateSystem;
	SELF\IfcGeometricRepresentationContext.CoordinateSpaceDimension : IfcDimensionCount := ParentContext.CoordinateSpaceDimension;
	SELF\IfcGeometricRepresentationContext.TrueNorth : IfcDirection := NVL(ParentContext.TrueNorth, IfcConvertDirectionInto2D(SELF\IfcGeometricRepresentationContext.WorldCoordinateSystem.P[2]));
	SELF\IfcGeometricRepresentationContext.Precision : IfcReal := NVL(ParentContext.Precision,1.E-5);
 WHERE
	ParentNoSub : NOT('IFCREPRESENTATIONRESOURCE.IFCGEOMETRICREPRESENTATIONSUBCONTEXT' IN TYPEOF(ParentContext));
	UserTargetProvided :  (TargetView <> IfcGeometricProjectionEnum.USERDEFINED) OR 
((TargetView =  IfcGeometricProjectionEnum.USERDEFINED) AND EXISTS(UserDefinedTargetView)) ;
	NoCoordOperation : SIZEOF(SELF\IfcGeometricRepresentationContext.HasCoordinateOperation) = 0;
END_ENTITY;

ENTITY IfcGeometricSet
 SUPERTYPE OF (ONEOF
	(IfcGeometricCurveSet))
 SUBTYPE OF (IfcGeometricRepresentationItem);
 DERIVE
	Dim : IfcDimensionCount := Elements[1].Dim;
 WHERE
	ConsistentDim : SIZEOF(QUERY(Temp <* Elements |
  Temp.Dim <> Elements[1].Dim))
= 0;
END_ENTITY;

ENTITY IfcGeomodel
 SUBTYPE OF (IfcGeotechnicalAssembly);
END_ENTITY;

ENTITY IfcGeoslice
 SUBTYPE OF (IfcGeotechnicalAssembly);
END_ENTITY;

ENTITY IfcGeotechnicalAssembly
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcGeomodel
	,IfcGeoslice
	,IfcBorehole))
 SUBTYPE OF (IfcGeotechnicalElement);
END_ENTITY;

ENTITY IfcGeotechnicalElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcGeotechnicalAssembly
	,IfcGeotechnicalStratum))
 SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcGeotechnicalStratum
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcWaterStratum
	,IfcSolidStratum
	,IfcVoidStratum))
 SUBTYPE OF (IfcGeotechnicalElement);
END_ENTITY;

ENTITY IfcGlobalReferenceSystem;
END_ENTITY;

ENTITY IfcGrid
 SUBTYPE OF (IfcPositioningElement);
	UAxes : LIST  OF IfcGridAxis;
	VAxes : LIST  OF IfcGridAxis;
	WAxes : OPTIONAL LIST  OF IfcGridAxis;
	PredefinedType : OPTIONAL IfcGridTypeEnum;
END_ENTITY;

ENTITY IfcGridAxis;
	AxisTag : OPTIONAL IfcLabel;
	AxisCurve : IfcCurve;
	SameSense : IfcBoolean;
 INVERSE
	PartOfW : SET [0:1] OF IfcGrid FOR WAxes;
	PartOfV : SET [0:1] OF IfcGrid FOR VAxes;
	PartOfU : SET [0:1] OF IfcGrid FOR UAxes;
	HasIntersections : SET  OF IfcVirtualGridIntersection FOR IntersectingAxes;
 WHERE
	WR1 : AxisCurve.Dim = 2;
	WR2 : (SIZEOF(PartOfU) = 1) XOR (SIZEOF(PartOfV) = 1) XOR (SIZEOF(PartOfW) = 1);
END_ENTITY;

ENTITY IfcGridPlacement
 SUBTYPE OF (IfcObjectPlacement);
	PlacementLocation : IfcVirtualGridIntersection;
	PlacementRefDirection : OPTIONAL IfcGridPlacementDirectionSelect;
END_ENTITY;

ENTITY IfcGroundBus;
END_ENTITY;

ENTITY IfcGroundModule;
END_ENTITY;

ENTITY IfcGroup
 SUPERTYPE OF (ONEOF
	(IfcAsset
	,IfcSystem
	,IfcInventory
	,IfcStructuralLoadGroup
	,IfcStructuralResultGroup))
 SUBTYPE OF (IfcObject);
 INVERSE
	IsGroupedBy : SET  OF IfcRelAssignsToGroup FOR RelatingGroup;
END_ENTITY;

ENTITY IfcGuardPile
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcGuardRail
	Connection : IfcGuardRailConnectionType;
	Disassembly Date : IfcDate;
	Fastening : IfcFasteningType;
	Inside/Outside Position : IfcInsideOutsidePosition;
	Installation Date : IfcDate;
	Located in the panel : IfcNewCoordinatesLocal;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation date : IfcDate;
	Relative Position : IfcRelativePosition;
	Track edge : IfcIdentifier;
	Type : IfcGuardRailType;
END_ENTITY;

ENTITY IfcGutter
 SUBTYPE OF (IfcTelecomLayingInfrastructure);
	primaryPosition : IfcLineFromTo;
END_ENTITY;

ENTITY IfcHalfSetOfBlades;
	Date of last substitution : IfcDate;
	Disassembly date : IfcDate;
	Fallback device : IfcBoolean;
	Function of turnout : IfcTrackCategory;
	Installation date : IfcDate;
	Length : IfcReal;
	Location in the Turnout / dilatation panel : IfcNewCoordinatesLocal;
	Manufacturing date : IfcDate;
	Producer : IfcHalfSetOfBladesManufacturer;
	Putting into operation date : IfcDate;
	Radius of blade : IfcReal;
	Radius of stock rail : IfcReal;
	Turnout / dilatation panel : IfcIdentifier;
	Turnout tongue : IfcTurnoutTongue;
	Type of Turnout : IfcTypeOfTurnout;
	Type of installation : IfcHalfSetOfBladesType;
END_ENTITY;

ENTITY IfcHalfSpaceSolid
 SUPERTYPE OF (ONEOF
	(IfcBoxedHalfSpace
	,IfcPolygonalBoundedHalfSpace))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	BaseSurface : IfcSurface;
	AgreementFlag : IfcBoolean;
 DERIVE
	Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcHarmonicFilter
 SUBTYPE OF (IfcFilters);
END_ENTITY;

ENTITY IfcHeadSpan
 SUBTYPE OF (IfcOcsSupportingElements);
END_ENTITY;

ENTITY IfcHeatExchanger
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcHeatExchangerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcHeatExchangerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcHeatExchangerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCHEATEXCHANGERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcHeatExchangerType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcHeatExchangerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcHeatExchangerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcHeatExchangerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcHeightRestriction
 SUBTYPE OF (IfcTrafficRestriction);
END_ENTITY;

ENTITY IfcHighPassFilter
 SUBTYPE OF (IfcFilters);
END_ENTITY;

ENTITY IfcHighVoltageBoosterHvb
 SUBTYPE OF (IfcCompensatorEquipment);
END_ENTITY;

ENTITY IfcHighVoltageFuse
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcHighwaySExpiration;
END_ENTITY;

ENTITY IfcHollowSleeper
 SUBTYPE OF (IfcAbsSleeper);
	Purpose : IfcText;
END_ENTITY;

ENTITY IfcHomeLocationRegister
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcHostCabinetOfInterlockingSystem
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcHotAxleBoxDetector
 SUBTYPE OF (IfcDetector);
END_ENTITY;

ENTITY IfcHousing
 SUPERTYPE OF (ONEOF
	(IfcCabinet
	,IfcBox));
 INVERSE
	is located : Battery FOR None;
END_ENTITY;

ENTITY IfcHumanComputerInteractionTerminal;
END_ENTITY;

ENTITY IfcHumidifier
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcHumidifierTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcHumidifierTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcHumidifierTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCHUMIDIFIERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcHumidifierType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcHumidifierTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcHumidifierTypeEnum.USERDEFINED) OR
((PredefinedType = IfcHumidifierTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcHydraulicsTensioner
 SUBTYPE OF (IfcTensioningEquipment);
END_ENTITY;

ENTITY IfcIShapeProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	OverallWidth : IfcPositiveLengthMeasure;
	OverallDepth : IfcPositiveLengthMeasure;
	WebThickness : IfcPositiveLengthMeasure;
	FlangeThickness : IfcPositiveLengthMeasure;
	FilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	FlangeEdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	FlangeSlope : OPTIONAL IfcPlaneAngleMeasure;
 WHERE
	ValidFlangeThickness : (2. * FlangeThickness) < OverallDepth;
	ValidWebThickness : WebThickness < OverallWidth;
	ValidFilletRadius : NOT(EXISTS(FilletRadius)) OR
((FilletRadius <= (OverallWidth - WebThickness)/2.) AND 
 (FilletRadius <= (OverallDepth - (2. * FlangeThickness))/2.));
END_ENTITY;

ENTITY IfcImageTexture
 SUBTYPE OF (IfcSurfaceTexture);
	URLReference : IfcURIReference;
END_ENTITY;

ENTITY IfcImpactProtectionDevice
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : IfcImpactProtectionDeviceTypeSelect;
END_ENTITY;

ENTITY IfcImpactProtectionDeviceType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : IfcImpactProtectionDeviceTypeSelect;
END_ENTITY;

ENTITY IfcImpedanceTransformer
 SUBTYPE OF (IfcTrackCiruitLimits);
END_ENTITY;

ENTITY IfcInclinedReferenceSweptAreaSolid
 SUBTYPE OF (IfcDirectrixDistanceSweptAreaSolid);
	FixedAxisVertical : IfcBoolean;
	Inclinating : IfcAxisLateralInclination;
END_ENTITY;

ENTITY IfcIndexedColourMap
 SUBTYPE OF (IfcPresentationItem);
	MappedTo : IfcTessellatedFaceSet;
	Opacity : OPTIONAL IfcNormalisedRatioMeasure;
	Colours : IfcColourRgbList;
END_ENTITY;

ENTITY IfcIndexedPolyCurve
 SUBTYPE OF (IfcBoundedCurve);
	Points : IfcCartesianPointList;
	SelfIntersect : OPTIONAL IfcBoolean;
 WHERE
	Consecutive : NOT(EXISTS(Segments) ) OR IfcConsecutiveSegments(Segments);
END_ENTITY;

ENTITY IfcIndexedPolygonalFace
 SUPERTYPE OF (ONEOF
	(IfcIndexedPolygonalFaceWithVoids))
 SUBTYPE OF (IfcTessellatedItem);
 INVERSE
	ToFaceSet : SET  OF IfcPolygonalFaceSet FOR Faces;
END_ENTITY;

ENTITY IfcIndexedPolygonalFaceWithVoids
 SUBTYPE OF (IfcIndexedPolygonalFace);
END_ENTITY;

ENTITY IfcIndexedTextureMap
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcIndexedTriangleTextureMap))
 SUBTYPE OF (IfcTextureCoordinate);
	MappedTo : IfcTessellatedFaceSet;
	TexCoords : IfcTextureVertexList;
END_ENTITY;

ENTITY IfcIndexedTriangleTextureMap
 SUBTYPE OF (IfcIndexedTextureMap);
END_ENTITY;

ENTITY IfcIndoorLayingInfrastructureRoutingZone
END_ENTITY;

ENTITY IfcIndoorTelecomEquipmentZone
END_ENTITY;

ENTITY IfcIndoorTelecomZone
 SUPERTYPE OF (ONEOF
	(IfcIndoorLayingInfrastructureRoutingZone
	,IfcIndoorTelecomEquipmentZone))
 SUBTYPE OF (IfcTelecomReservedVolume);
END_ENTITY;

ENTITY IfcInductionLoop
 SUBTYPE OF (IfcTrainProtectionEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcInductor;
END_ENTITY;

ENTITY IfcInputOutputDeviceOfTrackCircuit
 SUBTYPE OF (IfcAbsSignallingEquipment);
END_ENTITY;

ENTITY IfcInstrumentTransformer
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcVoltageTransformer
	,IfcCombinedTransformer
	,IfcCurrentTransformer))
 SUBTYPE OF (IfcEnergyConversionDevice);
END_ENTITY;

ENTITY IfcInsulatedCables
 SUBTYPE OF (IfcElectricalConductor);
END_ENTITY;

ENTITY IfcInsulatedJoint
 SUBTYPE OF (IfcAbsJoint);
	Joint Control Equipment : IfcBoolean;
	Temporarily bolded : IfcBoolean;
	Type : IfcInsulatedJointType;
END_ENTITY;

ENTITY IfcInsulatedJointWithFishplate
 SUBTYPE OF (IfcAbsJoint);
	Rail Gap : IfcIntegerPositive0;
	Type : IfcInsulatedJointType;
END_ENTITY;

ENTITY IfcInsulatedOverlap;
END_ENTITY;

ENTITY IfcInsulatedOverlap
 SUBTYPE OF (IfcOverheadLineOverlapZone);
END_ENTITY;

ENTITY IfcInsulatedOverlapCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcInsulatedSuspensionSet
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcInsulatingJoint
 SUBTYPE OF (IfcTrackCiruitLimits);
END_ENTITY;

ENTITY IfcInsulator
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPostInsulator
	,IfcStrainInsulator
	,IfcPinInsulators
	,IfcSuspensionInsulator
	,IfcLongRodInsulator))
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcIntegratedTelephonyExchange
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcIntelligentPeripheral
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcInterceptor
 SUBTYPE OF (IfcFlowTreatmentDevice);
	PredefinedType : OPTIONAL IfcInterceptorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcInterceptorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcInterceptorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCPLUMBINGFIREPROTECTIONDOMAIN.IFCINTERCEPTORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcInterceptorType
 SUBTYPE OF (IfcFlowTreatmentDeviceType);
	PredefinedType : IfcInterceptorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcInterceptorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcInterceptorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcInterchange;
END_ENTITY;

ENTITY IfcInterlockingControlPanel
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcInterlockingDevice
 SUBTYPE OF (IfcSubstationControlEquipment);
END_ENTITY;

ENTITY IfcIntersectionCurve
 SUBTYPE OF (IfcSurfaceCurve);
 WHERE
	TwoPCurves : SIZEOF(SELF\IfcSurfaceCurve.AssociatedGeometry) = 2;
	DistinctSurfaces : IfcAssociatedSurface(SELF\IfcSurfaceCurve.AssociatedGeometry[1]) <> IfcAssociatedSurface(SELF\IfcSurfaceCurve.AssociatedGeometry[2]);
END_ENTITY;

ENTITY IfcIntervalplacement
 SUBTYPE OF (IfcSpanplacement);
END_ENTITY;

ENTITY IfcInventory
 SUBTYPE OF (IfcGroup);
	PredefinedType : OPTIONAL IfcInventoryTypeEnum;
	Jurisdiction : OPTIONAL IfcActorSelect;
	ResponsiblePersons : OPTIONAL SET  OF IfcPerson;
	LastUpdateDate : OPTIONAL IfcDate;
	CurrentValue : OPTIONAL IfcCostValue;
	OriginalValue : OPTIONAL IfcCostValue;
END_ENTITY;

ENTITY IfcInverter
 SUBTYPE OF (IfcElectricPowerConverter);
END_ENTITY;

ENTITY IfcIpNetworkEquipment
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcIrregularTimeSeries
 SUBTYPE OF (IfcTimeSeries);
	Values : LIST  OF IfcIrregularTimeSeriesValue;
END_ENTITY;

ENTITY IfcIrregularTimeSeriesValue;
	TimeStamp : IfcDateTime;
END_ENTITY;

ENTITY IfcJointFitting
 SUBTYPE OF (IfcOcsFitting);
END_ENTITY;

ENTITY IfcJunction;
END_ENTITY;

ENTITY IfcJunctionBox
 SUBTYPE OF (IfcFlowFitting);
	PredefinedType : OPTIONAL IfcJunctionBoxTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcJunctionBoxTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcJunctionBoxTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCJUNCTIONBOXTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcJunctionBoxType
 SUBTYPE OF (IfcFlowFittingType);
	PredefinedType : IfcJunctionBoxTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcJunctionBoxTypeEnum.USERDEFINED) OR
((PredefinedType = IfcJunctionBoxTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcJunctionRestriction
 SUBTYPE OF (IfcTrafficRestriction);
END_ENTITY;

ENTITY IfcKerb
 SUBTYPE OF (IfcBuiltElement);
	Mountable : IfcBoolean;
END_ENTITY;

ENTITY IfcKerbType
 SUBTYPE OF (IfcBuiltElementType);
	Mountable : IfcBoolean;
END_ENTITY;

ENTITY IfcKinematicEnvelope;
END_ENTITY;

ENTITY IfcLShapeProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	Depth : IfcPositiveLengthMeasure;
	Width : OPTIONAL IfcPositiveLengthMeasure;
	Thickness : IfcPositiveLengthMeasure;
	FilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	EdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	LegSlope : OPTIONAL IfcPlaneAngleMeasure;
 WHERE
	ValidThickness : (Thickness < Depth) AND (NOT(EXISTS(Width)) OR (Thickness < Width));
END_ENTITY;

ENTITY IfcLaborResource
 SUBTYPE OF (IfcConstructionResource);
	PredefinedType : OPTIONAL IfcLaborResourceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcLaborResourceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcLaborResourceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcLaborResourceType
 SUBTYPE OF (IfcConstructionResourceType);
	PredefinedType : IfcLaborResourceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcLaborResourceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcLaborResourceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeResource.ResourceType));
END_ENTITY;

ENTITY IfcLagTime
 SUBTYPE OF (IfcSchedulingTime);
	LagValue : IfcTimeOrRatioSelect;
	DurationType : IfcTaskDurationEnum;
END_ENTITY;

ENTITY IfcLamp
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcLampTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcLampTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcLampTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCLAMPTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcLampType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcLampTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcLampTypeEnum.USERDEFINED) OR
((PredefinedType = IfcLampTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcLayingInfrastructureConnection;
END_ENTITY;

ENTITY IfcLcBarrier
 SUBTYPE OF (IfcLevelCrossingEqipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcLcEngine
 SUBTYPE OF (IfcLevelCrossingEqipment);
END_ENTITY;

ENTITY IfcLcLighting
 SUBTYPE OF (IfcLevelCrossingEqipment);
END_ENTITY;

ENTITY IfcLcTrafficMarkerSign
 SUBTYPE OF (IfcLevelCrossingEqipment);
END_ENTITY;

ENTITY IfcLcTrafficSignal
 SUPERTYPE OF (ONEOF
	(IfcLightSignal
	,IfcAcousticSignal))
 SUBTYPE OF (IfcLevelCrossingEqipment);
END_ENTITY;

ENTITY IfcLeakyCoaxialCable
 SUBTYPE OF (IfcCoaxialCable);
END_ENTITY;

ENTITY IfcLeftEquipmentAccessZone
 SUBTYPE OF (IfcEquipmentAccessZone);
END_ENTITY;

ENTITY IfcLeuCabinetOfTrainControlCenter
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcLeuOutdoorCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcLevelCrossingEqipment
 SUPERTYPE OF (ONEOF
	(IfcLcBarrier
	,IfcLcTrafficMarkerSign
	,IfcLcTrafficSignal
	,IfcObstacleDetector
	,IfcLcLighting
	,IfcLcEngine))
 SUBTYPE OF (IfcAbsSignallingEquipment);
END_ENTITY;

ENTITY IfcLevelCrossingProtection
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcLevelcrossingEquipement;
END_ENTITY;

ENTITY IfcLever
 SUBTYPE OF (IfcLocalOperationDevice);
END_ENTITY;

ENTITY IfcLibraryInformation
 SUBTYPE OF (IfcExternalInformation);
	Name : IfcLabel;
	Version : OPTIONAL IfcLabel;
	Publisher : OPTIONAL IfcActorSelect;
	VersionDate : OPTIONAL IfcDateTime;
	Location : OPTIONAL IfcURIReference;
	Description : OPTIONAL IfcText;
 INVERSE
	LibraryInfoForObjects : SET  OF IfcRelAssociatesLibrary FOR RelatingLibrary;
	HasLibraryReferences : SET  OF IfcLibraryReference FOR ReferencedLibrary;
END_ENTITY;

ENTITY IfcLibraryReference
 SUBTYPE OF (IfcExternalReference);
	Description : OPTIONAL IfcText;
	Language : OPTIONAL IfcLanguageId;
	ReferencedLibrary : OPTIONAL IfcLibraryInformation;
 INVERSE
	LibraryRefForObjects : SET  OF IfcRelAssociatesLibrary FOR RelatingLibrary;
END_ENTITY;

ENTITY IfcLightDistributionData;
	MainPlaneAngle : IfcPlaneAngleMeasure;
END_ENTITY;

ENTITY IfcLightFixture
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcLightFixtureTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcLightFixtureTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcLightFixtureTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCLIGHTFIXTURETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcLightFixtureType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcLightFixtureTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcLightFixtureTypeEnum.USERDEFINED) OR
((PredefinedType = IfcLightFixtureTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcLightIntensityDistribution;
	LightDistributionCurve : IfcLightDistributionCurveEnum;
	DistributionData : LIST  OF IfcLightDistributionData;
END_ENTITY;

ENTITY IfcLightSignal
 SUBTYPE OF (IfcLcTrafficSignal);
END_ENTITY;

ENTITY IfcLightSource
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLightSourceDirectional
	,IfcLightSourceAmbient
	,IfcLightSourcePositional
	,IfcLightSourceGoniometric))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Name : OPTIONAL IfcLabel;
	LightColour : IfcColourRgb;
	AmbientIntensity : OPTIONAL IfcNormalisedRatioMeasure;
	Intensity : OPTIONAL IfcNormalisedRatioMeasure;
END_ENTITY;

ENTITY IfcLightSourceAmbient
 SUBTYPE OF (IfcLightSource);
END_ENTITY;

ENTITY IfcLightSourceDirectional
 SUBTYPE OF (IfcLightSource);
	Orientation : IfcDirection;
END_ENTITY;

ENTITY IfcLightSourceGoniometric
 SUBTYPE OF (IfcLightSource);
	Position : IfcAxis2Placement3D;
	ColourAppearance : OPTIONAL IfcColourRgb;
	ColourTemperature : IfcThermodynamicTemperatureMeasure;
	LuminousFlux : IfcLuminousFluxMeasure;
	LightEmissionSource : IfcLightEmissionSourceEnum;
	LightDistributionDataSource : IfcLightDistributionDataSourceSelect;
END_ENTITY;

ENTITY IfcLightSourcePositional
 SUPERTYPE OF (ONEOF
	(IfcLightSourceSpot))
 SUBTYPE OF (IfcLightSource);
	Position : IfcCartesianPoint;
	Radius : IfcPositiveLengthMeasure;
	ConstantAttenuation : IfcReal;
	DistanceAttenuation : IfcReal;
	QuadricAttenuation : IfcReal;
END_ENTITY;

ENTITY IfcLightSourceSpot
 SUBTYPE OF (IfcLightSourcePositional);
	Orientation : IfcDirection;
	ConcentrationExponent : OPTIONAL IfcReal;
	SpreadAngle : IfcPositivePlaneAngleMeasure;
	BeamWidthAngle : IfcPositivePlaneAngleMeasure;
END_ENTITY;

ENTITY IfcLightningArrester
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcLightningProtectionCable
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcLine
 SUBTYPE OF (IfcCurve);
	Pnt : IfcCartesianPoint;
	Dir : IfcVector;
 WHERE
	SameDim : Dir.Dim = Pnt.Dim;
END_ENTITY;

ENTITY IfcLine;
END_ENTITY;

ENTITY IfcLineAlignment;
END_ENTITY;

ENTITY IfcLineLrs;
END_ENTITY;

ENTITY IfcLineSection
 SUBTYPE OF (IfcAbsNetworkElement);
END_ENTITY;

ENTITY IfcLineSegment2D
 SUBTYPE OF (IfcCurveSegment2D);
END_ENTITY;

ENTITY IfcLinealignment;
END_ENTITY;

ENTITY IfcLinearAxisWithInclination
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Directrix : IfcCurve;
	Inclinating : IfcAxisLateralInclination;
END_ENTITY;

ENTITY IfcLinearPlacement
 SUPERTYPE OF (ONEOF
	(IfcLinearPlacementWithInclination
	,IfcLinearSpanPlacement))
 SUBTYPE OF (IfcObjectPlacement);
	PlacementMeasuredAlong : IfcCurve;
	Distance : IfcDistanceExpression;
	Orientation : OPTIONAL IfcOrientationExpression;
	CartesianPosition : OPTIONAL IfcAxis2Placement3D;
END_ENTITY;

ENTITY IfcLinearPlacementWithInclination
 SUBTYPE OF (IfcLinearPlacement);
 INVERSE
	Inclinating : IfcAxisLateralInclination FOR None;
END_ENTITY;

ENTITY IfcLinearPositioningElement
 SUPERTYPE OF (ONEOF
	(IfcAlignment))
 SUBTYPE OF (IfcPositioningElement);
	Axis : IfcLinearAxisSelect;
 INVERSE
	Axis : IfcBoundedCurve FOR PositioningElement;
END_ENTITY;

ENTITY IfcLinearReferenceOnAbsTrackPart
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLrSegmentOnSsTrackPart
	,IfcLrPointOnSsTrackPart));
END_ENTITY;

ENTITY IfcLinearSpanPlacement
 SUBTYPE OF (IfcLinearPlacement);
	Span : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcLines
 SUBTYPE OF (IfcRoadsurfacemarkings);
END_ENTITY;

ENTITY IfcLinesidePart
 SUBTYPE OF (IfcLinesideStructure);
END_ENTITY;

ENTITY IfcLinesideStructure
 SUPERTYPE OF (ONEOF
	(IfcLinesidePart));
END_ENTITY;

ENTITY IfcLiquidTerminal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : IfcLiquidTerminalTypeEnum;
END_ENTITY;

ENTITY IfcLiquidTerminalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcLiquidTerminalTypeEnum;
END_ENTITY;

ENTITY IfcLoadBreakSwitch
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcLoadSwitch
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcLocalOperationDevice
 SUPERTYPE OF (ONEOF
	(IfcLever
	,IfcPushButton));
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
 INVERSE
	locally actuates : Abs_Signalling equipment FOR None;
END_ENTITY;

ENTITY IfcLocalPlacement
 SUBTYPE OF (IfcObjectPlacement);
	RelativePlacement : IfcAxis2Placement;
 WHERE
	WR21 : IfcCorrectLocalPlacement(RelativePlacement, PlacementRelTo);
END_ENTITY;

ENTITY IfcLocalSpace
 SUPERTYPE OF (ONEOF
	(IfcSpaceExclusion
	,IfcSpaceReservation
	,IfcStandardDrawing));
END_ENTITY;

ENTITY IfcLock
 SUBTYPE OF (IfcAbsSignallingEquipment);
	Primary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcLockCombination;
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
 INVERSE
	combined into : Lock FOR None;
END_ENTITY;

ENTITY IfcLockableDeviceRelease;
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
 INVERSE
	is part of : Lock FOR None;
END_ENTITY;

ENTITY IfcLongRodInsulator
 SUBTYPE OF (IfcInsulator);
END_ENTITY;

ENTITY IfcLongitudinalJoint;
END_ENTITY;

ENTITY IfcLoop
 SUPERTYPE OF (ONEOF
	(IfcPolyLoop
	,IfcEdgeLoop
	,IfcVertexLoop))
 SUBTYPE OF (IfcTopologicalRepresentationItem);
END_ENTITY;

ENTITY IfcLowPassFilter
 SUPERTYPE OF (ONEOF
	(IfcFilterCapacitor))
 SUBTYPE OF (IfcFilters);
END_ENTITY;

ENTITY IfcLowerpantographSigns
 SUBTYPE OF (IfcSignAndSignal);
END_ENTITY;

ENTITY IfcLrOnTrackCentreline
 SUPERTYPE OF (ONEOF
	(IfcLrPointOnTrackCenterline
	,IfcLrSegmentOnTrackCentreline));
	Track-Edge-ID : IfcText;
END_ENTITY;

ENTITY IfcLrPointOnSsTrackPart
 SUPERTYPE OF (ONEOF
	(IfcAbsJoint
	,IfcGaugeTieRod
	,IfcBumper
	,IfcLubrication
	,IfcAbsSleeper
	,IfcTrackElementAtEndOfAlignment
	,IfcFastening
	,IfcTrackReferenceMarker))
 SUBTYPE OF (IfcLinearReferenceOnAbsTrackPart);
END_ENTITY;

ENTITY IfcLrPointOnTrackCenterline
 SUPERTYPE OF (ONEOF
	(IfcGaugeTieRod
	,IfcBumper
	,IfcTrackElementAtEndOfAlignment
	,IfcAbsJoint
	,IfcTrackReferenceMarker
	,IfcLubrication
	,IfcAbsSleeper
	,IfcFastening))
 SUBTYPE OF (IfcLrOnTrackCentreline);
	Distance : IfcNewDistanceNonNegative0;
	Height : IfcNewDistancePositive0;
	Lateral offset : IfcNewDistancePositive0;
END_ENTITY;

ENTITY IfcLrSegmentOnSsTrackPart
 SUPERTYPE OF (ONEOF
	(IfcTrackElasticCushion
	,IfcBanquetElement
	,IfcRackRail
	,IfcEarthMat
	,IfcAbsTrackCovering
	,IfcAbsTrackStrengtheningEquipment
	,IfcGuardRail
	,IfcTrackPanel
	,IfcTrackIsolationLayer
	,IfcAbsMechanicalEquipment
	,IfcRail
	,IfcBallastBed
	,IfcAbsTrackStrengthening
	,IfcTrackAdjustmentLayer
	,IfcCheckRail
	,IfcTrackBase
	,IfcSpringDampingSystem
	,IfcTrackSlab
	,IfcBallastBedStrengthening
	,IfcTrackConcreteSlab))
 SUBTYPE OF (IfcLinearReferenceOnAbsTrackPart);
END_ENTITY;

ENTITY IfcLrSegmentOnTrackCentreline
 SUPERTYPE OF (ONEOF
	(IfcBallastBedStrengthening
	,IfcSpringDampingSystem
	,IfcCheckRail
	,IfcBanquetElement
	,IfcAbsTrackStrengtheningEquipment
	,IfcAbsTrackCovering
	,IfcTrackConcreteSlab
	,IfcRail
	,IfcGuardRail
	,IfcRackRail
	,IfcEarthMat
	,IfcTrackSlab
	,IfcTrackIsolationLayer
	,IfcAbsMechanicalEquipment
	,IfcTrackElasticCushion
	,IfcBallastBed
	,IfcTrackAdjustmentLayer
	,IfcTrackBase
	,IfcAbsTrackStrengthening))
 SUBTYPE OF (IfcLrOnTrackCentreline);
	From edge point : IfcEdgePoint;
	To edge point : IfcEdgePoint;
END_ENTITY;

ENTITY IfcLubrication
	Disassembly Date : IfcDate;
	Dispenser devices : IfcLubricationDispenserDevices;
	Installation Date : IfcDate;
	Lubricating material : IfcLubricationMaterial;
	Manufacturer : IfcLubricationManufacturer;
	Manufacturing Date : IfcDate;
	Noise limit value : IfcSoundPressure;
	Position : IfcTrackAt;
	Purpose : IfcText;
	Putting into operation date : IfcDate;
	Relative Position : IfcRelativePosition;
	Type : IfcLubricationType;
	Type of supply : IfcLubricationSupplyType;
	Underground contamination : IfcBoolean;
END_ENTITY;

ENTITY IfcMainCatenaryWire
 SUBTYPE OF (IfcCatenaryWire);
END_ENTITY;

ENTITY IfcManhole
 SUBTYPE OF (IfcTelecomLayingInfrastructure);
	primaryPosition : IfcLineAt;
END_ENTITY;

ENTITY IfcManifoldSolidBrep
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcFacetedBrep
	,IfcAdvancedBrep))
 SUBTYPE OF (IfcSolidModel);
	Outer : IfcClosedShell;
END_ENTITY;

ENTITY IfcManualActuators
 SUBTYPE OF (IfcActuator);
END_ENTITY;

ENTITY IfcMapConversion
 SUBTYPE OF (IfcCoordinateOperation);
	Eastings : IfcLengthMeasure;
	Northings : IfcLengthMeasure;
	OrthogonalHeight : IfcLengthMeasure;
	XAxisAbscissa : OPTIONAL IfcReal;
	XAxisOrdinate : OPTIONAL IfcReal;
	Scale : OPTIONAL IfcReal;
END_ENTITY;

ENTITY IfcMappedItem
 SUBTYPE OF (IfcRepresentationItem);
	MappingSource : IfcRepresentationMap;
	MappingTarget : IfcCartesianTransformationOperator;
END_ENTITY;

ENTITY IfcMarineFacility
 SUBTYPE OF (IfcFacility);
	PredefinedType : IfcMarinefacilitytypeenum;
END_ENTITY;

ENTITY IfcMarkerSign
 SUBTYPE OF (IfcPhysicalSignal);
END_ENTITY;

ENTITY IfcMasterUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcMaterial
 SUBTYPE OF (IfcMaterialDefinition);
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	Category : OPTIONAL IfcLabel;
 INVERSE
	HasRepresentation : SET [0:1] OF IfcMaterialDefinitionRepresentation FOR RepresentedMaterial;
	IsRelatedWith : SET  OF IfcMaterialRelationship FOR RelatedMaterials;
	RelatesTo : SET [0:1] OF IfcMaterialRelationship FOR RelatingMaterial;
END_ENTITY;

ENTITY IfcMaterialClassificationRelationship;
	ClassifiedMaterial : IfcMaterial;
END_ENTITY;

ENTITY IfcMaterialConstituent
 SUBTYPE OF (IfcMaterialDefinition);
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	Material : IfcMaterial;
	Fraction : OPTIONAL IfcNormalisedRatioMeasure;
	Category : OPTIONAL IfcLabel;
 INVERSE
	ToMaterialConstituentSet : IfcMaterialConstituentSet FOR MaterialConstituents;
END_ENTITY;

ENTITY IfcMaterialConstituentSet
 SUBTYPE OF (IfcMaterialDefinition);
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	MaterialConstituents : OPTIONAL SET  OF IfcMaterialConstituent;
END_ENTITY;

ENTITY IfcMaterialDefinition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcMaterialProfile
	,IfcMaterialConstituentSet
	,IfcMaterialConstituent
	,IfcMaterialLayer
	,IfcMaterialLayerSet
	,IfcMaterialProfileSet
	,IfcMaterial));
 INVERSE
	AssociatedTo : SET  OF IfcRelAssociatesMaterial FOR RelatingMaterial;
	HasExternalReferences : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
	HasProperties : SET  OF IfcMaterialProperties FOR Material;
END_ENTITY;

ENTITY IfcMaterialDefinitionRepresentation
 SUBTYPE OF (IfcProductRepresentation);
	RepresentedMaterial : IfcMaterial;
 WHERE
	OnlyStyledRepresentations : SIZEOF(QUERY(temp <* Representations | 
  (NOT('IFCREPRESENTATIONRESOURCE.IFCSTYLEDREPRESENTATION' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcMaterialLayer
 SUPERTYPE OF (ONEOF
	(IfcMaterialLayerWithOffsets))
 SUBTYPE OF (IfcMaterialDefinition);
	Material : OPTIONAL IfcMaterial;
	LayerThickness : IfcNonNegativeLengthMeasure;
	IsVentilated : OPTIONAL IfcLogical;
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	Category : OPTIONAL IfcLabel;
	Priority : OPTIONAL IfcInteger;
 INVERSE
	ToMaterialLayerSet : IfcMaterialLayerSet FOR MaterialLayers;
 WHERE
	NormalizedPriority : NOT(EXISTS(Priority)) OR {0 <= Priority <= 100};
END_ENTITY;

ENTITY IfcMaterialLayerSet
 SUBTYPE OF (IfcMaterialDefinition);
	MaterialLayers : LIST  OF IfcMaterialLayer;
	LayerSetName : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
 DERIVE
	TotalThickness : IfcLengthMeasure := IfcMlsTotalThickness(SELF);
END_ENTITY;

ENTITY IfcMaterialLayerSetUsage
 SUBTYPE OF (IfcMaterialUsageDefinition);
	ForLayerSet : IfcMaterialLayerSet;
	LayerSetDirection : IfcLayerSetDirectionEnum;
	DirectionSense : IfcDirectionSenseEnum;
	OffsetFromReferenceLine : IfcLengthMeasure;
	ReferenceExtent : OPTIONAL IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcMaterialLayerWithOffsets
 SUBTYPE OF (IfcMaterialLayer);
	OffsetDirection : IfcLayerSetDirectionEnum;
	OffsetValues : ARRAY [1:2] OF IfcLengthMeasure;
END_ENTITY;

ENTITY IfcMaterialList;
	Materials : LIST  OF IfcMaterial;
END_ENTITY;

ENTITY IfcMaterialProfile
 SUPERTYPE OF (ONEOF
	(IfcMaterialProfileWithOffsets))
 SUBTYPE OF (IfcMaterialDefinition);
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	Material : OPTIONAL IfcMaterial;
	Profile : IfcProfileDef;
	Priority : OPTIONAL IfcInteger;
	Category : OPTIONAL IfcLabel;
 INVERSE
	ToMaterialProfileSet : IfcMaterialProfileSet FOR MaterialProfiles;
 WHERE
	NormalizedPriority : NOT(EXISTS(Priority)) OR {0 <= Priority <= 100};
END_ENTITY;

ENTITY IfcMaterialProfileSet
 SUBTYPE OF (IfcMaterialDefinition);
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	MaterialProfiles : LIST  OF IfcMaterialProfile;
	CompositeProfile : OPTIONAL IfcCompositeProfileDef;
END_ENTITY;

ENTITY IfcMaterialProfileSetUsage
 SUPERTYPE OF (ONEOF
	(IfcMaterialProfileSetUsageTapering))
 SUBTYPE OF (IfcMaterialUsageDefinition);
	ForProfileSet : IfcMaterialProfileSet;
	CardinalPoint : OPTIONAL IfcCardinalPointReference;
	ReferenceExtent : OPTIONAL IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcMaterialProfileSetUsageTapering
 SUBTYPE OF (IfcMaterialProfileSetUsage);
	ForProfileEndSet : IfcMaterialProfileSet;
	CardinalEndPoint : OPTIONAL IfcCardinalPointReference;
END_ENTITY;

ENTITY IfcMaterialProfileWithOffsets
 SUBTYPE OF (IfcMaterialProfile);
	OffsetValues : ARRAY [1:2] OF IfcLengthMeasure;
END_ENTITY;

ENTITY IfcMaterialProperties
 SUBTYPE OF (IfcExtendedProperties);
	Material : IfcMaterialDefinition;
END_ENTITY;

ENTITY IfcMaterialRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingMaterial : IfcMaterial;
	RelatedMaterials : SET  OF IfcMaterial;
	Expression : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcMaterialUsageDefinition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcMaterialProfileSetUsage
	,IfcMaterialLayerSetUsage));
 INVERSE
	AssociatedTo : SET  OF IfcRelAssociatesMaterial FOR RelatingMaterial;
END_ENTITY;

ENTITY IfcMeasureWithUnit;
	ValueComponent : IfcValue;
	UnitComponent : IfcUnit;
END_ENTITY;

ENTITY IfcMechanicalActuators
 SUBTYPE OF (IfcActuator);
END_ENTITY;

ENTITY IfcMechanicalFastener
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : IfcMechanicalFastenerTypeEnum;
	NominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	NominalLength : OPTIONAL IfcPositiveLengthMeasure;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcMechanicalFastenerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMechanicalFastenerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSHAREDCOMPONENTELEMENTS.IFCMECHANICALFASTENERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcMechanicalFastenerType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : IfcMechanicalFastenerTypeEnum;
	NominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	NominalLength : OPTIONAL IfcPositiveLengthMeasure;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcMechanicalFastenerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMechanicalFastenerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcMechanicalOverlapCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcMedicalDevice
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcMedicalDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcMedicalDeviceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcMedicalDeviceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCMEDICALDEVICETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcMedicalDeviceType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcMedicalDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcMedicalDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMedicalDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcMember
 SUPERTYPE OF (ONEOF
	(IfcMemberStandardCase))
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcMemberTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcMemberTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcMemberTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCMEMBERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcMemberStandardCase
 SUBTYPE OF (IfcMember);
 WHERE
	HasMaterialProfileSetUsage : SIZEOF (QUERY(temp <* USEDIN(SELF, 'IFCKERNEL.IFCRELASSOCIATES.RELATEDOBJECTS') |
              ('IFCPRODUCTEXTENSION.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)) AND
              ('IFCMATERIALRESOURCE.IFCMATERIALPROFILESETUSAGE' IN TYPEOF(temp.RelatingMaterial))
              )) = 1;
END_ENTITY;

ENTITY IfcMemberType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcMemberTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcMemberTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMemberTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcMetric
 SUBTYPE OF (IfcConstraint);
	Benchmark : IfcBenchmarkEnum;
	ValueSource : OPTIONAL IfcLabel;
	DataValue : OPTIONAL IfcMetricValueSelect;
	ReferencePath : OPTIONAL IfcReference;
END_ENTITY;

ENTITY IfcMidPointAnchor;
END_ENTITY;

ENTITY IfcMidPointCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcMirroredProfileDef
 SUBTYPE OF (IfcDerivedProfileDef);
 DERIVE
	SELF\IfcDerivedProfileDef.Operator : IfcCartesianTransformationOperator2D := 
IfcRepresentationItem() || IfcGeometricRepresentationItem() ||
IfcCartesianTransformationOperator(
    -- Axis1
    IfcRepresentationItem() || IfcGeometricRepresentationItem() ||
    IfcDirection([-1., 0.]),
    -- Axis2
    IfcRepresentationItem() || IfcGeometricRepresentationItem() ||
    IfcDirection([ 0., 1.]),
    -- LocalOrigin
    IfcRepresentationItem() || IfcGeometricRepresentationItem() ||
    IfcPoint() || IfcCartesianPoint([0., 0.]),
    -- Scale
    1.) ||
IfcCartesianTransformationOperator2D();
END_ENTITY;

ENTITY IfcMobileSwitchingCenter
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcMobileTelecommunicationsAppliance
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : IfcMobileTelecommunicationsApplianceTypeEnum;
END_ENTITY;

ENTITY IfcMobileTelecommunicationsApplianceType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcMobileTelecommunicationsApplianceTypeEnum;
END_ENTITY;

ENTITY IfcMobilityManagementEntity
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcModem
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcMonetaryUnit;
	Currency : IfcLabel;
END_ENTITY;

ENTITY IfcMooringDevice
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : IfcMooringDeviceTypeEnum;
END_ENTITY;

ENTITY IfcMooringDeviceType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcMooringDeviceTypeEnum;
END_ENTITY;

ENTITY IfcMooringSystem;
END_ENTITY;

ENTITY IfcMooringZone
 SUBTYPE OF (IfcOverheadLineInfrastructureReservation);
END_ENTITY;

ENTITY IfcMotorConnection
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcMotorConnectionTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcMotorConnectionTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcMotorConnectionTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCMOTORCONNECTIONTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcMotorConnectionType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcMotorConnectionTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcMotorConnectionTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMotorConnectionTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcMotorway
 SUBTYPE OF (IfcTrafficRestriction);
END_ENTITY;

ENTITY IfcMscServer;
END_ENTITY;

ENTITY IfcMultipleTrackCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcNamedUnit
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcConversionBasedUnit
	,IfcSIUnit
	,IfcContextDependentUnit));
	Dimensions : IfcDimensionalExponents;
	UnitType : IfcUnitEnum;
 WHERE
	WR1 : IfcCorrectDimensions (SELF.UnitType, SELF.Dimensions);
END_ENTITY;

ENTITY IfcNaturalSectionInsulator
 SUBTYPE OF (IfcSectioningDevice);
END_ENTITY;

ENTITY IfcNavigationElement
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : IfcNavigationElementTypeEnum;
END_ENTITY;

ENTITY IfcNavigationElementType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcNavigationElementTypeEnum;
END_ENTITY;

ENTITY IfcNegativeFeeder
 SUBTYPE OF (IfcFeederLine);
END_ENTITY;

ENTITY IfcNet;
END_ENTITY;

ENTITY IfcNetentitiesPart
 SUPERTYPE OF (ONEOF
	(IfcNetentitiesPartition));
END_ENTITY;

ENTITY IfcNetentitiesPartition
 SUPERTYPE OF (ONEOF
	(IfcSignallingReservedVolume))
 SUBTYPE OF (IfcNetentitiesPart);
END_ENTITY;

ENTITY IfcNetworkInterfaceCabinet;
END_ENTITY;

ENTITY IfcNetworkManagementServerEmsCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcNetworkManagementServerNmsCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcNeutralSection
 SUBTYPE OF (IfcTensioningSection);
END_ENTITY;

ENTITY IfcNode
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTrackNode));
END_ENTITY;

ENTITY IfcNoiseBarrierSoundProofWallNoiseBund;
END_ENTITY;

ENTITY IfcNonInsulatedConductor
 SUBTYPE OF (IfcElectricalConductor);
END_ENTITY;

ENTITY IfcNonPhysicalSignal
 SUBTYPE OF (IfcSignal);
END_ENTITY;

ENTITY IfcNotInsulatedJointWithFishplate
 SUBTYPE OF (IfcAbsJoint);
	Rail gap : IfcIntegerPositive0;
	Type : IfcInsulatedJointType;
END_ENTITY;

ENTITY IfcNumberOfCarriageways;
END_ENTITY;

ENTITY IfcObject
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcGroup
	,IfcProcess
	,IfcProduct
	,IfcResource
	,IfcActor
	,IfcControl))
 SUBTYPE OF (IfcObjectDefinition);
	ObjectType : OPTIONAL IfcLabel;
 INVERSE
	IsDeclaredBy : SET [0:1] OF IfcRelDefinesByObject FOR RelatedObjects;
	Declares : SET  OF IfcRelDefinesByObject FOR RelatingObject;
	IsTypedBy : SET [0:1] OF IfcRelDefinesByType FOR RelatedObjects;
	IsDefinedBy : SET  OF IfcRelDefinesByProperties FOR RelatedObjects;
 WHERE
	UniquePropertySetNames : ((SIZEOF(IsDefinedBy) = 0) OR IfcUniqueDefinitionNames(IsDefinedBy));
END_ENTITY;

ENTITY IfcObjectDefinition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcContext
	,IfcTypeObject
	,IfcObject))
 SUBTYPE OF (IfcRoot);
 INVERSE
	HasAssignments : SET  OF IfcRelAssigns FOR RelatedObjects;
	Nests : SET [0:1] OF IfcRelNests FOR RelatedObjects;
	IsNestedBy : SET  OF IfcRelNests FOR RelatingObject;
	HasContext : SET [0:1] OF IfcRelDeclares FOR RelatedDefinitions;
	IsDecomposedBy : SET  OF IfcRelAggregates FOR RelatingObject;
	Decomposes : SET [0:1] OF IfcRelAggregates FOR RelatedObjects;
	HasAssociations : SET  OF IfcRelAssociates FOR RelatedObjects;
END_ENTITY;

ENTITY IfcObjectPlacement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLinearPlacement
	,IfcGridPlacement
	,IfcLocalPlacement));
	PlacementRelTo : OPTIONAL IfcObjectPlacement;
 INVERSE
	PlacesObject : SET  OF IfcProduct FOR ObjectPlacement;
END_ENTITY;

ENTITY IfcObjective
 SUBTYPE OF (IfcConstraint);
	BenchmarkValues : OPTIONAL LIST  OF IfcConstraint;
	LogicalAggregator : OPTIONAL IfcLogicalOperatorEnum;
	ObjectiveQualifier : IfcObjectiveEnum;
	UserDefinedQualifier : OPTIONAL IfcLabel;
 WHERE
	WR21 : (ObjectiveQualifier <> IfcObjectiveEnum.USERDEFINED) OR
((ObjectiveQualifier = IfcObjectiveEnum.USERDEFINED) AND EXISTS(SELF\IfcObjective.UserDefinedQualifier));
END_ENTITY;

ENTITY IfcObstacleDetector
END_ENTITY;

ENTITY IfcOccupant
 SUBTYPE OF (IfcActor);
	PredefinedType : OPTIONAL IfcOccupantTypeEnum;
 WHERE
	WR31 : NOT(PredefinedType = IfcOccupantTypeEnum.USERDEFINED) 
OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcOcsFastening;
END_ENTITY;

ENTITY IfcOcsFitting
 SUPERTYPE OF (ONEOF
	(IfcJointFitting
	,IfcEarthingFitting
	,IfcTerminationFitting
	,IfcRegistrationFitting
	,IfcSupportFitting
	,IfcTensioningFitting
	,IfcSuspensionFitting));
END_ENTITY;

ENTITY IfcOcsFoundation
 SUPERTYPE OF (ONEOF
	(IfcSealing
	,IfcPileFoundation
	,IfcBlockFoundation
	,IfcCorbel));
END_ENTITY;

ENTITY IfcOcsSupportingElements
 SUPERTYPE OF (ONEOF
	(IfcBearerStructure
	,IfcSuffixPost
	,IfcHeadSpan
	,IfcCrossBeam
	,IfcPole));
END_ENTITY;

ENTITY IfcOcsSupportingSystem;
END_ENTITY;

ENTITY IfcOcsSuspension
 SUPERTYPE OF (ONEOF
	(IfcFeederSuspension
	,IfcCantileverAssembly
	,IfcContactLineSuspension
	,IfcRigidCatenarySuspension));
END_ENTITY;

ENTITY IfcOfficeTelephone
 SUBTYPE OF (IfcTelephone);
END_ENTITY;

ENTITY IfcOffsetCurve
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcOffsetCurve3D
	,IfcOffsetCurve2D
	,IfcOffsetCurveByDistances))
 SUBTYPE OF (IfcCurve);
	BasisCurve : IfcCurve;
END_ENTITY;

ENTITY IfcOffsetCurve2D
 SUBTYPE OF (IfcOffsetCurve);
	Distance : IfcLengthMeasure;
	SelfIntersect : IfcLogical;
 WHERE
	DimIs2D : BasisCurve.Dim = 2;
END_ENTITY;

ENTITY IfcOffsetCurve3D
 SUBTYPE OF (IfcOffsetCurve);
	Distance : IfcLengthMeasure;
	SelfIntersect : IfcLogical;
	RefDirection : IfcDirection;
 WHERE
	DimIs2D : BasisCurve.Dim = 3;
END_ENTITY;

ENTITY IfcOffsetCurveByDistances
 SUBTYPE OF (IfcOffsetCurve);
	OffsetValues : LIST  OF IfcDistanceExpression;
	Tag : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcOilRetentionTray
 SUBTYPE OF (IfcEnvironnementalProtection);
END_ENTITY;

ENTITY IfcOnSiteControlUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcOpenCrossProfileDef
 SUBTYPE OF (IfcProfileDef);
	HorizontalWidths : IfcBoolean;
	Slopes : IfcPlaneAngleMeasure;
	Tags : IfcLabel;
	Widths : IfcNonNegativeLengthMeasure;
END_ENTITY;

ENTITY IfcOpenShell
 SUBTYPE OF (IfcConnectedFaceSet);
END_ENTITY;

ENTITY IfcOpeningElement
 SUPERTYPE OF (ONEOF
	(IfcOpeningStandardCase))
 SUBTYPE OF (IfcFeatureElementSubtraction);
	PredefinedType : OPTIONAL IfcOpeningElementTypeEnum;
 INVERSE
	HasFillings : SET  OF IfcRelFillsElement FOR RelatingOpeningElement;
END_ENTITY;

ENTITY IfcOpeningStandardCase
 SUBTYPE OF (IfcOpeningElement);
END_ENTITY;

ENTITY IfcOperationalPoint;
END_ENTITY;

ENTITY IfcOpticalAdapter
 SUBTYPE OF (IfcTelecomPassiveEquipment);
END_ENTITY;

ENTITY IfcOpticalFiberCable
 SUPERTYPE OF (ONEOF
	(IfcOpticalPigtail
	,IfcOpticalFiberPatchCord))
 SUBTYPE OF (IfcTelecomCable);
END_ENTITY;

ENTITY IfcOpticalFiberConnector
 SUBTYPE OF (IfcTelecomConnector);
END_ENTITY;

ENTITY IfcOpticalFiberPatchCord
 SUBTYPE OF (IfcOpticalFiberCable);
END_ENTITY;

ENTITY IfcOpticalLineTerminal
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcOpticalNetworkUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcOpticalPigtail
 SUBTYPE OF (IfcOpticalFiberCable);
END_ENTITY;

ENTITY IfcOpticalSplitter
 SUBTYPE OF (IfcTelecomPassiveEquipment);
END_ENTITY;

ENTITY IfcOrganization;
	Identification : OPTIONAL IfcIdentifier;
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	Roles : OPTIONAL LIST  OF IfcActorRole;
	Addresses : OPTIONAL LIST  OF IfcAddress;
 INVERSE
	IsRelatedBy : SET  OF IfcOrganizationRelationship FOR RelatedOrganizations;
	Relates : SET  OF IfcOrganizationRelationship FOR RelatingOrganization;
	Engages : SET  OF IfcPersonAndOrganization FOR TheOrganization;
END_ENTITY;

ENTITY IfcOrganizationRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingOrganization : IfcOrganization;
	RelatedOrganizations : SET  OF IfcOrganization;
END_ENTITY;

ENTITY IfcOrientationExpression
 SUBTYPE OF (IfcGeometricRepresentationItem);
	LateralAxisDirection : IfcDirection;
	VerticalAxisDirection : IfcDirection;
END_ENTITY;

ENTITY IfcOrientedEdge
 SUBTYPE OF (IfcEdge);
	EdgeElement : IfcEdge;
	Orientation : IfcBoolean;
 DERIVE
	SELF\IfcEdge.EdgeStart : IfcVertex := IfcBooleanChoose 
(Orientation, EdgeElement.EdgeStart, EdgeElement.EdgeEnd);
	SELF\IfcEdge.EdgeEnd : IfcVertex := IfcBooleanChoose 
(Orientation, EdgeElement.EdgeEnd, EdgeElement.EdgeStart);
 WHERE
	EdgeElementNotOriented : NOT('IFCTOPOLOGYRESOURCE.IFCORIENTEDEDGE' IN TYPEOF(EdgeElement));
END_ENTITY;

ENTITY IfcOutOfRunningCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcOutdoorDirectionBox
 SUBTYPE OF (IfcBox);
END_ENTITY;

ENTITY IfcOutdoorLayingInfrastructureRoutingZone
END_ENTITY;

ENTITY IfcOutdoorTelecomEquipmentZone
END_ENTITY;

ENTITY IfcOutdoorTelecomZone
 SUPERTYPE OF (ONEOF
	(IfcOutdoorTelecomEquipmentZone
	,IfcOutdoorLayingInfrastructureRoutingZone))
 SUBTYPE OF (IfcTelecomReservedVolume);
END_ENTITY;

ENTITY IfcOutdoorTerminalBox
 SUBTYPE OF (IfcBox);
END_ENTITY;

ENTITY IfcOuterBoundaryCurve
 SUBTYPE OF (IfcBoundaryCurve);
END_ENTITY;

ENTITY IfcOutlet
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcOutletTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcOutletTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcOutletTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCOUTLETTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcOutletType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcOutletTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcOutletTypeEnum.USERDEFINED) OR
((PredefinedType = IfcOutletTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcOverheadContactLine;
END_ENTITY;

ENTITY IfcOverheadContactLineSystem
 SUPERTYPE OF (ONEOF
	(IfcRigidCatenary));
END_ENTITY;

ENTITY IfcOverheadContactRail;
END_ENTITY;

ENTITY IfcOverheadEnergyFacility
 SUPERTYPE OF (ONEOF
	(IfcOverheadLinePart))
 SUBTYPE OF (IfcRailwayEnergyFacility);
END_ENTITY;

ENTITY IfcOverheadLine;
END_ENTITY;

ENTITY IfcOverheadLine;
END_ENTITY;

ENTITY IfcOverheadLineComplexArea;
END_ENTITY;

ENTITY IfcOverheadLineComplexArea
 SUBTYPE OF (IfcOverheadLinePart);
END_ENTITY;

ENTITY IfcOverheadLineInfrastructureReservation
 SUPERTYPE OF (ONEOF
	(IfcMooringZone))
 SUBTYPE OF (IfcEnergyInfrastructureVolume);
END_ENTITY;

ENTITY IfcOverheadLineOverlapZone
 SUPERTYPE OF (ONEOF
	(IfcInsulatedOverlap
	,IfcConnectedOverlap
	,IfcSwitchedOverlap))
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcOverheadLinePart
 SUPERTYPE OF (ONEOF
	(IfcOverheadLineComplexArea
	,IfcOverheadLinePlainLineArea))
 SUBTYPE OF (IfcOverheadEnergyFacility);
END_ENTITY;

ENTITY IfcOverheadLinePlainLineArea;
END_ENTITY;

ENTITY IfcOverheadLinePlainLineArea
 SUBTYPE OF (IfcOverheadLinePart);
END_ENTITY;

ENTITY IfcOverheadLineSystem
 SUPERTYPE OF (ONEOF
	(IfcSystemSeparationCatenary));
END_ENTITY;

ENTITY IfcOwnerHistory;
	OwningUser : IfcPersonAndOrganization;
	OwningApplication : IfcApplication;
	State : OPTIONAL IfcStateEnum;
	ChangeAction : OPTIONAL IfcChangeActionEnum;
	LastModifiedDate : OPTIONAL IfcTimeStamp;
	LastModifyingUser : OPTIONAL IfcPersonAndOrganization;
	LastModifyingApplication : OPTIONAL IfcApplication;
	CreationDate : IfcTimeStamp;
 WHERE
	CorrectChangeAction : (EXISTS(LastModifiedDate)) OR
(NOT(EXISTS(LastModifiedDate)) AND NOT(EXISTS(ChangeAction))) OR
(NOT(EXISTS(LastModifiedDate)) AND EXISTS(ChangeAction) AND ((ChangeAction = IfcChangeActionEnum.NOTDEFINED) OR (ChangeAction = IfcChangeActionEnum.NOCHANGE)));
END_ENTITY;

ENTITY IfcPBoundedvalue;
END_ENTITY;

ENTITY IfcPComplex;
END_ENTITY;

ENTITY IfcPEnumeratedvalue;
END_ENTITY;

ENTITY IfcPListvalue;
END_ENTITY;

ENTITY IfcPReferencevalue;
END_ENTITY;

ENTITY IfcPSinglevalue;
END_ENTITY;

ENTITY IfcPTablevalue;
END_ENTITY;

ENTITY IfcPacketControlUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcPanelStrengthening
 SUBTYPE OF (IfcAbsTrackStrengthening);
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Location in the panel : IfcNewCoordinatesLocal;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Track edge : IfcIdentifier;
	Type : IfcStrengtheningType;
END_ENTITY;

ENTITY IfcParameterizedProfileDef
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcIShapeProfileDef
	,IfcTShapeProfileDef
	,IfcAsymmetricIShapeProfileDef
	,IfcZShapeProfileDef
	,IfcLShapeProfileDef
	,IfcTrapeziumProfileDef
	,IfcEllipseProfileDef
	,IfcCShapeProfileDef
	,IfcRectangleProfileDef
	,IfcCircleProfileDef
	,IfcUShapeProfileDef))
 SUBTYPE OF (IfcProfileDef);
	Position : OPTIONAL IfcAxis2Placement2D;
END_ENTITY;

ENTITY IfcParkingGarage;
END_ENTITY;

ENTITY IfcParkingLot;
END_ENTITY;

ENTITY IfcPassiveBalise
 SUBTYPE OF (IfcBalise);
END_ENTITY;

ENTITY IfcPassiveElectronicComponentOfTrackCircuit
 SUBTYPE OF (IfcAbsSignallingEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcPath
 SUBTYPE OF (IfcTopologicalRepresentationItem);
	EdgeList : LIST  OF IfcOrientedEdge;
 WHERE
	IsContinuous : IfcPathHeadToTail(SELF);
END_ENTITY;

ENTITY IfcPavement
 SUBTYPE OF (IfcBuiltElement);
	Flexible : IfcBoolean;
 INVERSE
	PredefinedType : IfcPavementTypeEnum FOR None;
END_ENTITY;

ENTITY IfcPavement;
	Flexible : IfcBoolean;
END_ENTITY;

ENTITY IfcPavementType
 SUBTYPE OF (IfcBuiltElementType);
	Flexible : IfcBoolean;
END_ENTITY;

ENTITY IfcPavementType;
END_ENTITY;

ENTITY IfcPcurve
 SUBTYPE OF (IfcCurve);
	BasisSurface : IfcSurface;
	ReferenceCurve : IfcCurve;
 WHERE
	DimIs2D : ReferenceCurve.Dim = 2;
END_ENTITY;

ENTITY IfcPedestrianParapet;
END_ENTITY;

ENTITY IfcPedestrianRestraintSystem
 SUBTYPE OF (IfcRoadrestraintsystem);
END_ENTITY;

ENTITY IfcPerformanceHistory
 SUBTYPE OF (IfcControl);
	LifeCyclePhase : IfcLabel;
	PredefinedType : OPTIONAL IfcPerformanceHistoryTypeEnum;
END_ENTITY;

ENTITY IfcPermeableCoveringProperties
 SUBTYPE OF (IfcPreDefinedPropertySet);
	OperationType : IfcPermeableCoveringOperationEnum;
	PanelPosition : IfcWindowPanelPositionEnum;
	FrameDepth : OPTIONAL IfcPositiveLengthMeasure;
	FrameThickness : OPTIONAL IfcPositiveLengthMeasure;
	ShapeAspectStyle : OPTIONAL IfcShapeAspect;
END_ENTITY;

ENTITY IfcPermit
 SUBTYPE OF (IfcControl);
	PredefinedType : OPTIONAL IfcPermitTypeEnum;
	Status : OPTIONAL IfcLabel;
	LongDescription : OPTIONAL IfcText;
END_ENTITY;

ENTITY IfcPerson;
	Identification : OPTIONAL IfcIdentifier;
	FamilyName : OPTIONAL IfcLabel;
	GivenName : OPTIONAL IfcLabel;
	Roles : OPTIONAL LIST  OF IfcActorRole;
	Addresses : OPTIONAL LIST  OF IfcAddress;
 INVERSE
	EngagedIn : SET  OF IfcPersonAndOrganization FOR ThePerson;
 WHERE
	IdentifiablePerson : EXISTS(Identification) OR EXISTS(FamilyName) OR EXISTS(GivenName);
	ValidSetOfNames : NOT EXISTS(MiddleNames) OR EXISTS(FamilyName) OR EXISTS(GivenName);
END_ENTITY;

ENTITY IfcPersonAndOrganization;
	ThePerson : IfcPerson;
	TheOrganization : IfcOrganization;
	Roles : OPTIONAL LIST  OF IfcActorRole;
END_ENTITY;

ENTITY IfcPhaseSeparationCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcPhysicalComplexQuantity
 SUBTYPE OF (IfcPhysicalQuantity);
	HasQuantities : SET  OF IfcPhysicalQuantity;
	Discrimination : IfcLabel;
	Quality : OPTIONAL IfcLabel;
	Usage : OPTIONAL IfcLabel;
 WHERE
	NoSelfReference : SIZEOF(QUERY(temp <* HasQuantities | SELF :=: temp)) = 0;
	UniqueQuantityNames : IfcUniqueQuantityNames(HasQuantities);
END_ENTITY;

ENTITY IfcPhysicalQuantity
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPhysicalComplexQuantity
	,IfcPhysicalSimpleQuantity));
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
 INVERSE
	HasExternalReferences : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
	PartOfComplex : SET [0:1] OF IfcPhysicalComplexQuantity FOR HasQuantities;
END_ENTITY;

ENTITY IfcPhysicalSignal
 SUPERTYPE OF (ONEOF
	(IfcMarkerSign
	,IfcActiveSignal))
 SUBTYPE OF (IfcSignal);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcPhysicalSimpleQuantity
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcQuantityWeight
	,IfcQuantityCount
	,IfcQuantityLength
	,IfcQuantityVolume
	,IfcQuantityArea
	,IfcQuantityTime))
 SUBTYPE OF (IfcPhysicalQuantity);
	Unit : OPTIONAL IfcNamedUnit;
END_ENTITY;

ENTITY IfcPile
 SUBTYPE OF (IfcDeepFoundation);
	PredefinedType : OPTIONAL IfcPileTypeEnum;
	ConstructionType : OPTIONAL IfcPileConstructionEnum;
 WHERE
	CorrectPredefinedType : NOT EXISTS(PredefinedType) OR
(PredefinedType <> IfcPileTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPileTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSTRUCTURALELEMENTSDOMAIN.IFCPILETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcPileFoundation
 SUBTYPE OF (IfcOcsFoundation);
END_ENTITY;

ENTITY IfcPileType
 SUBTYPE OF (IfcDeepFoundationType);
	PredefinedType : IfcPileTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcPileTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPileTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcPinInsulators
 SUBTYPE OF (IfcInsulator);
END_ENTITY;

ENTITY IfcPioCabinetOfTrainControlCenter
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcPipe;
END_ENTITY;

ENTITY IfcPipeFitting
 SUBTYPE OF (IfcFlowFitting);
	PredefinedType : OPTIONAL IfcPipeFittingTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcPipeFittingTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcPipeFittingTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCPIPEFITTINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcPipeFittingType
 SUBTYPE OF (IfcFlowFittingType);
	PredefinedType : IfcPipeFittingTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcPipeFittingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPipeFittingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcPipeSegment
 SUBTYPE OF (IfcFlowSegment);
	PredefinedType : OPTIONAL IfcPipeSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcPipeSegmentTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcPipeSegmentTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCPIPESEGMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcPipeSegmentType
 SUBTYPE OF (IfcFlowSegmentType);
	PredefinedType : IfcPipeSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcPipeSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPipeSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcPixelTexture
 SUBTYPE OF (IfcSurfaceTexture);
	Width : IfcInteger;
	Height : IfcInteger;
	ColourComponents : IfcInteger;
 WHERE
	MinPixelInS : Width >= 1;
	MinPixelInT : Height >= 1;
	NumberOfColours : {1 <= ColourComponents <= 4};
	SizeOfPixelList : SIZEOF(Pixel) = (Width * Height);
	PixelAsByteAndSameLength : SIZEOF(QUERY(temp<* Pixel |
 (BLENGTH(temp) MOD 8 = 0) AND
 (BLENGTH(temp) = BLENGTH(Pixel[1]))
)) = SIZEOF(Pixel);
END_ENTITY;

ENTITY IfcPlacement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcAxis2Placement2D
	,IfcAxis2Placement3D
	,IfcAxis1Placement))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Location : IfcCartesianPoint;
 DERIVE
	Dim : IfcDimensionCount := Location.Dim;
END_ENTITY;

ENTITY IfcPlainTds
 SUBTYPE OF (IfcTds);
END_ENTITY;

ENTITY IfcPlainTrackSuperStructure
 SUBTYPE OF (IfcTrackPart);
END_ENTITY;

ENTITY IfcPlanarBox
 SUBTYPE OF (IfcPlanarExtent);
	Placement : IfcAxis2Placement;
END_ENTITY;

ENTITY IfcPlanarExtent
 SUPERTYPE OF (ONEOF
	(IfcPlanarBox))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	SizeInX : IfcLengthMeasure;
	SizeInY : IfcLengthMeasure;
END_ENTITY;

ENTITY IfcPlane
 SUBTYPE OF (IfcElementarySurface);
END_ENTITY;

ENTITY IfcPlant
 SUBTYPE OF (IfcGeographicElement);
END_ENTITY;

ENTITY IfcPlantreservation;
END_ENTITY;

ENTITY IfcPlate
 SUPERTYPE OF (ONEOF
	(IfcPlateStandardCase))
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcPlateTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcPlateTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcPlateTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCPLATETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcPlateStandardCase
 SUBTYPE OF (IfcPlate);
 WHERE
	HasMaterialLayerSetUsage : SIZEOF (QUERY(temp <* USEDIN(SELF, 'IFCKERNEL.IFCRELASSOCIATES.RELATEDOBJECTS') |
              ('IFCPRODUCTEXTENSION.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)) AND
              ('IFCMATERIALRESOURCE.IFCMATERIALLAYERSETUSAGE' IN TYPEOF(temp.RelatingMaterial))
              )) = 1;
END_ENTITY;

ENTITY IfcPlateType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcPlateTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcPlateTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPlateTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcPoint
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPointOnSurface
	,IfcCartesianPoint
	,IfcPointOnCurve))
 SUBTYPE OF (IfcGeometricRepresentationItem);
END_ENTITY;

ENTITY IfcPoint
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCartesianPoint
	,IfcDistanceAlongPoint));
	Id : IfcChar;
END_ENTITY;

ENTITY IfcPointClosureDetector
	Primary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcPointMachine
 SUBTYPE OF (IfcTurnoutSignallingEquipment);
	Primary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcPointMachineMountingDevice
 SUBTYPE OF (IfcTurnoutSignallingEquipment);
	Primary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcPointOnCurve
 SUBTYPE OF (IfcPoint);
	BasisCurve : IfcCurve;
	PointParameter : IfcParameterValue;
 DERIVE
	Dim : IfcDimensionCount := BasisCurve.Dim;
END_ENTITY;

ENTITY IfcPointOnSurface
 SUBTYPE OF (IfcPoint);
	BasisSurface : IfcSurface;
	PointParameterU : IfcParameterValue;
	PointParameterV : IfcParameterValue;
 DERIVE
	Dim : IfcDimensionCount := BasisSurface.Dim;
END_ENTITY;

ENTITY IfcPole
 SUBTYPE OF (IfcOcsSupportingElements);
END_ENTITY;

ENTITY IfcPolyLoop
 SUBTYPE OF (IfcLoop);
	Polygon : LIST  OF IfcCartesianPoint;
 WHERE
	AllPointsSameDim : SIZEOF(QUERY(Temp <* Polygon | Temp.Dim <> Polygon[1].Dim)) = 0;
END_ENTITY;

ENTITY IfcPolygonalBoundedHalfSpace
 SUBTYPE OF (IfcHalfSpaceSolid);
	Position : IfcAxis2Placement3D;
	PolygonalBoundary : IfcBoundedCurve;
 WHERE
	BoundaryDim : PolygonalBoundary.Dim = 2;
	BoundaryType : SIZEOF(TYPEOF(PolygonalBoundary) * [
  'IFCGEOMETRYRESOURCE.IFCPOLYLINE', 
  'IFCGEOMETRYRESOURCE.IFCCOMPOSITECURVE']
) = 1;
END_ENTITY;

ENTITY IfcPolygonalFaceSet
 SUBTYPE OF (IfcTessellatedFaceSet);
	Closed : OPTIONAL IfcBoolean;
	Faces : LIST  OF IfcIndexedPolygonalFace;
END_ENTITY;

ENTITY IfcPolyline
 SUBTYPE OF (IfcBoundedCurve);
	Points : LIST  OF IfcCartesianPoint;
 WHERE
	SameDim : SIZEOF(QUERY(Temp <* Points | Temp.Dim <> Points[1].Dim)) = 0;
END_ENTITY;

ENTITY IfcPort
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDistributionPort))
 SUBTYPE OF (IfcProduct);
 INVERSE
	ContainedIn : SET [0:1] OF IfcRelConnectsPortToElement FOR RelatingPort;
	ConnectedFrom : SET [0:1] OF IfcRelConnectsPorts FOR RelatedPort;
	ConnectedTo : SET [0:1] OF IfcRelConnectsPorts FOR RelatingPort;
END_ENTITY;

ENTITY IfcPositioningElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLinearPositioningElement
	,IfcGrid
	,IfcReferent))
 SUBTYPE OF (IfcProduct);
 INVERSE
	ContainedInStructure : SET [0:1] OF IfcRelContainedInSpatialStructure FOR RelatedElements;
	Positions : SET  OF IfcRelPositions FOR RelatingPositioningElement;
 WHERE
	HasPlacement : EXISTS(SELF\IfcProduct.ObjectPlacement);
END_ENTITY;

ENTITY IfcPositiveFeeder
 SUBTYPE OF (IfcFeederLine);
END_ENTITY;

ENTITY IfcPost;
END_ENTITY;

ENTITY IfcPostInsulator
 SUBTYPE OF (IfcInsulator);
END_ENTITY;

ENTITY IfcPostalAddress
 SUBTYPE OF (IfcAddress);
	InternalLocation : OPTIONAL IfcLabel;
	PostalBox : OPTIONAL IfcLabel;
	Town : OPTIONAL IfcLabel;
	Region : OPTIONAL IfcLabel;
	PostalCode : OPTIONAL IfcLabel;
	Country : OPTIONAL IfcLabel;
 WHERE
	WR1 : EXISTS (InternalLocation) OR 
EXISTS (AddressLines) OR
EXISTS (PostalBox) OR
EXISTS (PostalCode) OR
EXISTS (Town) OR 
EXISTS (Region) OR  
EXISTS (Country);
END_ENTITY;

ENTITY IfcPowerCableConnector
 SUBTYPE OF (IfcConnector);
END_ENTITY;

ENTITY IfcPowerControlSystem;
END_ENTITY;

ENTITY IfcPowerDistributionBox
 SUBTYPE OF (IfcBox);
END_ENTITY;

ENTITY IfcPowerFactorCorrectionPfc
 SUBTYPE OF (IfcCompensatorEquipment);
END_ENTITY;

ENTITY IfcPowerSupplyCable
 SUBTYPE OF (IfcCable);
END_ENTITY;

ENTITY IfcPowerSupplyFacilitySpatialStructure
 SUPERTYPE OF (ONEOF
	(IfcTractionPost
	,IfcAutotransformerPost
	,IfcSubstation))
 SUBTYPE OF (IfcRailwayEnergyFacility);
END_ENTITY;

ENTITY IfcPowerSupplyInterface
 SUBTYPE OF (IfcConnectionInterface);
END_ENTITY;

ENTITY IfcPowerSupplyPort;
END_ENTITY;

ENTITY IfcPowerTransformer
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcBoosterTransformer
	,IfcTractionTransformer
	,IfcDecouplerTransformer
	,IfcAuxiliaryTransformer
	,IfcAutotransformer))
 SUBTYPE OF (IfcEnergyConversionDevice);
END_ENTITY;

ENTITY IfcPreDefinedColour
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDraughtingPreDefinedColour))
 SUBTYPE OF (IfcPreDefinedItem);
END_ENTITY;

ENTITY IfcPreDefinedCurveFont
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDraughtingPreDefinedCurveFont))
 SUBTYPE OF (IfcPreDefinedItem);
END_ENTITY;

ENTITY IfcPreDefinedItem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPreDefinedColour
	,IfcPreDefinedCurveFont
	,IfcPreDefinedTextFont))
 SUBTYPE OF (IfcPresentationItem);
	Name : IfcLabel;
END_ENTITY;

ENTITY IfcPreDefinedProperties
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcReinforcementBarProperties
	,IfcSectionProperties
	,IfcSectionReinforcementProperties))
 SUBTYPE OF (IfcPropertyAbstraction);
END_ENTITY;

ENTITY IfcPreDefinedPropertySet
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcWindowPanelProperties
	,IfcDoorPanelProperties
	,IfcPermeableCoveringProperties
	,IfcWindowLiningProperties
	,IfcReinforcementDefinitionProperties
	,IfcDoorLiningProperties))
 SUBTYPE OF (IfcPropertySetDefinition);
END_ENTITY;

ENTITY IfcPreDefinedTextFont
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTextStyleFontModel))
 SUBTYPE OF (IfcPreDefinedItem);
END_ENTITY;

ENTITY IfcPresentationItem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSurfaceStyleWithTextures
	,IfcColourSpecification
	,IfcCurveStyleFont
	,IfcTextStyleForDefinedFont
	,IfcCurveStyleFontPattern
	,IfcTextureVertexList
	,IfcSurfaceTexture
	,IfcSurfaceStyleRefraction
	,IfcTextStyleTextModel
	,IfcTextureCoordinate
	,IfcColourRgbList
	,IfcTextureVertex
	,IfcPreDefinedItem
	,IfcSurfaceStyleLighting
	,IfcCurveStyleFontAndScaling
	,IfcSurfaceStyleShading
	,IfcIndexedColourMap));
END_ENTITY;

ENTITY IfcPresentationLayerAssignment
 SUPERTYPE OF (ONEOF
	(IfcPresentationLayerWithStyle));
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	Identifier : OPTIONAL IfcIdentifier;
 WHERE
	ApplicableItems : SIZEOF(QUERY(temp <* AssignedItems | (
  SIZEOF(TYPEOF(temp) * [
    'IFCREPRESENTATIONRESOURCE.IFCSHAPEREPRESENTATION',
    'IFCGEOMETRYRESOURCE.IFCGEOMETRICREPRESENTATIONITEM',
    'IFCGEOMETRYRESOURCE.IFCMAPPEDITEM']) = 1)
)) = SIZEOF(AssignedItems);
END_ENTITY;

ENTITY IfcPresentationLayerWithStyle
 SUBTYPE OF (IfcPresentationLayerAssignment);
	LayerOn : IfcLogical;
	LayerFrozen : IfcLogical;
	LayerBlocked : IfcLogical;
	LayerStyles : SET  OF IfcPresentationStyle;
 WHERE
	ApplicableOnlyToItems : SIZEOF(QUERY(temp <* AssignedItems | (SIZEOF(TYPEOF(temp) * ['IFCGEOMETRYRESOURCE.IfcGeometricRepresentationItem','IFCGEOMETRYRESOURCE.IfcMappedItem']) >= 1))) = SIZEOF(AssignedItems);
END_ENTITY;

ENTITY IfcPresentationStyle
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcCurveStyle
	,IfcFillAreaStyle
	,IfcSurfaceStyle
	,IfcTextStyle));
	Name : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcPresentationStyleAssignment;
END_ENTITY;

ENTITY IfcPrimaryReferenceClock
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcPrivateBranchExchange
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcPrivateOwnedRoadArea;
END_ENTITY;

ENTITY IfcProcedure
 SUBTYPE OF (IfcProcess);
	PredefinedType : OPTIONAL IfcProcedureTypeEnum;
 WHERE
	HasName : EXISTS(SELF\IfcRoot.Name);
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR (PredefinedType <> IfcProcedureTypeEnum.USERDEFINED) OR
((PredefinedType = IfcProcedureTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcProcedureType
 SUBTYPE OF (IfcTypeProcess);
	PredefinedType : IfcProcedureTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcProcedureTypeEnum.USERDEFINED) OR ((PredefinedType = IfcProcedureTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeProcess.ProcessType));
END_ENTITY;

ENTITY IfcProcess
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcEvent
	,IfcProcedure
	,IfcTask))
 SUBTYPE OF (IfcObject);
	Identification : OPTIONAL IfcIdentifier;
	LongDescription : OPTIONAL IfcText;
 INVERSE
	IsPredecessorTo : SET  OF IfcRelSequence FOR RelatingProcess;
	IsSuccessorFrom : SET  OF IfcRelSequence FOR RelatedProcess;
	OperatesOn : SET  OF IfcRelAssignsToProcess FOR RelatingProcess;
END_ENTITY;

ENTITY IfcProcessreservation;
END_ENTITY;

ENTITY IfcProduct
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSpatialElement
	,IfcProxy
	,IfcElement
	,IfcPositioningElement
	,IfcPort
	,IfcAnnotation
	,IfcStructuralActivity
	,IfcStructuralItem))
 SUBTYPE OF (IfcObject);
	ObjectPlacement : OPTIONAL IfcObjectPlacement;
	Representation : OPTIONAL IfcProductRepresentation;
 INVERSE
	Representation : IfcProductDefinitionShape FOR ShapeOfProduct;
	ReferencedBy : SET  OF IfcRelAssignsToProduct FOR RelatingProduct;
	PositionedRelativeTo : SET [0:1] OF IfcRelPositions FOR RelatedProducts;
	ReferencedInStructures : SET  OF IfcRelReferencedInSpatialStructure FOR RelatedElements;
 WHERE
	PlacementForShapeRepresentation : (EXISTS(Representation) AND EXISTS(ObjectPlacement))
            OR (EXISTS(Representation) AND 
         (SIZEOF(QUERY(temp <* Representation.Representations | 'IFCREPRESENTATIONRESOURCE.IFCSHAPEREPRESENTATION' IN TYPEOF(temp))) = 0))
            OR (NOT(EXISTS(Representation)));
END_ENTITY;

ENTITY IfcProductDefinitionShape
 SUBTYPE OF (IfcProductRepresentation);
 INVERSE
	ShapeOfProduct : SET  OF IfcProduct FOR Representation;
	HasShapeAspects : SET  OF IfcShapeAspect FOR PartOfProductDefinitionShape;
 WHERE
	OnlyShapeModel : SIZEOF(QUERY(temp <* Representations | 
  (NOT('IFCREPRESENTATIONRESOURCE.IFCSHAPEMODEL' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcProductRepresentation
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcProductDefinitionShape
	,IfcMaterialDefinitionRepresentation));
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	Representations : LIST  OF IfcRepresentation;
END_ENTITY;

ENTITY IfcProfileDef
 SUPERTYPE OF (ONEOF
	(IfcArbitraryClosedProfileDef
	,IfcOpenCrossProfileDef
	,IfcArbitraryOpenProfileDef
	,IfcCompositeProfileDef
	,IfcDerivedProfileDef
	,IfcParameterizedProfileDef));
	ProfileType : IfcProfileTypeEnum;
	ProfileName : OPTIONAL IfcLabel;
 INVERSE
	HasExternalReference : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
	HasProperties : SET  OF IfcProfileProperties FOR ProfileDefinition;
END_ENTITY;

ENTITY IfcProfileGate
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcProfileProperties
 SUBTYPE OF (IfcExtendedProperties);
	ProfileDefinition : IfcProfileDef;
END_ENTITY;

ENTITY IfcProject
 SUBTYPE OF (IfcContext);
 WHERE
	HasName : EXISTS(SELF\IfcRoot.Name);
	CorrectContext : NOT(EXISTS(SELF\IfcContext.RepresentationContexts)) OR
(SIZEOF(QUERY(Temp <* SELF\IfcContext.RepresentationContexts |
 'IFCREPRESENTATIONRESOURCE.IFCGEOMETRICREPRESENTATIONSUBCONTEXT' IN TYPEOF(Temp)
  )) = 0);
	NoDecomposition : SIZEOF(SELF\IfcObjectDefinition.Decomposes) = 0;
END_ENTITY;

ENTITY IfcProjectLibrary
 SUBTYPE OF (IfcContext);
END_ENTITY;

ENTITY IfcProjectOrder
 SUBTYPE OF (IfcControl);
	PredefinedType : OPTIONAL IfcProjectOrderTypeEnum;
	Status : OPTIONAL IfcLabel;
	LongDescription : OPTIONAL IfcText;
END_ENTITY;

ENTITY IfcProjectedCRS
 SUBTYPE OF (IfcCoordinateReferenceSystem);
	MapProjection : OPTIONAL IfcIdentifier;
	MapZone : OPTIONAL IfcIdentifier;
	MapUnit : OPTIONAL IfcNamedUnit;
 WHERE
	IsLengthUnit : NOT(EXISTS(MapUnit)) OR (MapUnit.UnitType = IfcUnitEnum.LENGTHUNIT);
END_ENTITY;

ENTITY IfcProjectionElement
 SUBTYPE OF (IfcFeatureElementAddition);
	PredefinedType : OPTIONAL IfcProjectionElementTypeEnum;
END_ENTITY;

ENTITY IfcProperty
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcComplexProperty
	,IfcSimpleProperty))
 SUBTYPE OF (IfcPropertyAbstraction);
	Name : IfcIdentifier;
	Description : OPTIONAL IfcText;
 INVERSE
	PartOfPset : SET  OF IfcPropertySet FOR HasProperties;
	PropertyForDependance : SET  OF IfcPropertyDependencyRelationship FOR DependingProperty;
	PropertyDependsOn : SET  OF IfcPropertyDependencyRelationship FOR DependantProperty;
	PartOfComplex : SET  OF IfcComplexProperty FOR HasProperties;
	HasConstraints : SET  OF IfcResourceConstraintRelationship FOR RelatedResourceObjects;
	HasApprovals : SET  OF IfcResourceApprovalRelationship FOR RelatedResourceObjects;
END_ENTITY;

ENTITY IfcPropertyAbstraction
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPropertyEnumeration
	,IfcProperty
	,IfcExtendedProperties
	,IfcPreDefinedProperties));
 INVERSE
	HasExternalReferences : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
END_ENTITY;

ENTITY IfcPropertyBoundedValue
 SUBTYPE OF (IfcSimpleProperty);
	UpperBoundValue : OPTIONAL IfcValue;
	LowerBoundValue : OPTIONAL IfcValue;
	Unit : OPTIONAL IfcUnit;
	SetPointValue : OPTIONAL IfcValue;
 WHERE
	SameUnitUpperLower : NOT(EXISTS(UpperBoundValue)) OR NOT(EXISTS(LowerBoundValue)) OR
(TYPEOF(UpperBoundValue) = TYPEOF(LowerBoundValue));
	SameUnitUpperSet : NOT(EXISTS(UpperBoundValue)) OR NOT(EXISTS(SetPointValue)) OR
(TYPEOF(UpperBoundValue) = TYPEOF(SetPointValue));
	SameUnitLowerSet : NOT(EXISTS(LowerBoundValue)) OR NOT(EXISTS(SetPointValue)) OR
(TYPEOF(LowerBoundValue) = TYPEOF(SetPointValue));
END_ENTITY;

ENTITY IfcPropertyDefinition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPropertyTemplateDefinition
	,IfcPropertySetDefinition))
 SUBTYPE OF (IfcRoot);
 INVERSE
	HasContext : SET [0:1] OF IfcRelDeclares FOR RelatedDefinitions;
	HasAssociations : SET  OF IfcRelAssociates FOR RelatedObjects;
END_ENTITY;

ENTITY IfcPropertyDependencyRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	DependingProperty : IfcProperty;
	DependantProperty : IfcProperty;
	Expression : OPTIONAL IfcText;
 WHERE
	NoSelfReference : DependingProperty :<>: DependantProperty;
END_ENTITY;

ENTITY IfcPropertyEnumeratedValue
 SUBTYPE OF (IfcSimpleProperty);
	EnumerationReference : OPTIONAL IfcPropertyEnumeration;
 WHERE
	WR21 : NOT(EXISTS(EnumerationReference)) 
OR  NOT(EXISTS(EnumerationValues)) 
OR  (SIZEOF(QUERY(temp <* EnumerationValues |
    temp IN EnumerationReference.EnumerationValues))
    = SIZEOF(EnumerationValues));
END_ENTITY;

ENTITY IfcPropertyEnumeration
 SUBTYPE OF (IfcPropertyAbstraction);
	Name : IfcLabel;
	Unit : OPTIONAL IfcUnit;
 WHERE
	WR01 : SIZEOF(QUERY(temp <* SELF.EnumerationValues | 
  NOT(TYPEOF(SELF.EnumerationValues[1]) = TYPEOF(temp))
  )) = 0;
 UNIQUE
	UR1 : Name;
END_ENTITY;

ENTITY IfcPropertyListValue
 SUBTYPE OF (IfcSimpleProperty);
	Unit : OPTIONAL IfcUnit;
 WHERE
	WR31 : SIZEOF(QUERY(temp <* SELF.ListValues | 
  NOT(TYPEOF(SELF.ListValues[1]) = TYPEOF(temp))
  )) = 0;
END_ENTITY;

ENTITY IfcPropertyReferenceValue
 SUBTYPE OF (IfcSimpleProperty);
	UsageName : OPTIONAL IfcText;
	PropertyReference : OPTIONAL IfcObjectReferenceSelect;
END_ENTITY;

ENTITY IfcPropertySet
 SUBTYPE OF (IfcPropertySetDefinition);
	HasProperties : SET  OF IfcProperty;
 WHERE
	ExistsName : EXISTS(SELF\IfcRoot.Name);
	UniquePropertyNames : IfcUniquePropertyName(HasProperties);
END_ENTITY;

ENTITY IfcPropertySetDefinition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcQuantitySet
	,IfcPropertySet
	,IfcPreDefinedPropertySet))
 SUBTYPE OF (IfcPropertyDefinition);
 INVERSE
	DefinesType : SET  OF IfcTypeObject FOR HasPropertySets;
	IsDefinedBy : SET  OF IfcRelDefinesByTemplate FOR RelatedPropertySets;
	DefinesOccurrence : SET  OF IfcRelDefinesByProperties FOR RelatingPropertyDefinition;
END_ENTITY;

ENTITY IfcPropertySetTemplate
 SUBTYPE OF (IfcPropertyTemplateDefinition);
	TemplateType : OPTIONAL IfcPropertySetTemplateTypeEnum;
	ApplicableEntity : OPTIONAL IfcIdentifier;
	HasPropertyTemplates : SET  OF IfcPropertyTemplate;
 INVERSE
	Defines : SET  OF IfcRelDefinesByTemplate FOR RelatingTemplate;
 WHERE
	ExistsName : EXISTS(SELF\IfcRoot.Name);
	UniquePropertyNames : IfcUniquePropertyTemplateNames(HasPropertyTemplates);
END_ENTITY;

ENTITY IfcPropertySingleValue
 SUBTYPE OF (IfcSimpleProperty);
	NominalValue : OPTIONAL IfcValue;
	Unit : OPTIONAL IfcUnit;
END_ENTITY;

ENTITY IfcPropertyTableValue
 SUBTYPE OF (IfcSimpleProperty);
	Expression : OPTIONAL IfcText;
	DefiningUnit : OPTIONAL IfcUnit;
	DefinedUnit : OPTIONAL IfcUnit;
	CurveInterpolation : OPTIONAL IfcCurveInterpolationEnum;
 WHERE
	WR21 : (NOT(EXISTS(DefiningValues)) AND NOT(EXISTS(DefinedValues)))
OR (SIZEOF(DefiningValues) = SIZEOF(DefinedValues));
	WR22 : NOT(EXISTS(DefiningValues)) OR 
(SIZEOF(QUERY(temp <* SELF.DefiningValues | TYPEOF(temp) <> TYPEOF(SELF.DefiningValues[1])
)) = 0);
	WR23 : NOT(EXISTS(DefinedValues)) OR 
(SIZEOF(QUERY(temp <* SELF.DefinedValues | TYPEOF(temp) <> TYPEOF(SELF.DefinedValues[1])
)) = 0);
END_ENTITY;

ENTITY IfcPropertyTemplate
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcComplexPropertyTemplate
	,IfcSimplePropertyTemplate))
 SUBTYPE OF (IfcPropertyTemplateDefinition);
 INVERSE
	PartOfComplexTemplate : SET  OF IfcComplexPropertyTemplate FOR HasPropertyTemplates;
	PartOfPsetTemplate : SET  OF IfcPropertySetTemplate FOR HasPropertyTemplates;
END_ENTITY;

ENTITY IfcPropertyTemplateDefinition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPropertyTemplate
	,IfcPropertySetTemplate))
 SUBTYPE OF (IfcPropertyDefinition);
END_ENTITY;

ENTITY IfcProtectionBoxOutoor
 SUBTYPE OF (IfcBox);
END_ENTITY;

ENTITY IfcProtectionElement
 SUPERTYPE OF (ONEOF
	(IfcSignAndSignal
	,IfcLightningArrester
	,IfcInsulator
	,IfcHighVoltageFuse
	,IfcLightningProtectionCable
	,IfcVaristor
	,IfcRigidCatenaryProtectiveSheath
	,IfcProtectiveBoarding
	,IfcVoltageLimiter
	,IfcSparkGap
	,IfcCommonProtectingFacility));
END_ENTITY;

ENTITY IfcProtectiveBarrier
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcProtectiveBoarding
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcProtectiveCanope
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcProtectiveDevice
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcProtectiveDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcProtectiveDeviceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcProtectiveDeviceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCPROTECTIVEDEVICETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcProtectiveDeviceTrippingUnit
 SUBTYPE OF (IfcDistributionControlElement);
	PredefinedType : OPTIONAL IfcProtectiveDeviceTrippingUnitTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCPROTECTIVEDEVICETRIPPINGUNITTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcProtectiveDeviceTrippingUnitType
 SUBTYPE OF (IfcDistributionControlElementType);
	PredefinedType : IfcProtectiveDeviceTrippingUnitTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED) OR
((PredefinedType = IfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcProtectiveDeviceType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcProtectiveDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcProtectiveDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcProtectiveDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcProtectiveObstacle
 SUBTYPE OF (IfcCommonProtectingFacility);
END_ENTITY;

ENTITY IfcProtectivePlates
 SUBTYPE OF (IfcSignAndSignal);
END_ENTITY;

ENTITY IfcProxy
 SUBTYPE OF (IfcProduct);
	ProxyType : IfcObjectTypeEnum;
	Tag : OPTIONAL IfcLabel;
 WHERE
	WR1 : EXISTS(SELF\IfcRoot.Name);
END_ENTITY;

ENTITY IfcPsetBridgecommon;
	StructureIndicator : IfcLabel;
END_ENTITY;

ENTITY IfcPsetBuiltelementcommon;
	FireRating : IfcLabel;
	IsExternal : IfcBoolean;
	LoadBearing : IfcBoolean;
	ThermalTransmittance : IfcThermalTransmittanceMeasure;
END_ENTITY;

ENTITY IfcPsetCivilelementcommon;
	Status : IfcLabel;
END_ENTITY;

ENTITY IfcPsetElementassemblycommon;
	Status : IfcLabel;
END_ENTITY;

ENTITY IfcPsetElementcommon;
	Reference : IfcIdentifier;
	Status : IfcLabel;
END_ENTITY;

ENTITY IfcPsetOccurrencedriven;
END_ENTITY;

ENTITY IfcPsetPerformancedriven;
END_ENTITY;

ENTITY IfcPsetSensortypefrostsensor;
	SetPointFrost : IfcPositiveRatioMeasure;
END_ENTITY;

ENTITY IfcPsetSensortypeidentifiersensor;
	SetPointIdentifier : IfcIdentifier;
END_ENTITY;

ENTITY IfcPsetSpatialzonecommon;
	IsExternal : IfcBoolean;
END_ENTITY;

ENTITY IfcPsetTypedrivenonly;
END_ENTITY;

ENTITY IfcPsetTypedrivenoverride;
END_ENTITY;

ENTITY IfcPump
 SUBTYPE OF (IfcFlowMovingDevice);
	PredefinedType : OPTIONAL IfcPumpTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcPumpTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcPumpTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCPUMPTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcPumpType
 SUBTYPE OF (IfcFlowMovingDeviceType);
	PredefinedType : IfcPumpTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcPumpTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPumpTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcPushButton
 SUBTYPE OF (IfcLocalOperationDevice);
END_ENTITY;

ENTITY IfcQArea;
END_ENTITY;

ENTITY IfcQComplex;
END_ENTITY;

ENTITY IfcQCount;
END_ENTITY;

ENTITY IfcQLength;
END_ENTITY;

ENTITY IfcQTime;
END_ENTITY;

ENTITY IfcQVolume;
END_ENTITY;

ENTITY IfcQWeight;
END_ENTITY;

ENTITY IfcQtoActuatorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoAirterminalbasequantities;
	GrossWeight : IfcQWeight;
	Perimeter : IfcQLength;
	TotalSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoAirterminalboxtypebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoAirtoairheatrecoverybasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoAlarmbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoAudiovisualappliancebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoBeambasequantities;
	CrossSectionArea : IfcQArea;
	GrossSurfaceArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetSurfaceArea : IfcQArea;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoBoilerbasequantities;
	GrossWeight : IfcQWeight;
	NetWeight : IfcQWeight;
	TotalSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoBuildingbasequantities;
	EavesHeight : IfcQLength;
	FootprintArea : IfcQArea;
	GrossFloorArea : IfcQArea;
	GrossVolume : IfcQVolume;
	Height : IfcQLength;
	NetFloorArea : IfcQArea;
	NetVolume : IfcQVolume;
END_ENTITY;

ENTITY IfcQtoBuildingelementproxyquantities;
	NetSurfaceArea : IfcQCount;
	NetVolume : IfcQCount;
END_ENTITY;

ENTITY IfcQtoBuildingstoreybasequantities;
	GrossFloorArea : IfcQArea;
	GrossHeight : IfcQLength;
	GrossPerimeter : IfcQLength;
	GrossVolume : IfcQVolume;
	NetFloorArea : IfcQArea;
	NetHeigtht : IfcQLength;
	NetVolume : IfcQVolume;
END_ENTITY;

ENTITY IfcQtoBurnerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCablecarrierfittingbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCablecarriersegmentbasequantities;
	CrossSectionArea : IfcQArea;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoCablefittingbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCablesegmentbasequantities;
	CrossSectionArea : IfcQArea;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoChillerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoChimneybasequantities;
	Length : IfcQLength;
END_ENTITY;

ENTITY IfcQtoCoilbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoColumnbasequantities;
	CrossSectionArea : IfcQArea;
	GrossSurfaceArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetSurfaceArea : IfcQArea;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoCommunicationsappliancebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCompressorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCondenserbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoConstructionequipmentresourcebasequantities;
	OperatingTime : IfcQTime;
	UsageTime : IfcQTime;
END_ENTITY;

ENTITY IfcQtoConstructionmaterialresourcebasequantities;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoControllerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCooledbeambasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCoolingtowerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoCoveringbasequantities;
	GrossArea : IfcQArea;
	NetArea : IfcQArea;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoCurtainwallquantities;
	GrossSideArea : IfcQArea;
	Height : IfcQLength;
	Length : IfcQLength;
	NetSideArea : IfcQArea;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoDamperbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoDistributionboardbasequantities;
	GrossWeight : IfcQWeight;
	NumberOfCircuits : IfcQCount;
END_ENTITY;

ENTITY IfcQtoDistributionchamberelementbasequantities;
	GrossSurfaceArea : IfcQArea;
	GrossVolume : IfcQVolume;
	NetSurfaceArea : IfcQArea;
	NetVolume : IfcQVolume;
END_ENTITY;

ENTITY IfcQtoDoorbasequantities;
	Area : IfcQArea;
	Height : IfcQLength;
	Perimeter : IfcQLength;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoDuctfittingbasequantities;
	GrossCrossSectionArea : IfcQArea;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetCrossSectionArea : IfcQArea;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoDuctsegmentbasequantities;
	GrossCrossSectionArea : IfcQArea;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetCrossSectionArea : IfcQArea;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoDuctsilencerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoElectricappliancebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoElectricflowstoragedevicebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoElectricgeneratorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoElectricmotorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoElectrictimecontrolbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoEvaporativecoolerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoEvaporatorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoFanbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoFilterbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoFiresuppressionterminalbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoFlowinstrumentbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoFlowmeterbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoFootingbasequantities;
	CrossSectionArea : IfcQArea;
	GrossSurfaceArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	Height : IfcQLength;
	Length : IfcQLength;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	OuterSurfaceArea : IfcQArea;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoHeatexchangerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoHumidifierbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoInterceptorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoJunctionboxbasequantities;
	GrossWeight : IfcQWeight;
	NumberOfGangs : IfcQCount;
END_ENTITY;

ENTITY IfcQtoLaborresourcebasequantities;
	OvertimeWork : IfcQTime;
	StandardWork : IfcQTime;
END_ENTITY;

ENTITY IfcQtoLampbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoLightfixturebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoMemberbasequantities;
	CrossSectionArea : IfcQArea;
	GrossSurfaceArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetSurfaceArea : IfcQArea;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoMotorconnectionbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoOccurrencedriven;
END_ENTITY;

ENTITY IfcQtoOpeningelementbasequantities;
	Area : IfcQArea;
	Depth : IfcQLength;
	Height : IfcQLength;
	Volume : IfcQVolume;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoOutletbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoPilebasequantities;
	CrossSectionArea : IfcQArea;
	GrossSurfaceArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoPipefittingbasequantities;
	GrossCrossSectionArea : IfcQArea;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetCrossSectionArea : IfcQArea;
	NetWeight : IfcQWeight;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoPipesegmentbasequantities;
	GrossCrossSectionArea : IfcQArea;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetCrossSectionArea : IfcQArea;
	NetWeight : IfcQWeight;
	OuterSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoPlatebasequantities;
	GrossArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	NetArea : IfcQArea;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	Perimeter : IfcQLength;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoProjectionelementbasequantities;
	Area : IfcQArea;
	Volume : IfcQVolume;
END_ENTITY;

ENTITY IfcQtoProtectivedevicebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoProtectivedevicetrippingunitbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoPumpbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoRailingbasequantities;
	Length : IfcQLength;
END_ENTITY;

ENTITY IfcQtoRampflightbasequantities;
	GrossArea : IfcQArea;
	GrossVolume : IfcQVolume;
	Length : IfcQLength;
	NetArea : IfcQArea;
	NetVolume : IfcQVolume;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoReinforcingelementbasequantities;
	Count : IfcQCount;
	Length : IfcQLength;
	Weight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoRoofbasequantities;
	GrossArea : IfcQArea;
	NetArea : IfcQArea;
	ProjectedArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoSanitaryterminalbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoSensorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoSitebasequantities;
	GrossArea : IfcQArea;
	GrossPerimeter : IfcQLength;
END_ENTITY;

ENTITY IfcQtoSlabbasequantities;
	Depth : IfcQLength;
	GrossArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetArea : IfcQArea;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	Perimeter : IfcQLength;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoSolardevicebasequantities;
	GrossArea : IfcQArea;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoSpacebasequantities;
	FinishCeilingHeight : IfcQLength;
	FinishFloorHeight : IfcQLength;
	GrossCeilingArea : IfcQArea;
	GrossFloorArea : IfcQArea;
	GrossPerimeter : IfcQLength;
	GrossVolume : IfcQVolume;
	GrossWallArea : IfcQArea;
	Height : IfcQLength;
	NetCeilingArea : IfcQArea;
	NetFloorArea : IfcQArea;
	NetPerimeter : IfcQLength;
	NetVolume : IfcQVolume;
	NetWallArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoSpaceheaterbasequantities;
	GrossWeight : IfcQWeight;
	Length : IfcQLength;
	NetWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoStackterminalbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoStairflightbasequantities;
	GrossVolume : IfcQVolume;
	Length : IfcQLength;
	NetVolume : IfcQVolume;
END_ENTITY;

ENTITY IfcQtoSwitchingdevicebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoTankbasequantities;
	GrossWeight : IfcQWeight;
	NetWeight : IfcQWeight;
	TotalSurfaceArea : IfcQArea;
END_ENTITY;

ENTITY IfcQtoTransformerbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoTubebundlebasequantities;
	GrossWeight : IfcQWeight;
	NetWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoTypedrivenonly;
END_ENTITY;

ENTITY IfcQtoTypedrivenoverride;
END_ENTITY;

ENTITY IfcQtoUnitarycontrolelementbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoUnitaryequipmentbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoValvebasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoVibrationisolatorbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoWallbasequantities;
	GrossFootprintArea : IfcQArea;
	GrossSideArea : IfcQArea;
	GrossVolume : IfcQVolume;
	GrossWeight : IfcQWeight;
	Height : IfcQLength;
	Length : IfcQLength;
	NetFootprintArea : IfcQArea;
	NetSideArea : IfcQArea;
	NetVolume : IfcQVolume;
	NetWeight : IfcQWeight;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQtoWasteterminalbasequantities;
	GrossWeight : IfcQWeight;
END_ENTITY;

ENTITY IfcQtoWindowbasequantities;
	Area : IfcQArea;
	Height : IfcQLength;
	Perimeter : IfcQLength;
	Width : IfcQLength;
END_ENTITY;

ENTITY IfcQuantityArea
 SUBTYPE OF (IfcPhysicalSimpleQuantity);
	AreaValue : IfcAreaMeasure;
	Formula : OPTIONAL IfcLabel;
 WHERE
	WR21 : NOT(EXISTS(SELF\IfcPhysicalSimpleQuantity.Unit)) OR
   (SELF\IfcPhysicalSimpleQuantity.Unit.UnitType = IfcUnitEnum.AREAUNIT);
	WR22 : AreaValue >= 0.;
END_ENTITY;

ENTITY IfcQuantityCount
 SUBTYPE OF (IfcPhysicalSimpleQuantity);
	CountValue : IfcCountMeasure;
	Formula : OPTIONAL IfcLabel;
 WHERE
	WR21 : CountValue >= 0.;
END_ENTITY;

ENTITY IfcQuantityLength
 SUBTYPE OF (IfcPhysicalSimpleQuantity);
	LengthValue : IfcLengthMeasure;
	Formula : OPTIONAL IfcLabel;
 WHERE
	WR21 : NOT(EXISTS(SELF\IfcPhysicalSimpleQuantity.Unit)) OR
   (SELF\IfcPhysicalSimpleQuantity.Unit.UnitType = IfcUnitEnum.LENGTHUNIT);
	WR22 : LengthValue >= 0.;
END_ENTITY;

ENTITY IfcQuantitySet
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcElementQuantity))
 SUBTYPE OF (IfcPropertySetDefinition);
END_ENTITY;

ENTITY IfcQuantityTime
 SUBTYPE OF (IfcPhysicalSimpleQuantity);
	TimeValue : IfcTimeMeasure;
	Formula : OPTIONAL IfcLabel;
 WHERE
	WR21 : NOT(EXISTS(SELF\IfcPhysicalSimpleQuantity.Unit)) OR
   (SELF\IfcPhysicalSimpleQuantity.Unit.UnitType = IfcUnitEnum.TIMEUNIT);
	WR22 : TimeValue >= 0.;
END_ENTITY;

ENTITY IfcQuantityVolume
 SUBTYPE OF (IfcPhysicalSimpleQuantity);
	VolumeValue : IfcVolumeMeasure;
	Formula : OPTIONAL IfcLabel;
 WHERE
	WR21 : NOT(EXISTS(SELF\IfcPhysicalSimpleQuantity.Unit)) OR
   (SELF\IfcPhysicalSimpleQuantity.Unit.UnitType = IfcUnitEnum.VOLUMEUNIT);
	WR22 : VolumeValue >= 0.;
END_ENTITY;

ENTITY IfcQuantityWeight
 SUBTYPE OF (IfcPhysicalSimpleQuantity);
	WeightValue : IfcMassMeasure;
	Formula : OPTIONAL IfcLabel;
 WHERE
	WR21 : NOT(EXISTS(SELF\IfcPhysicalSimpleQuantity.Unit)) OR
   (SELF\IfcPhysicalSimpleQuantity.Unit.UnitType = IfcUnitEnum.MASSUNIT);
	WR22 : WeightValue >= 0.;
END_ENTITY;

ENTITY IfcRack
 SUPERTYPE OF (ONEOF
	(IfcSubrack))
 SUBTYPE OF (IfcTelecomCasingElements);
END_ENTITY;

ENTITY IfcRackRail
	Design : IfcRackRailDesign;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Located in the Turnout panel : IfcNewCoordinatesLocal;
	Location of rack-rail end : IfcNewDistancePositive0;
	Location of rack-rail entrance : IfcNewDistanceNonNegative0;
	Manufacturing date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation date : IfcDate;
	Track edge : IfcIdentifier;
	Type : IfcRackRailType;
	Type of entrance : IfcRackRailDesign;
	Type of exit : IfcRackRailDesign;
END_ENTITY;

ENTITY IfcRail
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : IfcRailTypeEnum;
END_ENTITY;

ENTITY IfcRail
	Delivery state : IfcRailDeliveryStates;
	Disassembly date : IfcDate;
	Installation Date : IfcDate;
	Length of elementary rail : IfcRailManufacturingLength;
	Located in the panel : IfcNewCoordinatesLocal;
	Manufacturing date : IfcDate;
	Milling plant : IfcMillingPlant;
	Milling year : IfcNewYear;
	Minimum tensile strength : IfcNewStrength;
	Position : IfcTrackFromTo;
	Processing Status of the end : IfcTbd;
	Putting into operation date : IfcDate;
	Rail inclination : IfcReal;
	Rail installation : IfcRailInstallation;
	Rail profile : IfcRailProfile;
	Relative Position : IfcRelativePosition;
	Reused Rail : IfcBoolean;
	Stainless : IfcBoolean;
	Steel grade : IfcRailSteelGrade;
	Technical Standard / Norm : IfcTechnicalStandard;
	Track / Turnout panel : IfcIdentifier;
	Track edge : IfcIdentifier;
END_ENTITY;

ENTITY IfcRailBrace
 SUBTYPE OF (IfcAbsTrackStrengthening);
	Design Type : IfcTbd;
	Disassembly date : IfcDate;
	Fastening : IfcIdentifier;
	Installation date : IfcDate;
	Location in the panel : IfcNewCoordinatesLocal;
	Manufacturing date : IfcDate;
	Purpose : IfcText;
	Putting into operation date : IfcDate;
END_ENTITY;

ENTITY IfcRailClamp
 SUBTYPE OF (IfcAbsTrackStrengtheningEquipment);
END_ENTITY;

ENTITY IfcRailJointBond;
END_ENTITY;

ENTITY IfcRailPads;
	Design : IfcTbd;
	Disassembly date : IfcDate;
	Installation date : IfcDate;
	Manufacturing date : IfcDate;
	Putting into operation date : IfcDate;
	Rail fastening : IfcIdentifier;
	Type : IfcRailPadsType;
END_ENTITY;

ENTITY IfcRailType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcRailTypeEnum;
END_ENTITY;

ENTITY IfcRailing
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcRailingTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcRailingTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcRailingTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCRAILINGTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcRailingType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcRailingTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcRailingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcRailingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcRailway
 SUBTYPE OF (IfcFacility);
END_ENTITY;

ENTITY IfcRailway
 SUBTYPE OF (IfcRailwayfacility);
END_ENTITY;

ENTITY IfcRailwayAlignmentCant
 SUBTYPE OF (IfcAlignmentLateralInclination);
	Rotation axis : IfcEnum;
	Track Gauge : IfcInt;
END_ENTITY;

ENTITY IfcRailwayCrossing
 SUBTYPE OF (IfcAbsTrackCovering);
	Accessible by vehicle : IfcBoolean;
	Angle : IfcNewRealNonNegative0;
	Backup : IfcBoolean;
	Contract : IfcIdentifier;
	Crossing of : IfcRailwayCrossingTypeOfCrossing;
	Disassembly Date : IfcDate;
	Drainage : IfcBoolean;
	Height of guard strand : IfcNewRealPositive0;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Name / Town/City : IfcText;
	Permanent way slab material : IfcRailwayCrossingPermanentWaySlabMaterial;
	Position : IfcTrackFromTo;
	Private Ownership : IfcBoolean;
	Putting into operation Date : IfcDate;
	Rail barrier distance : IfcReal;
	Rated Load : IfcReal;
	Relative Position : IfcRelativePosition;
	Road Owner : IfcOwner;
	Road signaling system : IfcRailwayCrossingRoadSignalingSystem;
	Special Route : IfcBoolean;
	Structure gauge : IfcStructureGauge;
	Track edge : IfcIdentifier;
	Traffic intensity : IfcReal;
	Type : IfcRailwayCrossingType;
	Width : IfcNewRealPositive0;
END_ENTITY;

ENTITY IfcRailwayDetonator
 SUBTYPE OF (IfcTrainProtectionEquipment);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcRailwayDiscretizedPoint
 SUBTYPE OF (IfcDiscretizedPoint);
	Azimuth of Cant : IfcDouble;
	Cant left : IfcDouble;
	Cant right : IfcDouble;
	Line Kilometer : IfcFloat;
END_ENTITY;

ENTITY IfcRailwayElement
 SUPERTYPE OF (ONEOF
	(IfcSignallingElement));
END_ENTITY;

ENTITY IfcRailwayEnergyFacility
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcOverheadEnergyFacility
	,IfcPowerSupplyFacilitySpatialStructure))
 SUBTYPE OF (IfcRailwayfacility);
END_ENTITY;

ENTITY IfcRailwayOperationalTelephone
 SUBTYPE OF (IfcTelephone);
END_ENTITY;

ENTITY IfcRailwayReservedVolume
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSignallingReservedVolume
	,IfcTelecomReservedVolume
	,IfcEnergyReservedVolume));
END_ENTITY;

ENTITY IfcRailwaySelfServiceIdentityVerificationGate
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcRailwayShelter
 SUBTYPE OF (IfcRailwayfacility);
END_ENTITY;

ENTITY IfcRailwayfacility
 SUPERTYPE OF (ONEOF
	(IfcRailway
	,IfcRailwayEnergyFacility
	,IfcRailwayShelter));
END_ENTITY;

ENTITY IfcRailwayspatialzone;
END_ENTITY;

ENTITY IfcRainGauge
 SUBTYPE OF (IfcSensor);
END_ENTITY;

ENTITY IfcRamp
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcRampTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcRampTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcRampTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCRAMPTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcRampFlight
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcRampFlightTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcRampFlightTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcRampFlightTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCRAMPFLIGHTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcRampFlightType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcRampFlightTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcRampFlightTypeEnum.USERDEFINED) OR
((PredefinedType = IfcRampFlightTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcRampType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcRampTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcRampTypeEnum.USERDEFINED) OR
((PredefinedType = IfcRampTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcRationalBSplineCurveWithKnots
 SUBTYPE OF (IfcBSplineCurveWithKnots);
 DERIVE
	Weights : ARRAY [0:UpperIndexOnControlPoints] OF IfcReal := IfcListToArray(WeightsData,0,SELF\IfcBSplineCurve.UpperIndexOnControlPoints);
 WHERE
	SameNumOfWeightsAndPoints : SIZEOF(WeightsData) = SIZEOF(SELF\IfcBSplineCurve.ControlPointsList);
	WeightsGreaterZero : IfcCurveWeightsPositive(SELF);
END_ENTITY;

ENTITY IfcRationalBSplineSurfaceWithKnots
 SUBTYPE OF (IfcBSplineSurfaceWithKnots);
 DERIVE
	Weights : ARRAY [0:UUpper] OF ARRAY [0:VUpper] OF IfcReal := IfcMakeArrayOfArray(WeightsData,0,UUpper,0,VUpper);
 WHERE
	CorrespondingWeightsDataLists : (SIZEOF(WeightsData) = SIZEOF(SELF\IfcBSplineSurface.ControlPointsList))
AND 
(SIZEOF(WeightsData[1]) = SIZEOF(SELF\IfcBSplineSurface.ControlPointsList[1]));
	WeightValuesGreaterZero : IfcSurfaceWeightsPositive(SELF);
END_ENTITY;

ENTITY IfcRbcHostCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcRbcInterfaceCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcRearEquipmentAccessZone
 SUBTYPE OF (IfcEquipmentAccessZone);
END_ENTITY;

ENTITY IfcRearSidePort;
END_ENTITY;

ENTITY IfcRecordingEquipment
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcRectangleHollowProfileDef
 SUBTYPE OF (IfcRectangleProfileDef);
	WallThickness : IfcPositiveLengthMeasure;
	InnerFilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	OuterFilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
 WHERE
	ValidWallThickness : (WallThickness < (SELF\IfcRectangleProfileDef.XDim/2.)) AND 
(WallThickness < (SELF\IfcRectangleProfileDef.YDim/2.));
	ValidInnerRadius : NOT(EXISTS(InnerFilletRadius)) OR 
((InnerFilletRadius <= (SELF\IfcRectangleProfileDef.XDim/2. - WallThickness)) AND 
 (InnerFilletRadius <= (SELF\IfcRectangleProfileDef.YDim/2. - WallThickness)))
;
	ValidOuterRadius : NOT(EXISTS(OuterFilletRadius)) OR 
((OuterFilletRadius <= (SELF\IfcRectangleProfileDef.XDim/2.)) AND 
 (OuterFilletRadius <= (SELF\IfcRectangleProfileDef.YDim/2.)));
END_ENTITY;

ENTITY IfcRectangleProfileDef
 SUPERTYPE OF (ONEOF
	(IfcRectangleHollowProfileDef
	,IfcRoundedRectangleProfileDef))
 SUBTYPE OF (IfcParameterizedProfileDef);
	XDim : IfcPositiveLengthMeasure;
	YDim : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcRectangularPyramid
 SUBTYPE OF (IfcCsgPrimitive3D);
	XLength : IfcPositiveLengthMeasure;
	YLength : IfcPositiveLengthMeasure;
	Height : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcRectangularTrimmedSurface
 SUBTYPE OF (IfcBoundedSurface);
	BasisSurface : IfcSurface;
	U1 : IfcParameterValue;
	V1 : IfcParameterValue;
	U2 : IfcParameterValue;
	V2 : IfcParameterValue;
	Usense : IfcBoolean;
	Vsense : IfcBoolean;
 WHERE
	U1AndU2Different : U1 <> U2;
	V1AndV2Different : V1 <> V2;
	UsenseCompatible : (('IFCGEOMETRYRESOURCE.IFCELEMENTARYSURFACE' IN TYPEOF(BasisSurface)) AND
         (NOT ('IFCGEOMETRYRESOURCE.IFCPLANE' IN TYPEOF(BasisSurface)))) OR
         ('IFCGEOMETRYRESOURCE.IFCSURFACEOFREVOLUTION' IN TYPEOF(BasisSurface)) OR
         (Usense = (U2 > U1));
	VsenseCompatible : Vsense = (V2 > V1);
END_ENTITY;

ENTITY IfcRectifier
 SUBTYPE OF (IfcElectricPowerConverter);
END_ENTITY;

ENTITY IfcRectifierSubstation
 SUBTYPE OF (IfcSubstation);
END_ENTITY;

ENTITY IfcRecurrencePattern;
	RecurrenceType : IfcRecurrenceTypeEnum;
	Position : OPTIONAL IfcInteger;
	Interval : OPTIONAL IfcInteger;
	Occurrences : OPTIONAL IfcInteger;
	TimePeriods : OPTIONAL LIST  OF IfcTimePeriod;
END_ENTITY;

ENTITY IfcRedundantArrayOfIndependentDisk
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcReference;
	TypeIdentifier : OPTIONAL IfcIdentifier;
	AttributeIdentifier : OPTIONAL IfcIdentifier;
	InstanceName : OPTIONAL IfcLabel;
	InnerReference : OPTIONAL IfcReference;
END_ENTITY;

ENTITY IfcReferenceOnTrackNode;
	Track-Node-ID : IfcText;
END_ENTITY;

ENTITY IfcReferent
 SUBTYPE OF (IfcPositioningElement);
	PredefinedType : OPTIONAL IfcReferentTypeEnum;
	RestartDistance : OPTIONAL IfcLengthMeasure;
END_ENTITY;

ENTITY IfcRegistrationFitting
 SUBTYPE OF (IfcOcsFitting);
END_ENTITY;

ENTITY IfcRegularTimeSeries
 SUBTYPE OF (IfcTimeSeries);
	TimeStep : IfcTimeMeasure;
	Values : LIST  OF IfcTimeSeriesValue;
END_ENTITY;

ENTITY IfcRegulatingDevices;
END_ENTITY;

ENTITY IfcReinforcedSoil
 SUBTYPE OF (IfcEarthworksElement);
	PredefinedType : IfcReinforcedSoilTypeEnum;
END_ENTITY;

ENTITY IfcReinforcementBarProperties
 SUBTYPE OF (IfcPreDefinedProperties);
	TotalCrossSectionArea : IfcAreaMeasure;
	SteelGrade : IfcLabel;
	BarSurface : OPTIONAL IfcReinforcingBarSurfaceEnum;
	EffectiveDepth : OPTIONAL IfcLengthMeasure;
	NominalBarDiameter : OPTIONAL IfcPositiveLengthMeasure;
	BarCount : OPTIONAL IfcCountMeasure;
END_ENTITY;

ENTITY IfcReinforcementDefinitionProperties
 SUBTYPE OF (IfcPreDefinedPropertySet);
	DefinitionType : OPTIONAL IfcLabel;
	ReinforcementSectionDefinitions : LIST  OF IfcSectionReinforcementProperties;
END_ENTITY;

ENTITY IfcReinforcingBar
 SUBTYPE OF (IfcReinforcingElement);
	NominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	CrossSectionArea : OPTIONAL IfcAreaMeasure;
	BarLength : OPTIONAL IfcPositiveLengthMeasure;
	PredefinedType : OPTIONAL IfcReinforcingBarTypeEnum;
	BarSurface : OPTIONAL IfcReinforcingBarSurfaceEnum;
 WHERE
	CorrectPredefinedType : NOT EXISTS(PredefinedType) OR
(PredefinedType <> IfcReinforcingBarTypeEnum.USERDEFINED) OR
((PredefinedType = IfcReinforcingBarTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType))
;
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSTRUCTURALELEMENTSDOMAIN.IFCREINFORCINGBARTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcReinforcingBarType
 SUBTYPE OF (IfcReinforcingElementType);
	PredefinedType : IfcReinforcingBarTypeEnum;
	NominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	CrossSectionArea : OPTIONAL IfcAreaMeasure;
	BarLength : OPTIONAL IfcPositiveLengthMeasure;
	BarSurface : OPTIONAL IfcReinforcingBarSurfaceEnum;
	BendingShapeCode : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcReinforcingBarTypeEnum.USERDEFINED) OR
((PredefinedType = IfcReinforcingBarTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
	BendingShapeCodeProvided : NOT EXISTS(BendingParameters) OR EXISTS(BendingShapeCode);
END_ENTITY;

ENTITY IfcReinforcingElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTendonAnchor
	,IfcTendonConduit
	,IfcReinforcingMesh
	,IfcTendon
	,IfcReinforcingBar))
 SUBTYPE OF (IfcElementComponent);
	SteelGrade : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcReinforcingElementType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTendonAnchorType
	,IfcTendonConduitType
	,IfcReinforcingBarType
	,IfcReinforcingMeshType
	,IfcTendonType))
 SUBTYPE OF (IfcElementComponentType);
END_ENTITY;

ENTITY IfcReinforcingFeeder
 SUBTYPE OF (IfcFeederLine);
END_ENTITY;

ENTITY IfcReinforcingMesh
 SUBTYPE OF (IfcReinforcingElement);
	MeshLength : OPTIONAL IfcPositiveLengthMeasure;
	MeshWidth : OPTIONAL IfcPositiveLengthMeasure;
	LongitudinalBarNominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	TransverseBarNominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	LongitudinalBarCrossSectionArea : OPTIONAL IfcAreaMeasure;
	TransverseBarCrossSectionArea : OPTIONAL IfcAreaMeasure;
	LongitudinalBarSpacing : OPTIONAL IfcPositiveLengthMeasure;
	TransverseBarSpacing : OPTIONAL IfcPositiveLengthMeasure;
	PredefinedType : OPTIONAL IfcReinforcingMeshTypeEnum;
 WHERE
	CorrectPredefinedType : NOT EXISTS(PredefinedType) OR
(PredefinedType <> IfcReinforcingMeshTypeEnum.USERDEFINED) OR
((PredefinedType = IfcReinforcingMeshTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSTRUCTURALELEMENTSDOMAIN.IFCREINFORCINGMESHTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType))
;
END_ENTITY;

ENTITY IfcReinforcingMeshType
 SUBTYPE OF (IfcReinforcingElementType);
	PredefinedType : IfcReinforcingMeshTypeEnum;
	MeshLength : OPTIONAL IfcPositiveLengthMeasure;
	MeshWidth : OPTIONAL IfcPositiveLengthMeasure;
	LongitudinalBarNominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	TransverseBarNominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	LongitudinalBarCrossSectionArea : OPTIONAL IfcAreaMeasure;
	TransverseBarCrossSectionArea : OPTIONAL IfcAreaMeasure;
	LongitudinalBarSpacing : OPTIONAL IfcPositiveLengthMeasure;
	TransverseBarSpacing : OPTIONAL IfcPositiveLengthMeasure;
	BendingShapeCode : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcReinforcingMeshTypeEnum.USERDEFINED) OR
((PredefinedType = IfcReinforcingMeshTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
	BendingShapeCodeProvided : NOT EXISTS(BendingParameters) OR EXISTS(BendingShapeCode);
END_ENTITY;

ENTITY IfcRelAggregates
 SUBTYPE OF (IfcRelDecomposes);
	RelatingObject : IfcObjectDefinition;
	RelatedObjects : SET  OF IfcObjectDefinition;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* RelatedObjects | RelatingObject :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssigns
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRelAssignsToResource
	,IfcRelAssignsToProduct
	,IfcRelAssignsToProcess
	,IfcRelAssignsToGroup
	,IfcRelAssignsToControl
	,IfcRelAssignsToActor))
 SUBTYPE OF (IfcRelationship);
	RelatedObjects : SET  OF IfcObjectDefinition;
	RelatedObjectsType : OPTIONAL IfcObjectTypeEnum;
 WHERE
	WR1 : IfcCorrectObjectAssignment(RelatedObjectsType, RelatedObjects);
END_ENTITY;

ENTITY IfcRelAssignsToActor
 SUBTYPE OF (IfcRelAssigns);
	RelatingActor : IfcActor;
	ActingRole : OPTIONAL IfcActorRole;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* SELF\IfcRelAssigns.RelatedObjects | RelatingActor :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssignsToControl
 SUBTYPE OF (IfcRelAssigns);
	RelatingControl : IfcControl;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* SELF\IfcRelAssigns.RelatedObjects | RelatingControl :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssignsToGroup
 SUPERTYPE OF (ONEOF
	(IfcRelAssignsToGroupByFactor))
 SUBTYPE OF (IfcRelAssigns);
	RelatingGroup : IfcGroup;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* SELF\IfcRelAssigns.RelatedObjects | RelatingGroup :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssignsToGroupByFactor
 SUBTYPE OF (IfcRelAssignsToGroup);
	Factor : IfcRatioMeasure;
END_ENTITY;

ENTITY IfcRelAssignsToProcess
 SUBTYPE OF (IfcRelAssigns);
	RelatingProcess : IfcProcessSelect;
	QuantityInProcess : OPTIONAL IfcMeasureWithUnit;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* SELF\IfcRelAssigns.RelatedObjects | RelatingProcess :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssignsToProduct
 SUBTYPE OF (IfcRelAssigns);
	RelatingProduct : IfcProductSelect;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* SELF\IfcRelAssigns.RelatedObjects | RelatingProduct :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssignsToResource
 SUBTYPE OF (IfcRelAssigns);
	RelatingResource : IfcResourceSelect;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* SELF\IfcRelAssigns.RelatedObjects | RelatingResource :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssociates
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRelAssociatesClassification
	,IfcRelAssociatesLibrary
	,IfcRelAssociatesProfileDef
	,IfcRelAssociatesDocument
	,IfcRelAssociatesMaterial
	,IfcRelAssociatesConstraint
	,IfcRelAssociatesApproval))
 SUBTYPE OF (IfcRelationship);
END_ENTITY;

ENTITY IfcRelAssociatesApproval
 SUBTYPE OF (IfcRelAssociates);
	RelatingApproval : IfcApproval;
END_ENTITY;

ENTITY IfcRelAssociatesClassification
 SUBTYPE OF (IfcRelAssociates);
	RelatingClassification : IfcClassificationSelect;
END_ENTITY;

ENTITY IfcRelAssociatesConstraint
 SUBTYPE OF (IfcRelAssociates);
	Intent : OPTIONAL IfcLabel;
	RelatingConstraint : IfcConstraint;
END_ENTITY;

ENTITY IfcRelAssociatesDocument
 SUBTYPE OF (IfcRelAssociates);
	RelatingDocument : IfcDocumentSelect;
END_ENTITY;

ENTITY IfcRelAssociatesLibrary
 SUBTYPE OF (IfcRelAssociates);
	RelatingLibrary : IfcLibrarySelect;
END_ENTITY;

ENTITY IfcRelAssociatesMaterial
 SUBTYPE OF (IfcRelAssociates);
	RelatingMaterial : IfcMaterialSelect;
 WHERE
	NoVoidElement : SIZEOF(QUERY(temp <* SELF\IfcRelAssociates.RelatedObjects | 
  ('IFCPRODUCTEXTENSION.IFCFEATUREELEMENTSUBTRACTION' IN TYPEOF(temp)) OR 
  ('IFCPRODUCTEXTENSION.IFCVIRTUALELEMENT' IN TYPEOF(temp)) 
)) = 0;
	AllowedElements : SIZEOF(QUERY(temp <* SELF\IfcRelAssociates.RelatedObjects | (
  SIZEOF(TYPEOF(temp) * [   
    'IFCPRODUCTEXTENSION.IFCELEMENT', 
    'IFCPRODUCTEXTENSION.IFCELEMENTTYPE',
    'IFCSHAREDBLDGELEMENTS.IFCWINDOWSTYLE',
    'IFCSHAREDBLDGELEMENTS.IFCDOORSTYLE',
    'IFCSTRUCTURALANALYSISDOMAIN.IFCSTRUCTURALMEMBER',
    'IFCPRODUCTEXTENSION.IFCPORT']) = 0) 
)) = 0;
END_ENTITY;

ENTITY IfcRelAssociatesProfileDef
 SUBTYPE OF (IfcRelAssociates);
	RelatingProfileDef : IfcProfileDef;
END_ENTITY;

ENTITY IfcRelConnects
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRelConnectsElements
	,IfcRelFlowControlElements
	,IfcRelSequence
	,IfcRelConnectsStructuralActivity
	,IfcRelContainedInSpatialStructure
	,IfcRelConnectsStructuralMember
	,IfcRelReferencedInSpatialStructure
	,IfcRelSpaceBoundary
	,IfcRelPositions
	,IfcRelFillsElement
	,IfcRelCoversBldgElements
	,IfcRelConnectsPorts
	,IfcRelConnectsPortToElement
	,IfcRelCoversSpaces
	,IfcRelInterferesElements
	,IfcRelServicesBuildings))
 SUBTYPE OF (IfcRelationship);
END_ENTITY;

ENTITY IfcRelConnectsElements
 SUPERTYPE OF (ONEOF
	(IfcRelConnectsWithRealizingElements
	,IfcRelConnectsPathElements))
 SUBTYPE OF (IfcRelConnects);
	ConnectionGeometry : OPTIONAL IfcConnectionGeometry;
	RelatingElement : IfcElement;
	RelatedElement : IfcElement;
 WHERE
	NoSelfReference : RelatingElement :<>: RelatedElement;
END_ENTITY;

ENTITY IfcRelConnectsPathElements
 SUBTYPE OF (IfcRelConnectsElements);
	RelatedConnectionType : IfcConnectionTypeEnum;
	RelatingConnectionType : IfcConnectionTypeEnum;
 WHERE
	NormalizedRelatingPriorities : (SIZEOF(RelatingPriorities) = 0)
OR
(SIZEOF (QUERY (temp <* RelatingPriorities
  | {0 <= temp <= 100}
  )) = SIZEOF(RelatingPriorities));
	NormalizedRelatedPriorities : (SIZEOF(RelatedPriorities) = 0)
OR
(SIZEOF (QUERY (temp <* RelatedPriorities
  | {0 <= temp <= 100}
  )) = SIZEOF(RelatedPriorities));
END_ENTITY;

ENTITY IfcRelConnectsPortToElement
 SUBTYPE OF (IfcRelConnects);
	RelatingPort : IfcPort;
	RelatedElement : IfcDistributionElement;
END_ENTITY;

ENTITY IfcRelConnectsPorts
 SUBTYPE OF (IfcRelConnects);
	RelatingPort : IfcPort;
	RelatedPort : IfcPort;
	RealizingElement : OPTIONAL IfcElement;
 WHERE
	NoSelfReference : RelatingPort :<>: RelatedPort;
END_ENTITY;

ENTITY IfcRelConnectsStructuralActivity
 SUBTYPE OF (IfcRelConnects);
	RelatingElement : IfcStructuralActivityAssignmentSelect;
	RelatedStructuralActivity : IfcStructuralActivity;
END_ENTITY;

ENTITY IfcRelConnectsStructuralMember
 SUPERTYPE OF (ONEOF
	(IfcRelConnectsWithEccentricity))
 SUBTYPE OF (IfcRelConnects);
	RelatingStructuralMember : IfcStructuralMember;
	RelatedStructuralConnection : IfcStructuralConnection;
	AppliedCondition : OPTIONAL IfcBoundaryCondition;
	AdditionalConditions : OPTIONAL IfcStructuralConnectionCondition;
	SupportedLength : OPTIONAL IfcLengthMeasure;
	ConditionCoordinateSystem : OPTIONAL IfcAxis2Placement3D;
END_ENTITY;

ENTITY IfcRelConnectsWithEccentricity
 SUBTYPE OF (IfcRelConnectsStructuralMember);
	ConnectionConstraint : IfcConnectionGeometry;
END_ENTITY;

ENTITY IfcRelConnectsWithRealizingElements
 SUBTYPE OF (IfcRelConnectsElements);
	RealizingElements : SET  OF IfcElement;
	ConnectionType : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcRelContainedInSpatialStructure
 SUBTYPE OF (IfcRelConnects);
	RelatedElements : SET  OF IfcProduct;
	RelatingStructure : IfcSpatialElement;
 INVERSE
	RelatedElements : IfcAnnotation FOR ContainedInStructure;
	RelatedElements : IfcElement FOR ContainedInStructure;
	RelatedElements : IfcPositioningElement FOR ContainedInStructure;
 WHERE
	WR31 : SIZEOF(QUERY(temp <* RelatedElements | 'IFCPRODUCTEXTENSION.IFCSPATIALSTRUCTUREELEMENT' IN TYPEOF(temp))) = 0;
END_ENTITY;

ENTITY IfcRelCoversBldgElements
 SUBTYPE OF (IfcRelConnects);
	RelatingBuildingElement : IfcElement;
	RelatedCoverings : SET  OF IfcCovering;
END_ENTITY;

ENTITY IfcRelCoversSpaces
 SUBTYPE OF (IfcRelConnects);
	RelatingSpace : IfcSpace;
	RelatedCoverings : SET  OF IfcCovering;
END_ENTITY;

ENTITY IfcRelDeclares
 SUBTYPE OF (IfcRelationship);
	RelatingContext : IfcContext;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* RelatedDefinitions | RelatingContext :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelDecomposes
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRelNests
	,IfcRelProjectsElement
	,IfcRelAggregates
	,IfcRelVoidsElement))
 SUBTYPE OF (IfcRelationship);
END_ENTITY;

ENTITY IfcRelDefines
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRelDefinesByType
	,IfcRelDefinesByObject
	,IfcRelDefinesByTemplate
	,IfcRelDefinesByProperties))
 SUBTYPE OF (IfcRelationship);
END_ENTITY;

ENTITY IfcRelDefinesByObject
 SUBTYPE OF (IfcRelDefines);
	RelatedObjects : SET  OF IfcObject;
	RelatingObject : IfcObject;
END_ENTITY;

ENTITY IfcRelDefinesByProperties
 SUBTYPE OF (IfcRelDefines);
	RelatedObjects : SET  OF IfcObjectDefinition;
	RelatingPropertyDefinition : IfcPropertySetDefinitionSelect;
 INVERSE
	RelatedObjects : IfcContext FOR IsDefinedBy;
	RelatedObjects : IfcObject FOR IsDefinedBy;
 WHERE
	NoRelatedTypeObject : SIZEOF(QUERY(Types <* SELF\IfcRelDefinesByProperties.RelatedObjects |  'IFCKERNEL.IFCTYPEOBJECT' IN TYPEOF(Types))) = 0;
END_ENTITY;

ENTITY IfcRelDefinesByTemplate
 SUBTYPE OF (IfcRelDefines);
	RelatedPropertySets : SET  OF IfcPropertySetDefinition;
	RelatingTemplate : IfcPropertySetTemplate;
END_ENTITY;

ENTITY IfcRelDefinesByType
 SUBTYPE OF (IfcRelDefines);
	RelatedObjects : SET  OF IfcObject;
	RelatingType : IfcTypeObject;
END_ENTITY;

ENTITY IfcRelFillsElement
 SUBTYPE OF (IfcRelConnects);
	RelatingOpeningElement : IfcOpeningElement;
	RelatedBuildingElement : IfcElement;
END_ENTITY;

ENTITY IfcRelFlowControlElements
 SUBTYPE OF (IfcRelConnects);
	RelatedControlElements : SET  OF IfcDistributionControlElement;
	RelatingFlowElement : IfcDistributionFlowElement;
END_ENTITY;

ENTITY IfcRelInterferesElements
 SUBTYPE OF (IfcRelConnects);
	RelatedElement : IfcInterferenceSelect;
	RelatingElement : IfcInterferenceSelect;
	InterferenceGeometry : OPTIONAL IfcConnectionGeometry;
	InterferenceType : OPTIONAL IfcIdentifier;
	ImpliedOrder : IfcLogical;
 WHERE
	NoSelfReference : RelatingElement :<>: RelatedElement;
END_ENTITY;

ENTITY IfcRelNests
 SUBTYPE OF (IfcRelDecomposes);
	RelatingObject : IfcObjectDefinition;
	RelatedObjects : LIST  OF IfcObjectDefinition;
 WHERE
	NoSelfReference : SIZEOF(QUERY(Temp <* RelatedObjects | RelatingObject :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelPositions
 SUBTYPE OF (IfcRelConnects);
	RelatingPositioningElement : IfcPositioningElement;
	RelatedProducts : SET  OF IfcProduct;
 WHERE
	NoSelfReference : SIZEOF(QUERY(temp <* RelatedProducts | RelatingPositioningElement :=: temp)) = 0;
END_ENTITY;

ENTITY IfcRelProjectsElement
 SUBTYPE OF (IfcRelDecomposes);
	RelatingElement : IfcElement;
	RelatedFeatureElement : IfcFeatureElementAddition;
END_ENTITY;

ENTITY IfcRelReferencedInSpatialStructure
 SUBTYPE OF (IfcRelConnects);
	RelatedElements : SET  OF IfcSpatialReferenceSelect;
	RelatingStructure : IfcSpatialElement;
 INVERSE
	RelatedElements : IfcProduct FOR ReferencedInStructures;
	RelatedElements : IfcSystem FOR ServicesFacilities;
 WHERE
	AllowedRelatedElements : SIZEOF(QUERY(temp <* RelatedElements | ('IFCPRODUCTEXTENSION.IFCSPATIALSTRUCTUREELEMENT' IN TYPEOF(temp)) AND (NOT ('IFCPRODUCTEXTENSION.IFCSPACE' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcRelSequence
 SUBTYPE OF (IfcRelConnects);
	RelatingProcess : IfcProcess;
	RelatedProcess : IfcProcess;
	TimeLag : OPTIONAL IfcLagTime;
	SequenceType : OPTIONAL IfcSequenceEnum;
	UserDefinedSequenceType : OPTIONAL IfcLabel;
 WHERE
	AvoidInconsistentSequence : RelatingProcess :<>: RelatedProcess;
	CorrectSequenceType : (SequenceType <> IfcSequenceEnum.USERDEFINED) OR ((SequenceType = IfcSequenceEnum.USERDEFINED) AND EXISTS(UserDefinedSequenceType));
END_ENTITY;

ENTITY IfcRelServicesBuildings
 SUBTYPE OF (IfcRelConnects);
	RelatingSystem : IfcSystem;
	RelatedBuildings : SET  OF IfcSpatialElement;
END_ENTITY;

ENTITY IfcRelSpaceBoundary
 SUPERTYPE OF (ONEOF
	(IfcRelSpaceBoundary1stLevel))
 SUBTYPE OF (IfcRelConnects);
	RelatingSpace : IfcSpaceBoundarySelect;
	RelatedBuildingElement : IfcElement;
	ConnectionGeometry : OPTIONAL IfcConnectionGeometry;
	PhysicalOrVirtualBoundary : IfcPhysicalOrVirtualEnum;
	InternalOrExternalBoundary : IfcInternalOrExternalEnum;
 WHERE
	CorrectPhysOrVirt : ((PhysicalOrVirtualBoundary = IfcPhysicalOrVirtualEnum.Physical) 
  AND (NOT('IFCPRODUCTEXTENSION.IFCVIRTUALELEMENT' IN TYPEOF(RelatedBuildingElement)))) 
OR 
((PhysicalOrVirtualBoundary = IfcPhysicalOrVirtualEnum.Virtual) 
  AND (('IFCPRODUCTEXTENSION.IFCVIRTUALELEMENT' IN TYPEOF(RelatedBuildingElement)) 
  OR   ('IFCPRODUCTEXTENSION.IFCOPENINGELEMENT' IN TYPEOF(RelatedBuildingElement)))) 
OR 
(PhysicalOrVirtualBoundary = IfcPhysicalOrVirtualEnum.NotDefined);
END_ENTITY;

ENTITY IfcRelSpaceBoundary1stLevel
 SUPERTYPE OF (ONEOF
	(IfcRelSpaceBoundary2ndLevel))
 SUBTYPE OF (IfcRelSpaceBoundary);
	InnerBoundaries : OPTIONAL IfcRelSpaceBoundary1stLevel;
	ParentBoundary : OPTIONAL IfcRelSpaceBoundary1stLevel;
END_ENTITY;

ENTITY IfcRelSpaceBoundary2ndLevel
 SUBTYPE OF (IfcRelSpaceBoundary1stLevel);
	CorrespondingBoundary : OPTIONAL IfcRelSpaceBoundary2ndLevel;
	Corresponds : OPTIONAL IfcRelSpaceBoundary2ndLevel;
END_ENTITY;

ENTITY IfcRelVoidsElement
 SUBTYPE OF (IfcRelDecomposes);
	RelatingBuildingElement : IfcElement;
	RelatedOpeningElement : IfcFeatureElementSubtraction;
END_ENTITY;

ENTITY IfcRelatedTypicalSection;
END_ENTITY;

ENTITY IfcRelationship
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcRelDecomposes
	,IfcRelConnects
	,IfcRelAssigns
	,IfcRelAssociates
	,IfcRelDefines
	,IfcRelDeclares))
 SUBTYPE OF (IfcRoot);
END_ENTITY;

ENTITY IfcRelay;
END_ENTITY;

ENTITY IfcRelcrossesspatialstructure;
END_ENTITY;

ENTITY IfcRelpassesoverspatialstructure;
END_ENTITY;

ENTITY IfcRelpassesthroughspatialstructure;
END_ENTITY;

ENTITY IfcRelpassesunderspatialstructure;
END_ENTITY;

ENTITY IfcRelpositions;
	PositioningType : IfcConnectiontypeenum;
END_ENTITY;

ENTITY IfcRemoteControlDisplayTerminationOfCtc
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcRemoteControlDisplayTerminationOfTdcs
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcRemoteRadioUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcRemoteUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcRemoteWorkstationOfCtc
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcReparametrisedCompositeCurveSegment
 SUBTYPE OF (IfcCompositeCurveSegment);
	ParamLength : IfcParameterValue;
 WHERE
	PositiveLengthParameter : ParamLength > 0.0;
END_ENTITY;

ENTITY IfcRepresentation
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStyleModel
	,IfcShapeModel));
	ContextOfItems : IfcRepresentationContext;
	RepresentationIdentifier : OPTIONAL IfcLabel;
	RepresentationType : OPTIONAL IfcLabel;
	Items : SET  OF IfcRepresentationItem;
 INVERSE
	RepresentationMap : SET [0:1] OF IfcRepresentationMap FOR MappedRepresentation;
	LayerAssignments : SET  OF IfcPresentationLayerAssignment FOR AssignedItems;
	OfProductRepresentation : SET  OF IfcProductRepresentation FOR Representations;
END_ENTITY;

ENTITY IfcRepresentationContext
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcGeometricRepresentationContext));
	ContextIdentifier : OPTIONAL IfcLabel;
	ContextType : OPTIONAL IfcLabel;
 INVERSE
	RepresentationsInContext : SET  OF IfcRepresentation FOR ContextOfItems;
END_ENTITY;

ENTITY IfcRepresentationItem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcMappedItem
	,IfcTopologicalRepresentationItem
	,IfcGeometricRepresentationItem
	,IfcStyledItem));
 INVERSE
	LayerAssignment : SET [0:1] OF IfcPresentationLayerAssignment FOR AssignedItems;
	StyledByItem : SET [0:1] OF IfcStyledItem FOR Item;
END_ENTITY;

ENTITY IfcRepresentationMap;
	MappingOrigin : IfcAxis2Placement;
	MappedRepresentation : IfcRepresentation;
 INVERSE
	HasShapeAspects : SET  OF IfcShapeAspect FOR PartOfProductDefinitionShape;
	MapUsage : SET  OF IfcMappedItem FOR MappingSource;
 WHERE
	ApplicableMappedRepr : 'IFCREPRESENTATIONRESOURCE.IFCSHAPEMODEL' IN TYPEOF(MappedRepresentation);
END_ENTITY;

ENTITY IfcResource
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcConstructionResource))
 SUBTYPE OF (IfcObject);
	Identification : OPTIONAL IfcIdentifier;
	LongDescription : OPTIONAL IfcText;
 INVERSE
	ResourceOf : SET  OF IfcRelAssignsToResource FOR RelatingResource;
END_ENTITY;

ENTITY IfcResourceApprovalRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingApproval : IfcApproval;
END_ENTITY;

ENTITY IfcResourceConstraintRelationship
 SUBTYPE OF (IfcResourceLevelRelationship);
	RelatingConstraint : IfcConstraint;
END_ENTITY;

ENTITY IfcResourceLevelRelationship
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcMaterialRelationship
	,IfcPropertyDependencyRelationship
	,IfcDocumentInformationRelationship
	,IfcCurrencyRelationship
	,IfcOrganizationRelationship
	,IfcResourceConstraintRelationship
	,IfcExternalReferenceRelationship
	,IfcResourceApprovalRelationship
	,IfcApprovalRelationship));
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
END_ENTITY;

ENTITY IfcResourceTime
 SUBTYPE OF (IfcSchedulingTime);
	ScheduleWork : OPTIONAL IfcDuration;
	ScheduleUsage : OPTIONAL IfcPositiveRatioMeasure;
	ScheduleStart : OPTIONAL IfcDateTime;
	ScheduleFinish : OPTIONAL IfcDateTime;
	ScheduleContour : OPTIONAL IfcLabel;
	LevelingDelay : OPTIONAL IfcDuration;
	IsOverAllocated : OPTIONAL IfcBoolean;
	StatusTime : OPTIONAL IfcDateTime;
	ActualWork : OPTIONAL IfcDuration;
	ActualUsage : OPTIONAL IfcPositiveRatioMeasure;
	ActualStart : OPTIONAL IfcDateTime;
	ActualFinish : OPTIONAL IfcDateTime;
	RemainingWork : OPTIONAL IfcDuration;
	RemainingUsage : OPTIONAL IfcPositiveRatioMeasure;
	Completion : OPTIONAL IfcPositiveRatioMeasure;
END_ENTITY;

ENTITY IfcRetentionInfiltrationBasin;
END_ENTITY;

ENTITY IfcReturnBusbar;
END_ENTITY;

ENTITY IfcReturnCable;
END_ENTITY;

ENTITY IfcReturnCircuit;
END_ENTITY;

ENTITY IfcReturnConductor;
END_ENTITY;

ENTITY IfcRevolvedAreaSolid
 SUPERTYPE OF (ONEOF
	(IfcRevolvedAreaSolidTapered))
 SUBTYPE OF (IfcSweptAreaSolid);
	Axis : IfcAxis1Placement;
	Angle : IfcPlaneAngleMeasure;
 DERIVE
	AxisLine : IfcLine := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcCurve() || IfcLine(Axis.Location, 
  IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Axis.Z,1.0));
 WHERE
	AxisStartInXY : Axis.Location.Coordinates[3] = 0.0;
	AxisDirectionInXY : Axis.Z.DirectionRatios[3] = 0.0;
END_ENTITY;

ENTITY IfcRevolvedAreaSolidTapered
 SUBTYPE OF (IfcRevolvedAreaSolid);
	EndSweptArea : IfcProfileDef;
 WHERE
	CorrectProfileAssignment : IfcTaperedSweptAreaProfiles(SELF\IfcSweptAreaSolid.SweptArea, SELF.EndSweptArea);
END_ENTITY;

ENTITY IfcRightCircularCone
 SUBTYPE OF (IfcCsgPrimitive3D);
	Height : IfcPositiveLengthMeasure;
	BottomRadius : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcRightCircularCylinder
 SUBTYPE OF (IfcCsgPrimitive3D);
	Height : IfcPositiveLengthMeasure;
	Radius : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcRightEquipmentAccessZone
 SUBTYPE OF (IfcEquipmentAccessZone);
END_ENTITY;

ENTITY IfcRigidCatenary
 SUBTYPE OF (IfcOverheadContactLineSystem);
END_ENTITY;

ENTITY IfcRigidCatenaryGroundingClamp;
END_ENTITY;

ENTITY IfcRigidCatenaryProtectiveSheath
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcRigidCatenarySuspension
 SUBTYPE OF (IfcOcsSuspension);
END_ENTITY;

ENTITY IfcRippleControl;
END_ENTITY;

ENTITY IfcRoad
 SUBTYPE OF (IfcFacility);
END_ENTITY;

ENTITY IfcRoadGate;
END_ENTITY;

ENTITY IfcRoadPartTypeEnum.JUNCTION
 SUPERTYPE OF (ONEOF
	(IfcRoadPartTypeEnum.INTERSECTION
	,IfcRoadPartTypeEnum.ROUNDABOUT));
END_ENTITY;

ENTITY IfcRoadPartTypeEnum.LEVEL_CROSSING
 SUPERTYPE OF (ONEOF
	(IfcRoadPartTypeEnum.PEDESTRIAN_CROSSING
	,IfcRoadPartTypeEnum.RAILWAYCROSSING
	,IfcRoadPartTypeEnum.BICYCLECROSSING));
END_ENTITY;

ENTITY IfcRoadSafetyRail;
END_ENTITY;

ENTITY IfcRoadTypeClass;
END_ENTITY;

ENTITY IfcRoadrestraintsystem
 SUPERTYPE OF (ONEOF
	(IfcVehicleRestraintSystem
	,IfcPedestrianRestraintSystem));
END_ENTITY;

ENTITY IfcRoadsurfacemarkings
 SUPERTYPE OF (ONEOF
	(IfcSymbols
	,IfcLines));
END_ENTITY;

ENTITY IfcRockAnchor;
END_ENTITY;

ENTITY IfcRockfallDetector
 SUBTYPE OF (IfcDetector);
END_ENTITY;

ENTITY IfcRoof
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcRoofTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcRoofTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcRoofTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCROOFTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcRoofType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcRoofTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcRoofTypeEnum.USERDEFINED) OR
((PredefinedType = IfcRoofTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcRoot
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPropertyDefinition
	,IfcRelationship
	,IfcObjectDefinition));
	GlobalId : IfcGloballyUniqueId;
	OwnerHistory : OPTIONAL IfcOwnerHistory;
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
 UNIQUE
	UR1 : GlobalId;
END_ENTITY;

ENTITY IfcRoundedRectangleProfileDef
 SUBTYPE OF (IfcRectangleProfileDef);
	RoundingRadius : IfcPositiveLengthMeasure;
 WHERE
	ValidRadius : ((RoundingRadius <= (SELF\IfcRectangleProfileDef.XDim/2.)) AND 
 (RoundingRadius <= (SELF\IfcRectangleProfileDef.YDim/2.)));
END_ENTITY;

ENTITY IfcRtmSpotlocation;
END_ENTITY;

ENTITY IfcSIUnit
 SUBTYPE OF (IfcNamedUnit);
	Prefix : OPTIONAL IfcSIPrefix;
	Name : IfcSIUnitName;
 DERIVE
	SELF\IfcNamedUnit.Dimensions : IfcDimensionalExponents := IfcDimensionsForSiUnit (SELF.Name);
END_ENTITY;

ENTITY IfcSafetyBarrier
 SUPERTYPE OF (ONEOF
	(IfcVehicleParapet));
END_ENTITY;

ENTITY IfcSanitaryTerminal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcSanitaryTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcSanitaryTerminalTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcSanitaryTerminalTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCPLUMBINGFIREPROTECTIONDOMAIN.IFCSANITARYTERMINALTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSanitaryTerminalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcSanitaryTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSanitaryTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSanitaryTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcSchedulingTime
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcLagTime
	,IfcResourceTime
	,IfcWorkTime
	,IfcTaskTime
	,IfcEventTime));
	Name : OPTIONAL IfcLabel;
	DataOrigin : OPTIONAL IfcDataOriginEnum;
	UserDefinedDataOrigin : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcScotchBlock
 SUBTYPE OF (IfcTracksideVehicleBarringDevice);
END_ENTITY;

ENTITY IfcSealing
 SUBTYPE OF (IfcOcsFoundation);
END_ENTITY;

ENTITY IfcSeamCurve
 SUBTYPE OF (IfcSurfaceCurve);
 WHERE
	TwoPCurves : SIZEOF(SELF\IfcSurfaceCurve.AssociatedGeometry) = 2;
	SameSurface : IfcAssociatedSurface(SELF\IfcSurfaceCurve.AssociatedGeometry[1]) = IfcAssociatedSurface(SELF\IfcSurfaceCurve.AssociatedGeometry[2]);
END_ENTITY;

ENTITY IfcSectionInsulator
 SUBTYPE OF (IfcSectioningDevice);
END_ENTITY;

ENTITY IfcSectionProperties
 SUBTYPE OF (IfcPreDefinedProperties);
	SectionType : IfcSectionTypeEnum;
	StartProfile : IfcProfileDef;
	EndProfile : OPTIONAL IfcProfileDef;
END_ENTITY;

ENTITY IfcSectionReinforcementProperties
 SUBTYPE OF (IfcPreDefinedProperties);
	LongitudinalStartPosition : IfcLengthMeasure;
	LongitudinalEndPosition : IfcLengthMeasure;
	TransversePosition : OPTIONAL IfcLengthMeasure;
	ReinforcementRole : IfcReinforcingBarRoleEnum;
	SectionDefinition : IfcSectionProperties;
	CrossSectionReinforcementDefinitions : SET  OF IfcReinforcementBarProperties;
END_ENTITY;

ENTITY IfcSectionedSolid
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSectionedSolidHorizontal))
 SUBTYPE OF (IfcSolidModel);
	Directrix : IfcCurve;
	CrossSections : LIST  OF IfcProfileDef;
 WHERE
	DirectrixIs3D : Directrix.Dim = 3;
	ConsistentProfileTypes : SIZEOF(QUERY(temp <* CrossSections | CrossSections[1].ProfileType <> temp.ProfileType)) = 0;
	SectionsSameType : SIZEOF(QUERY(temp <* CrossSections | TYPEOF(CrossSections[1]) :<>: TYPEOF(temp))) = 0;
END_ENTITY;

ENTITY IfcSectionedSolidHorizontal
 SUBTYPE OF (IfcSectionedSolid);
	CrossSectionPositions : LIST  OF IfcDistanceExpression;
	FixedAxisVertical : IfcBoolean;
 WHERE
	CorrespondingSectionPositions : SIZEOF(CrossSections) = SIZEOF(CrossSectionPositions);
	NoLongitudinalOffsets : SIZEOF(QUERY(temp <* CrossSectionPositions | EXISTS(temp.OffsetLongitudinal))) = 0;
END_ENTITY;

ENTITY IfcSectionedSpine
 SUBTYPE OF (IfcGeometricRepresentationItem);
	SpineCurve : IfcCompositeCurve;
	CrossSections : LIST  OF IfcProfileDef;
	CrossSectionPositions : LIST  OF IfcAxis2Placement3D;
 DERIVE
	Dim : IfcDimensionCount := 3;
 WHERE
	CorrespondingSectionPositions : SIZEOF(CrossSections) = SIZEOF(CrossSectionPositions);
	ConsistentProfileTypes : SIZEOF(QUERY(temp <* CrossSections | CrossSections[1].ProfileType <> temp.ProfileType)) = 0;
	SpineCurveDim : SpineCurve.Dim = 3;
END_ENTITY;

ENTITY IfcSectionedSurface
 SUBTYPE OF (IfcSurface);
	CrossSectionPositions : IfcDistanceExpression;
	CrossSections : IfcProfileDef;
	Directrix : IfcCurve;
	FixedAxisVertical : IfcBoolean;
END_ENTITY;

ENTITY IfcSectioningBreakingSwitch
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcSectioningDevice
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSectionInsulator
	,IfcNaturalSectionInsulator));
END_ENTITY;

ENTITY IfcSectioningDisconnectorSwitch
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcSectioningPost
 SUBTYPE OF (IfcTractionPost);
END_ENTITY;

ENTITY IfcSector;
END_ENTITY;

ENTITY IfcSensor
 SUBTYPE OF (IfcDistributionControlElement);
	PredefinedType : OPTIONAL IfcSensorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcSensorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcSensorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCBUILDINGCONTROLSDOMAIN.IFCSENSORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSensor
 SUPERTYPE OF (ONEOF
	(IfcAnemometrograph
	,IfcEarthquakeAccelerometer
	,IfcSnowDepthMeter
	,IfcForeignObjectDualPowerNetworkSensor
	,IfcRainGauge))
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcSensorType
 SUBTYPE OF (IfcDistributionControlElementType);
	PredefinedType : IfcSensorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSensorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSensorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcServer
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcServiceArea;
END_ENTITY;

ENTITY IfcServiceControlPoint
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcServiceGprsSupportNode
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcShadingDevice
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcShadingDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcShadingDeviceTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcShadingDeviceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCSHADINGDEVICETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcShadingDeviceType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcShadingDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcShadingDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcShadingDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcShapeAspect;
	ShapeRepresentations : LIST  OF IfcShapeModel;
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	ProductDefinitional : IfcLogical;
	PartOfProductDefinitionShape : OPTIONAL IfcProductRepresentationSelect;
 INVERSE
	HasExternalReferences : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
END_ENTITY;

ENTITY IfcShapeModel
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTopologyRepresentation
	,IfcShapeRepresentation))
 SUBTYPE OF (IfcRepresentation);
 INVERSE
	OfShapeAspect : SET [0:1] OF IfcShapeAspect FOR ShapeRepresentations;
 WHERE
	WR11 : (SIZEOF(SELF\IfcRepresentation.OfProductRepresentation) = 1) XOR 
(SIZEOF(SELF\IfcRepresentation.RepresentationMap) = 1) XOR
(SIZEOF(OfShapeAspect) = 1);
END_ENTITY;

ENTITY IfcShapeRepresentation
 SUBTYPE OF (IfcShapeModel);
 WHERE
	CorrectContext : 'IFCREPRESENTATIONRESOURCE.IFCGEOMETRICREPRESENTATIONCONTEXT' 
IN TYPEOF(SELF\IfcRepresentation.ContextOfItems);
	NoTopologicalItem : SIZEOF(QUERY(temp <* Items | 
  ('IFCTOPOLOGYRESOURCE.IFCTOPOLOGICALREPRESENTATIONITEM' IN TYPEOF(temp))
    AND (NOT(SIZEOF(
      ['IFCTOPOLOGYRESOURCE.IFCVERTEXPOINT',
       'IFCTOPOLOGYRESOURCE.IFCEDGECURVE',
       'IFCTOPOLOGYRESOURCE.IFCFACESURFACE'] * TYPEOF(temp)) = 1))
)) = 0;
	HasRepresentationType : EXISTS(SELF\IfcRepresentation.RepresentationType);
	HasRepresentationIdentifier : EXISTS(SELF\IfcRepresentation.RepresentationIdentifier);
	CorrectItemsForType : IfcShapeRepresentationTypes(SELF\IfcRepresentation.RepresentationType, SELF\IfcRepresentation.Items);
END_ENTITY;

ENTITY IfcShellBasedSurfaceModel
 SUBTYPE OF (IfcGeometricRepresentationItem);
 DERIVE
	Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcSign
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : IfcSignTypeEnum;
END_ENTITY;

ENTITY IfcSignAndSignal
 SUPERTYPE OF (ONEOF
	(IfcLowerpantographSigns
	,IfcProtectivePlates
	,IfcStructureNumberPlate))
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcSignType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : IfcSignTypeEnum;
END_ENTITY;

ENTITY IfcSignal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : IfcSignalTypeEnum;
END_ENTITY;

ENTITY IfcSignal
 SUPERTYPE OF (ONEOF
	(IfcPhysicalSignal
	,IfcNonPhysicalSignal))
 SUBTYPE OF (IfcAbsSignallingEquipment);
END_ENTITY;

ENTITY IfcSignalAspect;
END_ENTITY;

ENTITY IfcSignalConnectionPlate
 SUBTYPE OF (IfcUndergroundFacilities);
END_ENTITY;

ENTITY IfcSignalFrame;
END_ENTITY;

ENTITY IfcSignalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcSignalTypeEnum;
END_ENTITY;

ENTITY IfcSignallingElement
 SUBTYPE OF (IfcRailwayElement);
END_ENTITY;

ENTITY IfcSignallingEquipmentVolume
 SUPERTYPE OF (ONEOF
	(IfcSignallingIndoorEquipmentPlaceholderNonTrackside
	,IfcSignallingOutdoorEquipmentPlaceholderTrackside))
 SUBTYPE OF (IfcSignallingReservedVolume);
END_ENTITY;

ENTITY IfcSignallingGenericObject;
	Acceptance by : IfcIdentifier;
	Air Relative Humidity range : IfcRatioPositive0;
	Alarm information : IfcText;
	Assembling description reference : IfcIdentifier;
	Asset Cost : IfcMonetary;
	Bill of Quantities : IfcInteger;
	Current type : IfcLabel;
	Date of acceptance : IfcDate;
	Date of installation : IfcDate;
	Date of last maintenance : IfcDate;
	Date of manufacture : IfcDate;
	Date of next maintenance : IfcDate;
	Date of repair : IfcDate;
	Description reference : IfcIdentifier;
	Description reference type : IfcLabel;
	Element type : IfcLabel;
	External reference key : IfcIdentifier;
	External reference system : IfcLabel;
	Foundation type : IfcLabel;
	Function description : IfcText;
	Horizontal distance to the track : IfcLength;
	Identity : IfcIdentifier;
	Installation height : IfcLength;
	Installation reference point : IfcIdentifier;
	Installation requirements : IfcText;
	Life/Service time : IfcTime;
	Location description : IfcText;
	MTBF : IfcTime;
	Main parts description : IfcText;
	Maintainer : IfcIdentifier;
	Manufacturer : IfcLabel;
	Material : IfcText;
	Material list reference : IfcText;
	Mileage value : IfcLength;
	Operation temperature range : IfcThermodynamictemperature;
	Ownership : IfcLabel;
	Purchase Price : IfcMonetary;
	Railway clearance type : IfcLabel;
	Repairer : IfcIdentifier;
	Repairing content : IfcText;
	Serial number : IfcIdentifier;
	Service cycle : IfcTime;
	Service level : IfcLabel;
	Status : IfcLabel;
	Supplier : IfcLabel;
	System type : IfcLabel;
	Working current : IfcElectricCurrent;
	Working voltage : IfcElectricVoltage;
END_ENTITY;

ENTITY IfcSignallingIndoorEquipmentPlaceholderNonTrackside
 SUBTYPE OF (IfcSignallingEquipmentVolume);
END_ENTITY;

ENTITY IfcSignallingInfrastructureVolume
 SUBTYPE OF (IfcSignallingReservedVolume);
END_ENTITY;

ENTITY IfcSignallingOutdoorEquipmentPlaceholderTrackside
 SUBTYPE OF (IfcSignallingEquipmentVolume);
END_ENTITY;

ENTITY IfcSignallingReservedVolume
 SUPERTYPE OF (ONEOF
	(IfcSignallingEquipmentVolume
	,IfcSignallingInfrastructureVolume))
END_ENTITY;

ENTITY IfcSignallingTrack;
END_ENTITY;

ENTITY IfcSignassembly;
END_ENTITY;

ENTITY IfcSignificantArchitecture;
END_ENTITY;

ENTITY IfcSimpleProperty
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPropertyTableValue
	,IfcPropertySingleValue
	,IfcPropertyReferenceValue
	,IfcPropertyListValue
	,IfcPropertyBoundedValue
	,IfcPropertyEnumeratedValue))
 SUBTYPE OF (IfcProperty);
END_ENTITY;

ENTITY IfcSimplePropertyTemplate
 SUBTYPE OF (IfcPropertyTemplate);
	TemplateType : OPTIONAL IfcSimplePropertyTemplateTypeEnum;
	PrimaryMeasureType : OPTIONAL IfcLabel;
	SecondaryMeasureType : OPTIONAL IfcLabel;
	Enumerators : OPTIONAL IfcPropertyEnumeration;
	PrimaryUnit : OPTIONAL IfcUnit;
	SecondaryUnit : OPTIONAL IfcUnit;
	Expression : OPTIONAL IfcLabel;
	AccessState : OPTIONAL IfcStateEnum;
END_ENTITY;

ENTITY IfcSingleCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcSite
 SUBTYPE OF (IfcSpatialStructureElement);
	RefLatitude : OPTIONAL IfcCompoundPlaneAngleMeasure;
	RefLongitude : OPTIONAL IfcCompoundPlaneAngleMeasure;
	RefElevation : OPTIONAL IfcLengthMeasure;
	LandTitleNumber : OPTIONAL IfcLabel;
	SiteAddress : OPTIONAL IfcPostalAddress;
END_ENTITY;

ENTITY IfcSlab
 SUPERTYPE OF (ONEOF
	(IfcSlabElementedCase
	,IfcSlabStandardCase))
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcSlabTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcSlabTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcSlabTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCSLABTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSlabElementedCase
 SUBTYPE OF (IfcSlab);
 WHERE
	HasDecomposition : HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) > 0;
END_ENTITY;

ENTITY IfcSlabStandardCase
 SUBTYPE OF (IfcSlab);
 WHERE
	HasMaterialLayerSetusage : SIZEOF (QUERY(temp <* USEDIN(SELF, 'IFCKERNEL.IFCRELASSOCIATES.RELATEDOBJECTS') |
              ('IFCPRODUCTEXTENSION.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)) AND
              ('IFCMATERIALRESOURCE.IFCMATERIALLAYERSETUSAGE' IN TYPEOF(temp.RelatingMaterial))
              )) = 1;
END_ENTITY;

ENTITY IfcSlabType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcSlabTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSlabTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSlabTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcSleeper
 SUBTYPE OF (IfcAbsSleeper);
END_ENTITY;

ENTITY IfcSleeperCap
 SUBTYPE OF (IfcAbsTrackStrengtheningEquipment);
END_ENTITY;

ENTITY IfcSlidingChair;
	Disassembly date : IfcDate;
	Installation date : IfcDate;
	Located in the turnout panel : IfcNewCoordinatesLocal;
	Maintenance : IfcBoolean;
	Manufacturing date : IfcDate;
	Putting into operation date : IfcDate;
	Turnout panel : IfcIdentifier;
	Type of roller bearing sliding chair : IfcSlidingChairRollerBearingType;
END_ENTITY;

ENTITY IfcSlippageConnectionCondition
 SUBTYPE OF (IfcStructuralConnectionCondition);
	SlippageX : OPTIONAL IfcLengthMeasure;
	SlippageY : OPTIONAL IfcLengthMeasure;
	SlippageZ : OPTIONAL IfcLengthMeasure;
END_ENTITY;

ENTITY IfcSnowDepthMeter
 SUBTYPE OF (IfcSensor);
END_ENTITY;

ENTITY IfcSolarDevice
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcSolarDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcSolarDeviceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcSolarDeviceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCSOLARDEVICETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSolarDeviceType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcSolarDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSolarDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSolarDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcSolidConductor
 SUPERTYPE OF (ONEOF
	(IfcContactWire))
 SUBTYPE OF (IfcElectricalConductor);
END_ENTITY;

ENTITY IfcSolidModel
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcManifoldSolidBrep
	,IfcSweptDiskSolid
	,IfcCsgSolid
	,IfcSectionedSolid
	,IfcSweptAreaSolid))
 SUBTYPE OF (IfcGeometricRepresentationItem);
 DERIVE
	Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcSolidStratum
 SUBTYPE OF (IfcGeotechnicalStratum);
END_ENTITY;

ENTITY IfcSoundAbsorption
 SUBTYPE OF (IfcAbsTrackCovering);
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Limit value : IfcSoundPressure;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Relative Position : IfcRelativePosition;
	Track edge : IfcIdentifier;
	Type : IfcSoundAbsorptionType;
END_ENTITY;

ENTITY IfcSpace
 SUBTYPE OF (IfcSpatialStructureElement);
	PredefinedType : OPTIONAL IfcSpaceTypeEnum;
	ElevationWithFlooring : OPTIONAL IfcLengthMeasure;
 INVERSE
	HasCoverings : SET  OF IfcRelCoversSpaces FOR RelatingSpace;
	BoundedBy : SET  OF IfcRelSpaceBoundary FOR RelatingSpace;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcSpaceTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcSpaceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCPRODUCTEXTENSION.IFCSPACETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSpaceExclusion
 SUBTYPE OF (IfcLocalSpace);
END_ENTITY;

ENTITY IfcSpaceHeater
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcSpaceHeaterTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcSpaceHeaterTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcSpaceHeaterTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCSPACEHEATERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSpaceHeaterType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcSpaceHeaterTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSpaceHeaterTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSpaceHeaterTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcSpaceReservation
 SUBTYPE OF (IfcLocalSpace);
END_ENTITY;

ENTITY IfcSpaceType
 SUBTYPE OF (IfcSpatialStructureElementType);
	PredefinedType : IfcSpaceTypeEnum;
	LongName : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSpaceTypeEnum.USERDEFINED) OR 
((PredefinedType = IfcSpaceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcSpatialElementType.ElementType));
END_ENTITY;

ENTITY IfcSpacer;
END_ENTITY;

ENTITY IfcSpan;
END_ENTITY;

ENTITY IfcSpanAlignment;
END_ENTITY;

ENTITY IfcSpanplacement
 SUPERTYPE OF (ONEOF
	(IfcIntervalplacement))
 SUBTYPE OF (IfcObjectplacement);
END_ENTITY;

ENTITY IfcSparkGap
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcSpatialElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSpatialStructureElement
	,IfcSpatialZone
	,IfcExternalSpatialStructureElement))
 SUBTYPE OF (IfcProduct);
	LongName : OPTIONAL IfcLabel;
 INVERSE
	ContainsElements : SET  OF IfcRelContainedInSpatialStructure FOR RelatingStructure;
	ServicedBySystems : SET  OF IfcRelServicesBuildings FOR RelatedBuildings;
	ReferencesElements : SET  OF IfcRelReferencedInSpatialStructure FOR RelatingStructure;
END_ENTITY;

ENTITY IfcSpatialElementType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSpatialStructureElementType
	,IfcSpatialZoneType))
 SUBTYPE OF (IfcTypeProduct);
	ElementType : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcSpatialStructureElement
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSpace
	,IfcFacility
	,IfcSite
	,IfcFacilityPart
	,IfcBuildingStorey))
 SUBTYPE OF (IfcSpatialElement);
	CompositionType : OPTIONAL IfcElementCompositionEnum;
 WHERE
	WR41 : (HIINDEX(SELF\IfcObjectDefinition.Decomposes) = 1) 
AND
('IFCKERNEL.IFCRELAGGREGATES' IN TYPEOF(SELF\IfcObjectDefinition.Decomposes[1])) 
AND
(('IFCKERNEL.IFCPROJECT' IN TYPEOF (SELF\IfcObjectDefinition.Decomposes[1].RelatingObject)) OR
 ('IFCPRODUCTEXTENSION.IFCSPATIALSTRUCTUREELEMENT' IN TYPEOF (SELF\IfcObjectDefinition.Decomposes[1].RelatingObject))
);
END_ENTITY;

ENTITY IfcSpatialStructureElementType
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSpaceType))
 SUBTYPE OF (IfcSpatialElementType);
END_ENTITY;

ENTITY IfcSpatialZone
 SUBTYPE OF (IfcSpatialElement);
	PredefinedType : IfcSpatialZoneTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcSpatialZoneTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcSpatialZoneTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCPRODUCTEXTENSION.IFCSPATIALZONETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSpatialZoneType
 SUBTYPE OF (IfcSpatialElementType);
	PredefinedType : IfcSpatialZoneTypeEnum;
	LongName : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSpatialZoneTypeEnum.USERDEFINED) OR 
((PredefinedType = IfcSpatialZoneTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcSpatialElementType.ElementType));
END_ENTITY;

ENTITY IfcSpecialRightsRequiredForRoadwork;
END_ENTITY;

ENTITY IfcSpecifications
 SUPERTYPE OF (ONEOF
	(IfcSpeeds
	,IfcDynamicParameters
	,Ifc3dStructureGauge));
END_ENTITY;

ENTITY IfcSpeedLimit
 SUBTYPE OF (IfcTrafficRestriction);
END_ENTITY;

ENTITY IfcSpeedRegulator
 SUBTYPE OF (IfcAbsMechanicalEquipment);
	Type : IfcSpeedRegulatorType;
END_ENTITY;

ENTITY IfcSpeeds
 SUBTYPE OF (IfcSpecifications);
END_ENTITY;

ENTITY IfcSphere
 SUBTYPE OF (IfcCsgPrimitive3D);
	Radius : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcSphericalSurface
 SUBTYPE OF (IfcElementarySurface);
	Radius : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcSpringDampingSystem
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Relative Position : IfcRelativePosition;
	Track edge : IfcIdentifier;
	Type : IfcSpringDampingSystemType;
END_ENTITY;

ENTITY IfcSpringTensioner
 SUBTYPE OF (IfcTensioningEquipment);
END_ENTITY;

ENTITY IfcStackTerminal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcStackTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcStackTerminalTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcStackTerminalTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCPLUMBINGFIREPROTECTIONDOMAIN.IFCSTACKTERMINALTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcStackTerminalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcStackTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcStackTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcStackTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcStair
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcStairTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcStairTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcStairTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCSTAIRTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcStairFlight
 SUBTYPE OF (IfcBuiltElement);
	NumberOfRisers : OPTIONAL IfcInteger;
	NumberOfTreads : OPTIONAL IfcInteger;
	RiserHeight : OPTIONAL IfcPositiveLengthMeasure;
	TreadLength : OPTIONAL IfcPositiveLengthMeasure;
	PredefinedType : OPTIONAL IfcStairFlightTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcStairFlightTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcStairFlightTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCSTAIRFLIGHTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcStairFlightType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcStairFlightTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcStairFlightTypeEnum.USERDEFINED) OR
((PredefinedType = IfcStairFlightTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcStairType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcStairTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcStairTypeEnum.USERDEFINED) OR
((PredefinedType = IfcStairTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcStandardDrawing
 SUBTYPE OF (IfcLocalSpace);
END_ENTITY;

ENTITY IfcStartAndStopEquipment
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcStationCodingCompositeCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcStationConsoleOfCtc
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcStay;
END_ENTITY;

ENTITY IfcSteadyDevices;
END_ENTITY;

ENTITY IfcSteadyFitting;
END_ENTITY;

ENTITY IfcStitchWire;
END_ENTITY;

ENTITY IfcStockRail
 SUPERTYPE OF (ONEOF
	(IfcStockRailElementary
	,IfcStockRailHsb));
	Disassembly date : IfcDate;
	Function of Turnout : IfcTrackCategory;
	Installation date : IfcDate;
	Length : IfcLengthNonNegative0;
	Location in the turnout panel : IfcNewCoordinatesLocal;
	Manufacturing Date : IfcDate;
	Putting into operation date : IfcDate;
	Radius of stock rail : IfcReal;
	Turnout Panel : IfcIdentifier;
	Type of Turnout : IfcTypeOfTurnout;
	Type of installation : IfcStockRailType;
END_ENTITY;

ENTITY IfcStockRailElementary
 SUBTYPE OF (IfcStockRail);
END_ENTITY;

ENTITY IfcStockRailHsb
 SUBTYPE OF (IfcStockRail);
END_ENTITY;

ENTITY IfcStrainInsulator
 SUBTYPE OF (IfcInsulator);
END_ENTITY;

ENTITY IfcStrandedConductor
 SUPERTYPE OF (ONEOF
	(IfcCatenaryWire
	,IfcFeederWire
	,IfcEarthingConductor))
 SUBTYPE OF (IfcElectricalConductor);
END_ENTITY;

ENTITY IfcStrongWindDetector
 SUBTYPE OF (IfcDetector);
END_ENTITY;

ENTITY IfcStructuralAction
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralSurfaceAction
	,IfcStructuralPointAction
	,IfcStructuralCurveAction))
 SUBTYPE OF (IfcStructuralActivity);
	DestabilizingLoad : OPTIONAL IfcBoolean;
END_ENTITY;

ENTITY IfcStructuralActivity
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralReaction
	,IfcStructuralAction))
 SUBTYPE OF (IfcProduct);
	AppliedLoad : IfcStructuralLoad;
	GlobalOrLocal : IfcGlobalOrLocalEnum;
 INVERSE
	AssignedToStructuralItem : SET [0:1] OF IfcRelConnectsStructuralActivity FOR RelatedStructuralActivity;
END_ENTITY;

ENTITY IfcStructuralAnalysisModel
 SUBTYPE OF (IfcSystem);
	PredefinedType : IfcAnalysisModelTypeEnum;
	OrientationOf2DPlane : OPTIONAL IfcAxis2Placement3D;
	LoadedBy : OPTIONAL SET  OF IfcStructuralLoadGroup;
	HasResults : OPTIONAL SET  OF IfcStructuralResultGroup;
	SharedPlacement : OPTIONAL IfcObjectPlacement;
 WHERE
	HasObjectType : (PredefinedType <> IfcAnalysisModelTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcStructuralConnection
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralCurveConnection
	,IfcStructuralPointConnection
	,IfcStructuralSurfaceConnection))
 SUBTYPE OF (IfcStructuralItem);
	AppliedCondition : OPTIONAL IfcBoundaryCondition;
 INVERSE
	ConnectsStructuralMembers : SET  OF IfcRelConnectsStructuralMember FOR RelatedStructuralConnection;
END_ENTITY;

ENTITY IfcStructuralConnectionCondition
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSlippageConnectionCondition
	,IfcFailureConnectionCondition));
	Name : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcStructuralCurveAction
 SUPERTYPE OF (ONEOF
	(IfcStructuralLinearAction))
 SUBTYPE OF (IfcStructuralAction);
	ProjectedOrTrue : OPTIONAL IfcProjectedOrTrueLengthEnum;
	PredefinedType : IfcStructuralCurveActivityTypeEnum;
 WHERE
	ProjectedIsGlobal : (NOT EXISTS(ProjectedOrTrue)) OR
((ProjectedOrTrue <> PROJECTED_LENGTH) OR
 (SELF\IfcStructuralActivity.GlobalOrLocal = GLOBAL_COORDS));
	HasObjectType : (PredefinedType <> IfcStructuralCurveActivityTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
	SuitablePredefinedType : PredefinedType <> IfcStructuralCurveActivityTypeEnum.EQUIDISTANT;
END_ENTITY;

ENTITY IfcStructuralCurveConnection
 SUBTYPE OF (IfcStructuralConnection);
	Axis : IfcDirection;
END_ENTITY;

ENTITY IfcStructuralCurveMember
 SUPERTYPE OF (ONEOF
	(IfcStructuralCurveMemberVarying))
 SUBTYPE OF (IfcStructuralMember);
	PredefinedType : IfcStructuralCurveMemberTypeEnum;
	Axis : IfcDirection;
 WHERE
	HasObjectType : (PredefinedType <> IfcStructuralCurveMemberTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcStructuralCurveMemberVarying
 SUBTYPE OF (IfcStructuralCurveMember);
END_ENTITY;

ENTITY IfcStructuralCurveReaction
 SUBTYPE OF (IfcStructuralReaction);
	PredefinedType : IfcStructuralCurveActivityTypeEnum;
 WHERE
	HasObjectType : (PredefinedType <> IfcStructuralCurveActivityTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
	SuitablePredefinedType : (PredefinedType <> IfcStructuralCurveActivityTypeEnum.SINUS) AND (PredefinedType <> IfcStructuralCurveActivityTypeEnum.PARABOLA);
END_ENTITY;

ENTITY IfcStructuralItem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralConnection
	,IfcStructuralMember))
 SUBTYPE OF (IfcProduct);
 INVERSE
	AssignedStructuralActivity : SET  OF IfcRelConnectsStructuralActivity FOR RelatingElement;
END_ENTITY;

ENTITY IfcStructuralLinearAction
 SUBTYPE OF (IfcStructuralCurveAction);
 WHERE
	SuitableLoadType : SIZEOF(['IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADLINEARFORCE', 'IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADTEMPERATURE'] * TYPEOF(SELF\IfcStructuralActivity.AppliedLoad)) = 1;
	ConstPredefinedType : SELF\IfcStructuralCurveAction.PredefinedType = IfcStructuralCurveActivityTypeEnum.CONST;
END_ENTITY;

ENTITY IfcStructuralLoad
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralLoadConfiguration
	,IfcStructuralLoadOrResult));
	Name : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcStructuralLoadCase
 SUBTYPE OF (IfcStructuralLoadGroup);
	SelfWeightCoefficients : OPTIONAL LIST [3:3] OF IfcRatioMeasure;
 WHERE
	IsLoadCasePredefinedType : SELF\IfcStructuralLoadGroup.PredefinedType = IfcLoadGroupTypeEnum.LOAD_CASE;
END_ENTITY;

ENTITY IfcStructuralLoadConfiguration
 SUBTYPE OF (IfcStructuralLoad);
	Values : LIST  OF IfcStructuralLoadOrResult;
 WHERE
	ValidListSize : NOT EXISTS(Locations) OR (SIZEOF(Locations) = SIZEOF(Values));
END_ENTITY;

ENTITY IfcStructuralLoadGroup
 SUPERTYPE OF (ONEOF
	(IfcStructuralLoadCase))
 SUBTYPE OF (IfcGroup);
	PredefinedType : IfcLoadGroupTypeEnum;
	ActionType : IfcActionTypeEnum;
	ActionSource : IfcActionSourceTypeEnum;
	Coefficient : OPTIONAL IfcRatioMeasure;
	Purpose : OPTIONAL IfcLabel;
 INVERSE
	SourceOfResultGroup : SET [0:1] OF IfcStructuralResultGroup FOR ResultForLoadGroup;
	LoadGroupFor : SET  OF IfcStructuralAnalysisModel FOR LoadedBy;
 WHERE
	HasObjectType : (
  (PredefinedType <> IfcLoadGroupTypeEnum.USERDEFINED) AND
  (ActionType <> IfcActionTypeEnum.USERDEFINED) AND
  (ActionSource <> IfcActionSourceTypeEnum.USERDEFINED)
) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcStructuralLoadLinearForce
 SUBTYPE OF (IfcStructuralLoadStatic);
	LinearForceX : OPTIONAL IfcLinearForceMeasure;
	LinearForceY : OPTIONAL IfcLinearForceMeasure;
	LinearForceZ : OPTIONAL IfcLinearForceMeasure;
	LinearMomentX : OPTIONAL IfcLinearMomentMeasure;
	LinearMomentY : OPTIONAL IfcLinearMomentMeasure;
	LinearMomentZ : OPTIONAL IfcLinearMomentMeasure;
END_ENTITY;

ENTITY IfcStructuralLoadOrResult
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSurfaceReinforcementArea
	,IfcStructuralLoadStatic))
 SUBTYPE OF (IfcStructuralLoad);
END_ENTITY;

ENTITY IfcStructuralLoadPlanarForce
 SUBTYPE OF (IfcStructuralLoadStatic);
	PlanarForceX : OPTIONAL IfcPlanarForceMeasure;
	PlanarForceY : OPTIONAL IfcPlanarForceMeasure;
	PlanarForceZ : OPTIONAL IfcPlanarForceMeasure;
END_ENTITY;

ENTITY IfcStructuralLoadSingleDisplacement
 SUPERTYPE OF (ONEOF
	(IfcStructuralLoadSingleDisplacementDistortion))
 SUBTYPE OF (IfcStructuralLoadStatic);
	DisplacementX : OPTIONAL IfcLengthMeasure;
	DisplacementY : OPTIONAL IfcLengthMeasure;
	DisplacementZ : OPTIONAL IfcLengthMeasure;
	RotationalDisplacementRX : OPTIONAL IfcPlaneAngleMeasure;
	RotationalDisplacementRY : OPTIONAL IfcPlaneAngleMeasure;
	RotationalDisplacementRZ : OPTIONAL IfcPlaneAngleMeasure;
END_ENTITY;

ENTITY IfcStructuralLoadSingleDisplacementDistortion
 SUBTYPE OF (IfcStructuralLoadSingleDisplacement);
	Distortion : OPTIONAL IfcCurvatureMeasure;
END_ENTITY;

ENTITY IfcStructuralLoadSingleForce
 SUPERTYPE OF (ONEOF
	(IfcStructuralLoadSingleForceWarping))
 SUBTYPE OF (IfcStructuralLoadStatic);
	ForceX : OPTIONAL IfcForceMeasure;
	ForceY : OPTIONAL IfcForceMeasure;
	ForceZ : OPTIONAL IfcForceMeasure;
	MomentX : OPTIONAL IfcTorqueMeasure;
	MomentY : OPTIONAL IfcTorqueMeasure;
	MomentZ : OPTIONAL IfcTorqueMeasure;
END_ENTITY;

ENTITY IfcStructuralLoadSingleForceWarping
 SUBTYPE OF (IfcStructuralLoadSingleForce);
	WarpingMoment : OPTIONAL IfcWarpingMomentMeasure;
END_ENTITY;

ENTITY IfcStructuralLoadStatic
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralLoadSingleDisplacement
	,IfcStructuralLoadLinearForce
	,IfcStructuralLoadPlanarForce
	,IfcStructuralLoadSingleForce
	,IfcStructuralLoadTemperature))
 SUBTYPE OF (IfcStructuralLoadOrResult);
END_ENTITY;

ENTITY IfcStructuralLoadTemperature
 SUBTYPE OF (IfcStructuralLoadStatic);
	DeltaTConstant : OPTIONAL IfcThermodynamicTemperatureMeasure;
	DeltaTY : OPTIONAL IfcThermodynamicTemperatureMeasure;
	DeltaTZ : OPTIONAL IfcThermodynamicTemperatureMeasure;
END_ENTITY;

ENTITY IfcStructuralMember
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralSurfaceMember
	,IfcStructuralCurveMember))
 SUBTYPE OF (IfcStructuralItem);
 INVERSE
	ConnectedBy : SET  OF IfcRelConnectsStructuralMember FOR RelatingStructuralMember;
END_ENTITY;

ENTITY IfcStructuralPlanarAction
 SUBTYPE OF (IfcStructuralSurfaceAction);
 WHERE
	SuitableLoadType : SIZEOF(['IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADPLANARFORCE', 'IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADTEMPERATURE'] * TYPEOF(SELF\IfcStructuralActivity.AppliedLoad)) = 1;
	ConstPredefinedType : SELF\IfcStructuralSurfaceAction.PredefinedType = IfcStructuralSurfaceActivityTypeEnum.CONST;
END_ENTITY;

ENTITY IfcStructuralPointAction
 SUBTYPE OF (IfcStructuralAction);
 WHERE
	SuitableLoadType : SIZEOF(['IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADSINGLEFORCE', 'IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADSINGLEDISPLACEMENT'] * TYPEOF(SELF\IfcStructuralActivity.AppliedLoad)) = 1;
END_ENTITY;

ENTITY IfcStructuralPointConnection
 SUBTYPE OF (IfcStructuralConnection);
	ConditionCoordinateSystem : OPTIONAL IfcAxis2Placement3D;
END_ENTITY;

ENTITY IfcStructuralPointReaction
 SUBTYPE OF (IfcStructuralReaction);
 WHERE
	SuitableLoadType : SIZEOF(['IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADSINGLEFORCE', 'IFCSTRUCTURALLOADRESOURCE.IFCSTRUCTURALLOADSINGLEDISPLACEMENT'] * TYPEOF(SELF\IfcStructuralActivity.AppliedLoad)) = 1;
END_ENTITY;

ENTITY IfcStructuralReaction
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStructuralPointReaction
	,IfcStructuralCurveReaction
	,IfcStructuralSurfaceReaction))
 SUBTYPE OF (IfcStructuralActivity);
END_ENTITY;

ENTITY IfcStructuralResultGroup
 SUBTYPE OF (IfcGroup);
	TheoryType : IfcAnalysisTheoryTypeEnum;
	ResultForLoadGroup : OPTIONAL IfcStructuralLoadGroup;
	IsLinear : IfcBoolean;
 INVERSE
	ResultGroupFor : SET [0:1] OF IfcStructuralAnalysisModel FOR HasResults;
 WHERE
	HasObjectType : (TheoryType <> IfcAnalysisTheoryTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcStructuralSurfaceAction
 SUPERTYPE OF (ONEOF
	(IfcStructuralPlanarAction))
 SUBTYPE OF (IfcStructuralAction);
	ProjectedOrTrue : OPTIONAL IfcProjectedOrTrueLengthEnum;
	PredefinedType : IfcStructuralSurfaceActivityTypeEnum;
 WHERE
	ProjectedIsGlobal : (NOT EXISTS(ProjectedOrTrue)) OR
((ProjectedOrTrue <> PROJECTED_LENGTH) OR
 (SELF\IfcStructuralActivity.GlobalOrLocal = GLOBAL_COORDS));
	HasObjectType : (PredefinedType <> IfcStructuralSurfaceActivityTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcStructuralSurfaceConnection
 SUBTYPE OF (IfcStructuralConnection);
END_ENTITY;

ENTITY IfcStructuralSurfaceMember
 SUPERTYPE OF (ONEOF
	(IfcStructuralSurfaceMemberVarying))
 SUBTYPE OF (IfcStructuralMember);
	PredefinedType : IfcStructuralSurfaceMemberTypeEnum;
	Thickness : OPTIONAL IfcPositiveLengthMeasure;
 WHERE
	HasObjectType : (PredefinedType <> IfcStructuralSurfaceMemberTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcStructuralSurfaceMemberVarying
 SUBTYPE OF (IfcStructuralSurfaceMember);
END_ENTITY;

ENTITY IfcStructuralSurfaceReaction
 SUBTYPE OF (IfcStructuralReaction);
	PredefinedType : IfcStructuralSurfaceActivityTypeEnum;
 WHERE
	HasPredefinedType : (PredefinedType <> IfcStructuralSurfaceActivityTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcStructureEarth;
END_ENTITY;

ENTITY IfcStructureNumberPlate
 SUBTYPE OF (IfcSignAndSignal);
END_ENTITY;

ENTITY IfcStyleModel
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcStyledRepresentation))
 SUBTYPE OF (IfcRepresentation);
END_ENTITY;

ENTITY IfcStyledItem
 SUBTYPE OF (IfcRepresentationItem);
	Item : OPTIONAL IfcRepresentationItem;
	Name : OPTIONAL IfcLabel;
 WHERE
	ApplicableItem : NOT('IFCPRESENTATIONAPPEARANCERESOURCE.IFCSTYLEDITEM' IN TYPEOF(Item));
END_ENTITY;

ENTITY IfcStyledRepresentation
 SUBTYPE OF (IfcStyleModel);
 WHERE
	OnlyStyledItems : SIZEOF(QUERY(temp <* SELF\IfcRepresentation.Items | 
  (NOT('IFCPRESENTATIONAPPEARANCERESOURCE.IFCSTYLEDITEM' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcSubContractResource
 SUBTYPE OF (IfcConstructionResource);
	PredefinedType : OPTIONAL IfcSubContractResourceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcSubContractResourceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcSubContractResourceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcSubContractResourceType
 SUBTYPE OF (IfcConstructionResourceType);
	PredefinedType : IfcSubContractResourceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSubContractResourceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSubContractResourceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeResource.ResourceType));
END_ENTITY;

ENTITY IfcSubSector;
END_ENTITY;

ENTITY IfcSubclass
 SUBTYPE OF (IfcClass);
	hasValue : IfcAnotherpropertyset;
END_ENTITY;

ENTITY IfcSubedge
 SUBTYPE OF (IfcEdge);
	ParentEdge : IfcEdge;
END_ENTITY;

ENTITY IfcSubrack
 SUBTYPE OF (IfcRack);
END_ENTITY;

ENTITY IfcSubstation
 SUPERTYPE OF (ONEOF
	(IfcRectifierSubstation
	,IfcBoxTypeSubstation))
 SUBTYPE OF (IfcPowerSupplyFacilitySpatialStructure);
END_ENTITY;

ENTITY IfcSubstationControlEquipment
 SUPERTYPE OF (ONEOF
	(IfcUnitaryControlElement
	,IfcDcControlPanel
	,IfcInterlockingDevice
	,IfcAcControlPanel));
END_ENTITY;

ENTITY IfcSubstructure;
END_ENTITY;

ENTITY IfcSuffixPost
 SUBTYPE OF (IfcOcsSupportingElements);
END_ENTITY;

ENTITY IfcSuperStructurePart
 SUBTYPE OF (IfcSuperstructure);
END_ENTITY;

ENTITY IfcSuperstructure
 SUPERTYPE OF (ONEOF
	(IfcSuperStructurePart));
END_ENTITY;

ENTITY IfcSupportBracket;
END_ENTITY;

ENTITY IfcSupportFitting
 SUBTYPE OF (IfcOcsFitting);
END_ENTITY;

ENTITY IfcSupportingStructure;
END_ENTITY;

ENTITY IfcSurface
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSectionedSurface
	,IfcElementarySurface
	,IfcBoundedSurface
	,IfcSweptSurface))
 SUBTYPE OF (IfcGeometricRepresentationItem);
 DERIVE
	Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcSurfaceCurve
 SUPERTYPE OF (ONEOF
	(IfcIntersectionCurve
	,IfcSeamCurve))
 SUBTYPE OF (IfcCurve);
	Curve3D : IfcCurve;
	AssociatedGeometry : LIST [1:2] OF IfcPcurve;
	MasterRepresentation : IfcPreferredSurfaceCurveRepresentation;
 DERIVE
	BasisSurface : SET [1:2] OF IfcSurface := IfcGetBasisSurface(SELF);
 WHERE
	CurveIs3D : Curve3D.Dim = 3;
	CurveIsNotPcurve : NOT ('IFCGEOMETRYRESOURCE.IFCPCURVE' IN TYPEOF(Curve3D));
END_ENTITY;

ENTITY IfcSurfaceCurveSweptAreaSolid
 SUBTYPE OF (IfcDirectrixCurveSweptAreaSolid);
	ReferenceSurface : IfcSurface;
 WHERE
	DirectrixBounded : (EXISTS(StartParam) AND EXISTS(EndParam)) OR 
(SIZEOF(['IFCGEOMETRYRESOURCE.IFCCONIC', 'IFCGEOMETRYRESOURCE.IFCBOUNDEDCURVE'] * TYPEOF(Directrix)) = 1);
END_ENTITY;

ENTITY IfcSurfaceFeature
 SUBTYPE OF (IfcFeatureElement);
	PredefinedType : OPTIONAL IfcSurfaceFeatureTypeEnum;
 WHERE
	HasObjectType : NOT EXISTS(PredefinedType) OR (PredefinedType <> IfcSurfaceFeatureTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcSurfaceOfLinearExtrusion
 SUBTYPE OF (IfcSweptSurface);
	ExtrudedDirection : IfcDirection;
	Depth : IfcLengthMeasure;
 DERIVE
	ExtrusionAxis : IfcVector := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector (ExtrudedDirection, Depth);
 WHERE
	DepthGreaterZero : Depth > 0.;
END_ENTITY;

ENTITY IfcSurfaceOfRevolution
 SUBTYPE OF (IfcSweptSurface);
	AxisPosition : IfcAxis1Placement;
 DERIVE
	AxisLine : IfcLine := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcCurve() || IfcLine(AxisPosition.Location, 
  IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(AxisPosition.Z,1.0));
END_ENTITY;

ENTITY IfcSurfaceReinforcementArea
 SUBTYPE OF (IfcStructuralLoadOrResult);
	SurfaceReinforcement1 : OPTIONAL LIST [2:3] OF IfcLengthMeasure;
	SurfaceReinforcement2 : OPTIONAL LIST [2:3] OF IfcLengthMeasure;
	ShearReinforcement : OPTIONAL IfcRatioMeasure;
 WHERE
	SurfaceAndOrShearAreaSpecified : EXISTS(SurfaceReinforcement1) OR EXISTS(SurfaceReinforcement2) OR EXISTS(ShearReinforcement);
	NonnegativeArea1 : (NOT EXISTS(SurfaceReinforcement1)) OR (
    (SurfaceReinforcement1[1] >= 0.) AND
    (SurfaceReinforcement1[2] >= 0.) AND
    ((SIZEOF(SurfaceReinforcement1) = 1) OR (SurfaceReinforcement1[1] >= 0.))
);
	NonnegativeArea2 : (NOT EXISTS(SurfaceReinforcement2)) OR (
    (SurfaceReinforcement2[1] >= 0.) AND
    (SurfaceReinforcement2[2] >= 0.) AND
    ((SIZEOF(SurfaceReinforcement2) = 1) OR (SurfaceReinforcement2[1] >= 0.))
);
	NonnegativeArea3 : (NOT EXISTS(ShearReinforcement)) OR (ShearReinforcement >= 0.);
END_ENTITY;

ENTITY IfcSurfaceStyle
 SUBTYPE OF (IfcPresentationStyle);
	Side : IfcSurfaceSide;
	Styles : SET [1:5] OF IfcSurfaceStyleElementSelect;
 WHERE
	MaxOneShading : SIZEOF(QUERY(Style <* SELF.Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCSURFACESTYLESHADING' IN
   TYPEOF(Style)
  )) <= 1;
	MaxOneLighting : SIZEOF(QUERY(Style <* SELF.Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCSURFACESTYLELIGHTING' IN
   TYPEOF(Style)
  )) <= 1;
	MaxOneRefraction : SIZEOF(QUERY(Style <* SELF.Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCSURFACESTYLEREFRACTION' IN
   TYPEOF(Style)
  )) <= 1;
	MaxOneTextures : SIZEOF(QUERY(Style <* SELF.Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCSURFACESTYLEWITHTEXTURES' IN
   TYPEOF(Style)
  )) <= 1;
	MaxOneExtDefined : SIZEOF(QUERY(Style <* SELF.Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCEXTERNALLYDEFINEDSURFACESTYLE' IN
   TYPEOF(Style)
  )) <= 1;
END_ENTITY;

ENTITY IfcSurfaceStyleLighting
 SUBTYPE OF (IfcPresentationItem);
	DiffuseTransmissionColour : IfcColourRgb;
	DiffuseReflectionColour : IfcColourRgb;
	TransmissionColour : IfcColourRgb;
	ReflectanceColour : IfcColourRgb;
END_ENTITY;

ENTITY IfcSurfaceStyleRefraction
 SUBTYPE OF (IfcPresentationItem);
	RefractionIndex : OPTIONAL IfcReal;
	DispersionFactor : OPTIONAL IfcReal;
END_ENTITY;

ENTITY IfcSurfaceStyleRendering
 SUBTYPE OF (IfcSurfaceStyleShading);
	DiffuseColour : OPTIONAL IfcColourOrFactor;
	TransmissionColour : OPTIONAL IfcColourOrFactor;
	DiffuseTransmissionColour : OPTIONAL IfcColourOrFactor;
	ReflectionColour : OPTIONAL IfcColourOrFactor;
	SpecularColour : OPTIONAL IfcColourOrFactor;
	SpecularHighlight : OPTIONAL IfcSpecularHighlightSelect;
	ReflectanceMethod : IfcReflectanceMethodEnum;
END_ENTITY;

ENTITY IfcSurfaceStyleShading
 SUPERTYPE OF (ONEOF
	(IfcSurfaceStyleRendering))
 SUBTYPE OF (IfcPresentationItem);
	SurfaceColour : IfcColourRgb;
	Transparency : OPTIONAL IfcNormalisedRatioMeasure;
END_ENTITY;

ENTITY IfcSurfaceStyleWithTextures
 SUBTYPE OF (IfcPresentationItem);
	Textures : LIST  OF IfcSurfaceTexture;
END_ENTITY;

ENTITY IfcSurfaceTexture
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcBlobTexture
	,IfcImageTexture
	,IfcPixelTexture))
 SUBTYPE OF (IfcPresentationItem);
	RepeatS : IfcBoolean;
	RepeatT : IfcBoolean;
	Mode : OPTIONAL IfcIdentifier;
	TextureTransform : OPTIONAL IfcCartesianTransformationOperator2D;
 INVERSE
	IsMappedBy : SET  OF IfcTextureCoordinate FOR Maps;
	UsedInStyles : SET  OF IfcSurfaceStyleWithTextures FOR Textures;
END_ENTITY;

ENTITY IfcSuspensionFitting
 SUBTYPE OF (IfcOcsFitting);
END_ENTITY;

ENTITY IfcSuspensionInsulator
 SUBTYPE OF (IfcInsulator);
END_ENTITY;

ENTITY IfcSweptAreaSolid
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDirectrixDistanceSweptAreaSolid
	,IfcRevolvedAreaSolid
	,IfcDirectrixCurveSweptAreaSolid
	,IfcExtrudedAreaSolid))
 SUBTYPE OF (IfcSolidModel);
	SweptArea : IfcProfileDef;
	Position : OPTIONAL IfcAxis2Placement3D;
 WHERE
	SweptAreaType : SweptArea.ProfileType = IfcProfileTypeEnum.Area;
END_ENTITY;

ENTITY IfcSweptDiskSolid
 SUPERTYPE OF (ONEOF
	(IfcSweptDiskSolidPolygonal))
 SUBTYPE OF (IfcSolidModel);
	Directrix : IfcCurve;
	Radius : IfcPositiveLengthMeasure;
	InnerRadius : OPTIONAL IfcPositiveLengthMeasure;
	StartParam : OPTIONAL IfcParameterValue;
	EndParam : OPTIONAL IfcParameterValue;
 WHERE
	DirectrixDim : Directrix.Dim = 3;
	InnerRadiusSize : (NOT EXISTS(InnerRadius)) OR (Radius > InnerRadius);
	DirectrixBounded : (EXISTS(StartParam) AND EXISTS(EndParam)) OR 
(SIZEOF(['IFCGEOMETRYRESOURCE.IFCCONIC', 'IFCGEOMETRYRESOURCE.IFCBOUNDEDCURVE'] * TYPEOF(Directrix)) = 1);
END_ENTITY;

ENTITY IfcSweptDiskSolidPolygonal
 SUBTYPE OF (IfcSweptDiskSolid);
	FilletRadius : OPTIONAL IfcPositiveLengthMeasure;
 WHERE
	CorrectRadii : NOT(EXISTS(FilletRadius)) OR (FilletRadius >= SELF\IfcSweptDiskSolid.Radius);
	DirectrixIsPolyline : ('IFCGEOMETRYRESOURCE.IFCPOLYLINE' IN TYPEOF(SELF\IfcSweptDiskSolid.Directrix)) OR
(('IFCGEOMETRYRESOURCE.IFCINDEXEDPOLYCURVE' IN TYPEOF(SELF\IfcSweptDiskSolid.Directrix)) AND NOT(EXISTS(SELF\IfcSweptDiskSolid.Directrix.Segments)));
END_ENTITY;

ENTITY IfcSweptSurface
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcSurfaceOfRevolution
	,IfcSurfaceOfLinearExtrusion))
 SUBTYPE OF (IfcSurface);
	SweptCurve : IfcProfileDef;
	Position : OPTIONAL IfcAxis2Placement3D;
 WHERE
	SweptCurveType : SweptCurve.ProfileType = IfcProfileTypeEnum.Curve;
END_ENTITY;

ENTITY IfcSwitch
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcDisconnector
	,IfcSwitchDisconnector
	,IfcLoadSwitch
	,IfcStartAndStopEquipment
	,IfcFuseDisconnector
	,IfcLoadBreakSwitch
	,IfcEarthingSwitch
	,IfcSectioningDisconnectorSwitch
	,IfcSectioningBreakingSwitch
	,IfcBladeSwitch
	,IfcEmergencySwitchOff
	,IfcCircuitBreaker
	,IfcChangeOverSwitch));
END_ENTITY;

ENTITY IfcSwitchCabinet;
END_ENTITY;

ENTITY IfcSwitchDisconnector
 SUBTYPE OF (IfcSwitch);
END_ENTITY;

ENTITY IfcSwitchedOverlap;
END_ENTITY;

ENTITY IfcSwitchedOverlap
 SUBTYPE OF (IfcOverheadLineOverlapZone);
END_ENTITY;

ENTITY IfcSwitchingDevice
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcSwitchingDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcSwitchingDeviceTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcSwitchingDeviceTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCSWITCHINGDEVICETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSwitchingDeviceType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcSwitchingDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSwitchingDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSwitchingDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcSwitchingPost
 SUBTYPE OF (IfcTractionPost);
END_ENTITY;

ENTITY IfcSymbols
 SUBTYPE OF (IfcRoadsurfacemarkings);
END_ENTITY;

ENTITY IfcSynchronizationSupportUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcSystem
 SUPERTYPE OF (ONEOF
	(IfcStructuralAnalysisModel
	,IfcBuiltSystem
	,IfcDistributionSystem
	,IfcZone
	,IfcBuildingSystem))
 SUBTYPE OF (IfcGroup);
 INVERSE
	ServicesFacilities : IfcRelReferencedInSpatialStructure FOR RelatedElements;
	ServicesBuildings : SET [0:1] OF IfcRelServicesBuildings FOR RelatingSystem;
END_ENTITY;

ENTITY IfcSystemFurnitureElement
 SUBTYPE OF (IfcFurnishingElement);
	PredefinedType : OPTIONAL IfcSystemFurnitureElementTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcSystemFurnitureElementTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcSystemFurnitureElementTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
   ('IFCSHAREDFACILITIESELEMENTS.IFCSYSTEMFURNITUREELEMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcSystemFurnitureElementType
 SUBTYPE OF (IfcFurnishingElementType);
	PredefinedType : OPTIONAL IfcSystemFurnitureElementTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcSystemFurnitureElementTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSystemFurnitureElementTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcSystemSeparationCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcSystemSeparationCatenary
 SUBTYPE OF (IfcOverheadLineSystem);
END_ENTITY;

ENTITY IfcTShapeProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	Depth : IfcPositiveLengthMeasure;
	FlangeWidth : IfcPositiveLengthMeasure;
	WebThickness : IfcPositiveLengthMeasure;
	FlangeThickness : IfcPositiveLengthMeasure;
	FilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	FlangeEdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	WebEdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	WebSlope : OPTIONAL IfcPlaneAngleMeasure;
	FlangeSlope : OPTIONAL IfcPlaneAngleMeasure;
 WHERE
	ValidFlangeThickness : FlangeThickness < Depth;
	ValidWebThickness : WebThickness < FlangeWidth;
END_ENTITY;

ENTITY IfcTable;
	Name : OPTIONAL IfcLabel;
	Rows : OPTIONAL LIST  OF IfcTableRow;
	Columns : OPTIONAL LIST  OF IfcTableColumn;
 DERIVE
	NumberOfCellsInRow : IfcInteger := HIINDEX(Rows[1].RowCells);
	NumberOfHeadings : IfcInteger := SIZEOF(QUERY( Temp <* Rows | Temp.IsHeading));
	NumberOfDataRows : IfcInteger := SIZEOF(QUERY( Temp <* Rows | NOT(Temp.IsHeading)));
 WHERE
	WR1 : SIZEOF(QUERY( Temp <* Rows | HIINDEX(Temp.RowCells) <> HIINDEX(Rows[1].RowCells))) = 0;
	WR2 : { 0 <= NumberOfHeadings <= 1 };
END_ENTITY;

ENTITY IfcTableColumn;
	Identifier : OPTIONAL IfcIdentifier;
	Name : OPTIONAL IfcLabel;
	Description : OPTIONAL IfcText;
	Unit : OPTIONAL IfcUnit;
	ReferencePath : OPTIONAL IfcReference;
END_ENTITY;

ENTITY IfcTableRow;
	IsHeading : OPTIONAL IfcBoolean;
END_ENTITY;

ENTITY IfcTandemMscSignalingTransferPoint
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTank
 SUBTYPE OF (IfcFlowStorageDevice);
	PredefinedType : OPTIONAL IfcTankTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcTankTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcTankTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCTANKTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcTankType
 SUBTYPE OF (IfcFlowStorageDeviceType);
	PredefinedType : IfcTankTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTankTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTankTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTask
 SUBTYPE OF (IfcProcess);
	Status : OPTIONAL IfcLabel;
	WorkMethod : OPTIONAL IfcLabel;
	IsMilestone : IfcBoolean;
	Priority : OPTIONAL IfcInteger;
	TaskTime : OPTIONAL IfcTaskTime;
	PredefinedType : OPTIONAL IfcTaskTypeEnum;
 WHERE
	HasName : EXISTS(SELF\IfcRoot.Name);
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR (PredefinedType <> IfcTaskTypeEnum.USERDEFINED) OR ((PredefinedType = IfcTaskTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcTaskTime
 SUPERTYPE OF (ONEOF
	(IfcTaskTimeRecurring))
 SUBTYPE OF (IfcSchedulingTime);
	DurationType : OPTIONAL IfcTaskDurationEnum;
	ScheduleDuration : OPTIONAL IfcDuration;
	ScheduleStart : OPTIONAL IfcDateTime;
	ScheduleFinish : OPTIONAL IfcDateTime;
	EarlyStart : OPTIONAL IfcDateTime;
	EarlyFinish : OPTIONAL IfcDateTime;
	LateStart : OPTIONAL IfcDateTime;
	LateFinish : OPTIONAL IfcDateTime;
	FreeFloat : OPTIONAL IfcDuration;
	TotalFloat : OPTIONAL IfcDuration;
	IsCritical : OPTIONAL IfcBoolean;
	StatusTime : OPTIONAL IfcDateTime;
	ActualDuration : OPTIONAL IfcDuration;
	ActualStart : OPTIONAL IfcDateTime;
	ActualFinish : OPTIONAL IfcDateTime;
	RemainingTime : OPTIONAL IfcDuration;
	Completion : OPTIONAL IfcPositiveRatioMeasure;
END_ENTITY;

ENTITY IfcTaskTimeRecurring
 SUBTYPE OF (IfcTaskTime);
	Recurrence : IfcRecurrencePattern;
END_ENTITY;

ENTITY IfcTaskType
 SUBTYPE OF (IfcTypeProcess);
	PredefinedType : IfcTaskTypeEnum;
	WorkMethod : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTaskTypeEnum.USERDEFINED) OR ((PredefinedType = IfcTaskTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcTypeProcess.ProcessType)) ;
END_ENTITY;

ENTITY IfcTds
 SUPERTYPE OF (ONEOF
	(IfcTurnoutTds
	,IfcPlainTds));
END_ENTITY;

ENTITY IfcTdsJoint;
END_ENTITY;

ENTITY IfcTechnicalBuilding
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcTelecomActiveEquipment
 SUPERTYPE OF (ONEOF
	(IfcServiceControlPoint
	,IfcHomeLocationRegister
	,IfcServer
	,IfcPacketControlUnit
	,IfcTandemMscSignalingTransferPoint
	,IfcIntegratedTelephonyExchange
	,IfcModem
	,IfcDispatchingSwitch
	,IfcRemoteUnit
	,IfcTransceiverModule
	,IfcTunnelEmergencyTelephoneExchange
	,IfcAutomaticGate
	,IfcPrivateBranchExchange
	,IfcBasebandUnit
	,IfcTracksideTelephonyExchange
	,IfcDataTransmissionUnit
	,IfcIntelligentPeripheral
	,IfcServiceGprsSupportNode
	,IfcMobilityManagementEntity
	,IfcRedundantArrayOfIndependentDisk
	,IfcTicketVendingMachine
	,IfcMobileSwitchingCenter
	,IfcOpticalLineTerminal
	,IfcTranscodingRateAdaptationUnit
	,IfcDesktopConsole
	,IfcBaseTransceiverStation
	,IfcGateway
	,IfcAccessPoint
	,IfcRemoteRadioUnit
	,IfcPrimaryReferenceClock
	,IfcMasterUnit
	,IfcOnSiteControlUnit
	,IfcEquipmentIdentityRegister
	,IfcAcknowledgementCenter
	,IfcIpNetworkEquipment
	,IfcRecordingEquipment
	,IfcBaseStationController
	,IfcEUtranNodeB
	,IfcSensor
	,IfcSynchronizationSupportUnit
	,IfcRailwaySelfServiceIdentityVerificationGate
	,IfcOpticalNetworkUnit
	,IfcTransportEquipment
	,IfcTelephone))
 SUBTYPE OF (IfcAbsTelecomObject);
	primaryPosition : IfcAbsAt;
	secondaryPosition : IfcLineAt;
END_ENTITY;

ENTITY IfcTelecomAddress
 SUBTYPE OF (IfcAddress);
	PagerNumber : OPTIONAL IfcLabel;
	WWWHomePageURL : OPTIONAL IfcURIReference;
 WHERE
	MinimumDataProvided : EXISTS (TelephoneNumbers) OR
EXISTS (FacsimileNumbers) OR 
EXISTS (PagerNumber) OR
EXISTS (ElectronicMailAddresses) OR 
EXISTS (WWWHomePageURL) OR
EXISTS (MessagingIDs);
END_ENTITY;

ENTITY IfcTelecomCabinet;
END_ENTITY;

ENTITY IfcTelecomCable
 SUPERTYPE OF (ONEOF
	(IfcOpticalFiberCable
	,IfcCopperCable))
 SUBTYPE OF (IfcCable);
END_ENTITY;

ENTITY IfcTelecomCasingElements
 SUPERTYPE OF (ONEOF
	(IfcClosure
	,IfcRack
	,IfcTelecomShelter))
	primaryPosition : IfcLineAt;
END_ENTITY;

ENTITY IfcTelecomConnector
 SUPERTYPE OF (ONEOF
	(IfcCopperConnector
	,IfcOpticalFiberConnector))
 SUBTYPE OF (IfcConnector);
END_ENTITY;

ENTITY IfcTelecomEquipmentElement
 SUPERTYPE OF (ONEOF
	(IfcConnectionInterface));
END_ENTITY;

ENTITY IfcTelecomEquipmentVolume
 SUPERTYPE OF (ONEOF
	(IfcIndoorTelecomEquipmentZone
	,IfcOutdoorTelecomEquipmentZone))
 SUBTYPE OF (IfcTelecomReservedVolume);
END_ENTITY;

ENTITY IfcTelecomInfrastructureVolume
 SUPERTYPE OF (ONEOF
	(IfcTelecomLayingInfrastructureZone))
 SUBTYPE OF (IfcTelecomReservedVolume);
END_ENTITY;

ENTITY IfcTelecomLayingInfrastructure
 SUPERTYPE OF (ONEOF
	(IfcGutter
	,IfcManhole
	,IfcTube
	,IfcDuct));
END_ENTITY;

ENTITY IfcTelecomLayingInfrastructureConnectionPoint;
	primaryAlignment : IfcLineAt;
END_ENTITY;

ENTITY IfcTelecomLayingInfrastructureZone
 SUPERTYPE OF (ONEOF
	(IfcIndoorLayingInfrastructureRoutingZone
	,IfcOutdoorLayingInfrastructureRoutingZone))
 SUBTYPE OF (IfcTelecomInfrastructureVolume);
END_ENTITY;

ENTITY IfcTelecomOutlet
 SUBTYPE OF (IfcTelecomPassiveEquipment);
END_ENTITY;

ENTITY IfcTelecomPassiveEquipment
 SUPERTYPE OF (ONEOF
	(IfcUtilityMarkingPost
	,IfcDistributionFrame
	,IfcCable
	,IfcTelecomOutlet
	,IfcOpticalAdapter
	,IfcAntenna
	,IfcOpticalSplitter
	,IfcCablingAccessory
	,IfcTelecomCasingElements))
 SUBTYPE OF (IfcAbsTelecomObject);
	primaryPosition : IfcLineAt;
END_ENTITY;

ENTITY IfcTelecomReservedVolume
 SUPERTYPE OF (ONEOF
	(IfcTelecomInfrastructureVolume
	,IfcTelecomEquipmentVolume
	,IfcIndoorTelecomZone
	,IfcOutdoorTelecomZone))
 SUBTYPE OF (IfcRailwayReservedVolume);
END_ENTITY;

ENTITY IfcTelecomShelter;
END_ENTITY;

ENTITY IfcTelecomShelter
 SUBTYPE OF (IfcTelecomCasingElements);
END_ENTITY;

ENTITY IfcTelecomSupportInfrastructure
 SUPERTYPE OF (ONEOF
	(IfcPole
	,IfcTower));
	primaryPosition : IfcAbsAt;
	secondaryPosition : IfcLineAt;
END_ENTITY;

ENTITY IfcTelecomZone;
END_ENTITY;

ENTITY IfcTelecommand;
END_ENTITY;

ENTITY IfcTelephone
 SUPERTYPE OF (ONEOF
	(IfcOfficeTelephone
	,IfcTracksideTelephone
	,IfcRailwayOperationalTelephone
	,IfcTunnelEmergencyTelephone))
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTemporarySpeedRestrictionServerTsrsCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcTemporarySpeedRestrictionServerTsrsCommunicationDeviceCabinet
 SUBTYPE OF (IfcCabinet);
END_ENTITY;

ENTITY IfcTendon
 SUBTYPE OF (IfcReinforcingElement);
	PredefinedType : OPTIONAL IfcTendonTypeEnum;
	NominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	CrossSectionArea : OPTIONAL IfcAreaMeasure;
	TensionForce : OPTIONAL IfcForceMeasure;
	PreStress : OPTIONAL IfcPressureMeasure;
	FrictionCoefficient : OPTIONAL IfcNormalisedRatioMeasure;
	AnchorageSlip : OPTIONAL IfcPositiveLengthMeasure;
	MinCurvatureRadius : OPTIONAL IfcPositiveLengthMeasure;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcTendonTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTendonTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSTRUCTURALELEMENTSDOMAIN.IFCTENDONTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType))
;
END_ENTITY;

ENTITY IfcTendonAnchor
 SUBTYPE OF (IfcReinforcingElement);
	PredefinedType : OPTIONAL IfcTendonAnchorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcTendonAnchorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTendonAnchorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSTRUCTURALELEMENTSDOMAIN.IFCTENDONANCHORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcTendonAnchorType
 SUBTYPE OF (IfcReinforcingElementType);
	PredefinedType : IfcTendonAnchorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTendonAnchorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTendonAnchorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTendonConduit
 SUBTYPE OF (IfcReinforcingElement);
	PredefinedType : IfcTendonConduitTypeEnum;
 WHERE
	CorrectPredefinedType : NOT EXISTS(PredefinedType) OR
(PredefinedType <> IfcTendonConduitTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTendonConduitTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSTRUCTURALELEMENTSDOMAIN.IFCTENDONCONDUITTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcTendonConduitType
 SUBTYPE OF (IfcReinforcingElementType);
	PredefinedType : IfcTendonConduitTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTendonConduitTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTendonConduitTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTendonType
 SUBTYPE OF (IfcReinforcingElementType);
	PredefinedType : IfcTendonTypeEnum;
	NominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
	CrossSectionArea : OPTIONAL IfcAreaMeasure;
	SheathDiameter : OPTIONAL IfcPositiveLengthMeasure;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTendonTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTendonTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTensioningEquipment
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcHydraulicsTensioner
	,IfcSpringTensioner
	,IfcBalanceWeightTensioner));
END_ENTITY;

ENTITY IfcTensioningFitting
 SUBTYPE OF (IfcOcsFitting);
END_ENTITY;

ENTITY IfcTensioningSection
 SUPERTYPE OF (ONEOF
	(IfcNeutralSection))
 SUBTYPE OF (IfcEnergyReservedVolume);
END_ENTITY;

ENTITY IfcTerminal;
END_ENTITY;

ENTITY IfcTerminalOfCtcDispatchingCenter
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcTerminalOfInterlockingSystem
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcTerminalOfMaintainance
 SUBTYPE OF (IfcControlEquipment);
END_ENTITY;

ENTITY IfcTerminationFitting
 SUBTYPE OF (IfcOcsFitting);
END_ENTITY;

ENTITY IfcTessellatedFaceSet
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPolygonalFaceSet
	,IfcTriangulatedFaceSet))
 SUBTYPE OF (IfcTessellatedItem);
	Coordinates : IfcCartesianPointList3D;
 DERIVE
	Dim : IfcDimensionCount := 3;
 INVERSE
	HasColours : SET [0:1] OF IfcIndexedColourMap FOR MappedTo;
	HasTextures : SET  OF IfcIndexedTextureMap FOR MappedTo;
END_ENTITY;

ENTITY IfcTessellatedItem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTessellatedFaceSet
	,IfcIndexedPolygonalFace))
 SUBTYPE OF (IfcGeometricRepresentationItem);
END_ENTITY;

ENTITY IfcTextLiteral
 SUPERTYPE OF (ONEOF
	(IfcTextLiteralWithExtent))
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Literal : IfcPresentableText;
	Placement : IfcAxis2Placement;
	Path : IfcTextPath;
END_ENTITY;

ENTITY IfcTextLiteralWithExtent
 SUBTYPE OF (IfcTextLiteral);
	Extent : IfcPlanarExtent;
	BoxAlignment : IfcBoxAlignment;
 WHERE
	WR31 : NOT('IFCPRESENTATIONDEFINITIONRESOURCE.IFCPLANARBOX' IN TYPEOF(Extent));
END_ENTITY;

ENTITY IfcTextStyle
 SUBTYPE OF (IfcPresentationStyle);
	TextCharacterAppearance : OPTIONAL IfcTextStyleForDefinedFont;
	TextStyle : OPTIONAL IfcTextStyleTextModel;
	TextFontStyle : IfcTextFontSelect;
	ModelOrDraughting : OPTIONAL IfcBoolean;
END_ENTITY;

ENTITY IfcTextStyleFontModel
 SUBTYPE OF (IfcPreDefinedTextFont);
	FontStyle : OPTIONAL IfcFontStyle;
	FontVariant : OPTIONAL IfcFontVariant;
	FontWeight : OPTIONAL IfcFontWeight;
	FontSize : IfcSizeSelect;
 WHERE
	MeasureOfFontSize : ('IFCMEASURERESOURCE.IFCLENGTHMEASURE' IN TYPEOF(SELF.FontSize)) AND
(SELF.FontSize > 0.);
END_ENTITY;

ENTITY IfcTextStyleForDefinedFont
 SUBTYPE OF (IfcPresentationItem);
	Colour : IfcColour;
	BackgroundColour : OPTIONAL IfcColour;
END_ENTITY;

ENTITY IfcTextStyleTextModel
 SUBTYPE OF (IfcPresentationItem);
	TextIndent : OPTIONAL IfcSizeSelect;
	TextAlign : OPTIONAL IfcTextAlignment;
	TextDecoration : OPTIONAL IfcTextDecoration;
	LetterSpacing : OPTIONAL IfcSizeSelect;
	WordSpacing : OPTIONAL IfcSizeSelect;
	TextTransform : OPTIONAL IfcTextTransformation;
	LineHeight : OPTIONAL IfcSizeSelect;
END_ENTITY;

ENTITY IfcTextile;
END_ENTITY;

ENTITY IfcTextureCoordinate
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTextureCoordinateGenerator
	,IfcIndexedTextureMap
	,IfcTextureMap))
 SUBTYPE OF (IfcPresentationItem);
	Maps : LIST  OF IfcSurfaceTexture;
END_ENTITY;

ENTITY IfcTextureCoordinateGenerator
 SUBTYPE OF (IfcTextureCoordinate);
	Mode : IfcLabel;
END_ENTITY;

ENTITY IfcTextureMap
 SUBTYPE OF (IfcTextureCoordinate);
	Vertices : LIST  OF IfcTextureVertex;
	MappedTo : IfcFace;
END_ENTITY;

ENTITY IfcTextureVertex
 SUBTYPE OF (IfcPresentationItem);
	Coordinates : LIST [2:2] OF IfcParameterValue;
END_ENTITY;

ENTITY IfcTextureVertexList
 SUBTYPE OF (IfcPresentationItem);
END_ENTITY;

ENTITY IfcTicketVendingMachine
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTieBar;
END_ENTITY;

ENTITY IfcTimePeriod;
	StartTime : IfcTime;
	EndTime : IfcTime;
END_ENTITY;

ENTITY IfcTimeSeries
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcIrregularTimeSeries
	,IfcRegularTimeSeries));
	Name : IfcLabel;
	Description : OPTIONAL IfcText;
	StartTime : IfcDateTime;
	EndTime : IfcDateTime;
	TimeSeriesDataType : IfcTimeSeriesDataTypeEnum;
	DataOrigin : IfcDataOriginEnum;
	UserDefinedDataOrigin : OPTIONAL IfcLabel;
	Unit : OPTIONAL IfcUnit;
 INVERSE
	HasExternalReference : SET  OF IfcExternalReferenceRelationship FOR RelatedResourceObjects;
END_ENTITY;

ENTITY IfcTimeSeriesValue;
END_ENTITY;

ENTITY IfcTopEquipmentAccessZone
 SUBTYPE OF (IfcEquipmentAccessZone);
END_ENTITY;

ENTITY IfcTopologicalRepresentationItem
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcPath
	,IfcFace
	,IfcFaceBound
	,IfcConnectedFaceSet
	,IfcLoop
	,IfcVertex
	,IfcEdge))
 SUBTYPE OF (IfcRepresentationItem);
END_ENTITY;

ENTITY IfcTopologyRepresentation
 SUBTYPE OF (IfcShapeModel);
 WHERE
	WR21 : SIZEOF(QUERY(temp <* SELF\IfcRepresentation.Items | 
  NOT('IFCTOPOLOGYRESOURCE.IFCTOPOLOGICALREPRESENTATIONITEM' IN TYPEOF(temp))
)) = 0

;
	WR22 : EXISTS(SELF\IfcRepresentation.RepresentationType);
	WR23 : IfcTopologyRepresentationTypes(SELF\IfcRepresentation.RepresentationType, SELF\IfcRepresentation.Items);
END_ENTITY;

ENTITY IfcToroidalSurface
 SUBTYPE OF (IfcElementarySurface);
	MajorRadius : IfcPositiveLengthMeasure;
	MinorRadius : IfcPositiveLengthMeasure;
 WHERE
	MajorLargerMinor : MinorRadius < MajorRadius;
END_ENTITY;

ENTITY IfcTower
 SUBTYPE OF (IfcTelecomSupportInfrastructure);
END_ENTITY;

ENTITY IfcTrack;
END_ENTITY;

ENTITY IfcTrackAdjustmentLayer
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Putting into operation Date : IfcDate;
	Technical Standard / Norm : IfcTechnicalStandard;
	Track / concrete slab : IfcIdentifier;
	Type : IfcTrackAdjustmentLayerType;
END_ENTITY;

ENTITY IfcTrackAlignment;
END_ENTITY;

ENTITY IfcTrackAsset;
END_ENTITY;

ENTITY IfcTrackAssetVersion;
END_ENTITY;

ENTITY IfcTrackBase
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Is Surface Galling : IfcBoolean;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Surface Galling Area : IfcReal;
	Track edge : IfcIdentifier;
END_ENTITY;

ENTITY IfcTrackCircuit;
END_ENTITY;

ENTITY IfcTrackCiruitLimits
 SUPERTYPE OF (ONEOF
	(IfcInsulatingJoint
	,IfcImpedanceTransformer))
 SUBTYPE OF (IfcAbsSignallingEquipment);
END_ENTITY;

ENTITY IfcTrackConcreteSlab
	Type : IfcConcreteSlabType;
END_ENTITY;

ENTITY IfcTrackEdge
 SUBTYPE OF (IfcEdge);
END_ENTITY;

ENTITY IfcTrackElasticCushion
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Structure composition : IfcStructureCompositionType;
	Technical Standard / Norm : IfcTechnicalStandard;
	Track / concrete slab : IfcIdentifier;
	Type : IfcElasticCushionType;
END_ENTITY;

ENTITY IfcTrackElement
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : IfcTrackElementTypeEnum;
END_ENTITY;

ENTITY IfcTrackElementAtEndOfAlignment
	At Coordinates (former: Position) : IfcNewCoordinatesGlobal;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Orientation : IfcOrientation;
	Position : IfcTrackAt;
	Purpose : IfcText;
	Putting into operation Date : IfcDate;
	Track edge : IfcIdentifier;
	Type : IfcTrackElementType;
END_ENTITY;

ENTITY IfcTrackElementType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcTrackElementTypeEnum;
END_ENTITY;

ENTITY IfcTrackIsolationLayer
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Manufacturing Date : IfcDate;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Structure composition : IfcStructureCompositionType;
	Technical Standard / Norm : IfcTechnicalStandard;
	Track edge : IfcIdentifier;
	Type : IfcTrackIsolationLayerType;
END_ENTITY;

ENTITY IfcTrackLrs;
	LRS name : IfcChar;
END_ENTITY;

ENTITY IfcTrackLrsBrokenSegment
 SUBTYPE OF (IfcTrackLrsSegment);
	Restart distance : IfcLengthNonNegative0;
	Restart name : IfcText;
END_ENTITY;

ENTITY IfcTrackLrsSegment
 SUPERTYPE OF (ONEOF
	(IfcTrackLrsBrokenSegment));
	Length : IfcLengthPositive0;
	Prefixe : IfcChar;
	Segment start name : IfcChar;
	Sequence : IfcInt;
	Start distance along : IfcLengthNonNegative0;
END_ENTITY;

ENTITY IfcTrackNode;
END_ENTITY;

ENTITY IfcTrackNode
 SUBTYPE OF (IfcNode);
END_ENTITY;

ENTITY IfcTrackPanel
	Curvature expansion : IfcInteger;
	Owner : IfcOwner;
	Sleeper spacing : IfcReal;
	Structure gauge : IfcStructureGauge;
	Track category : IfcTrackCategory;
	Track gauge : IfcReal;
	Type : IfcTrackPanelType;
	Type of overgrowth : IfcOvergrowthType;
	accessible by vehicle : IfcBoolean;
END_ENTITY;

ENTITY IfcTrackPart
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTrackSubstructure
	,IfcTurnoutSuperstructure
	,IfcDilatationSuperstructure
	,IfcPlainTrackSuperStructure
	,IfcTraverser
	,IfcTurnTable))
 SUBTYPE OF (IfcTrackstructure);
END_ENTITY;

ENTITY IfcTrackReferenceMarker
	Date of last inspection : IfcDate;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Installed on : IfcTrackReferenceMarkerInstalledObject;
	Kilometerage : IfcLineAt;
	Line : IfcIdentifier;
	Manufacturing Date : IfcDate;
	Position : IfcTrackAt;
	Putting into operation Date : IfcDate;
	Real easting : IfcNewCoordinatesGlobal;
	Real easting standard deviation : IfcReal;
	Real elevation : IfcNewCoordinatesGlobal;
	Real elevation standard deviation : IfcReal;
	Real northing : IfcNewCoordinatesGlobal;
	Real northing standard deviation : IfcReal;
	Route : IfcIdentifier;
	Track edge / nodes : IfcIdentifier;
	Type : IfcTrackReferenceMarkerType;
	Type of Geodetic Reference System : IfcGeodeticReferenceSystem;
END_ENTITY;

ENTITY IfcTrackScale
 SUBTYPE OF (IfcAbsMechanicalEquipment);
	Type : IfcTrackScaleType;
END_ENTITY;

ENTITY IfcTrackSection;
	Line Number : IfcChar;
	Track Number : IfcChar;
END_ENTITY;

ENTITY IfcTrackSlab
	Number : IfcText;
	Type : IfcTrackSlabType;
END_ENTITY;

ENTITY IfcTrackSubstructure
 SUBTYPE OF (IfcTrackPart);
END_ENTITY;

ENTITY IfcTrackSystem;
END_ENTITY;

ENTITY IfcTrackalignment;
END_ENTITY;

ENTITY IfcTracksideTelephone
 SUBTYPE OF (IfcTelephone);
END_ENTITY;

ENTITY IfcTracksideTelephonyExchange
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTracksideVehicleBarringDevice
 SUPERTYPE OF (ONEOF
	(IfcDerailer
	,IfcVehicleStop
	,IfcScotchBlock));
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcTracksideVehicleBrakingDevice
 SUPERTYPE OF (ONEOF
	(IfcTrainStop));
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcTrackstructure
 SUPERTYPE OF (ONEOF
	(IfcTrackPart));
END_ENTITY;

ENTITY IfcTractionPost
 SUPERTYPE OF (ONEOF
	(IfcSwitchingPost
	,IfcSectioningPost))
 SUBTYPE OF (IfcPowerSupplyFacilitySpatialStructure);
END_ENTITY;

ENTITY IfcTractionPowerSystem;
END_ENTITY;

ENTITY IfcTractionSwitchingEquipement;
END_ENTITY;

ENTITY IfcTractionTransformer
 SUBTYPE OF (IfcPowerTransformer);
END_ENTITY;

ENTITY IfcTrafficCapacity;
END_ENTITY;

ENTITY IfcTrafficMirror;
END_ENTITY;

ENTITY IfcTrafficRestriction
 SUPERTYPE OF (ONEOF
	(IfcHeightRestriction
	,IfcMotorway
	,IfcSpeedLimit
	,IfcWidthRestriction
	,IfcJunctionRestriction));
END_ENTITY;

ENTITY IfcTrafficSign;
END_ENTITY;

ENTITY IfcTrafficSignal;
END_ENTITY;

ENTITY IfcTrafficTechnicalMeasurements;
END_ENTITY;

ENTITY IfcTrainDetector
 SUBTYPE OF (IfcDetector);
END_ENTITY;

ENTITY IfcTrainProtectionEquipment
 SUPERTYPE OF (ONEOF
	(IfcRailwayDetonator
	,IfcCrocodile
	,IfcInductionLoop))
 SUBTYPE OF (IfcAbsSignallingEquipment);
END_ENTITY;

ENTITY IfcTrainStop
 SUBTYPE OF (IfcTracksideVehicleBrakingDevice);
END_ENTITY;

ENTITY IfcTransceiverModule
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTranscodingRateAdaptationUnit
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTransferreservation;
END_ENTITY;

ENTITY IfcTransformer
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcTransformerTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcTransformerTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcTransformerTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCELECTRICALDOMAIN.IFCTRANFORMERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcTransformer;
END_ENTITY;

ENTITY IfcTransformerBox
 SUBTYPE OF (IfcBox);
END_ENTITY;

ENTITY IfcTransformerType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcTransformerTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTransformerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTransformerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTransistionLayer;
END_ENTITY;

ENTITY IfcTransition;
END_ENTITY;

ENTITY IfcTransitionCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcTransitionCurveSegment2D
 SUBTYPE OF (IfcCurveSegment2D);
	StartRadius : OPTIONAL IfcPositiveLengthMeasure;
	EndRadius : OPTIONAL IfcPositiveLengthMeasure;
	IsStartRadiusCCW : IfcBoolean;
	IsEndRadiusCCW : IfcBoolean;
	TransitionCurveType : IfcTransitionCurveType;
END_ENTITY;

ENTITY IfcTransportElement
 SUBTYPE OF (IfcElement);
	PredefinedType : IfcTransportElementTypeSelect;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcTransportElementTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcTransportElementTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCPRODUCTEXTENSION.IFCTRANSPORTELEMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcTransportElementType
 SUBTYPE OF (IfcElementType);
	PredefinedType : IfcTransportElementTypeSelect;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTransportElementTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTransportElementTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTransportEquipment
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTransverseContractionJoint;
END_ENTITY;

ENTITY IfcTrapeziumProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	BottomXDim : IfcPositiveLengthMeasure;
	TopXDim : IfcPositiveLengthMeasure;
	YDim : IfcPositiveLengthMeasure;
	TopXOffset : IfcLengthMeasure;
END_ENTITY;

ENTITY IfcTraverser
 SUBTYPE OF (IfcTrackPart);
	Catenary system : IfcBoolean;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Length : IfcLengthPositive0;
	Manufacturing Date : IfcDate;
	Maximum Load : IfcIntegerPositive0;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Track edge : IfcIdentifier;
	Type / Manufacturer : IfcTraverserManufacturer;
	Width : IfcNewRealPositive0;
END_ENTITY;

ENTITY IfcTriangulatedFaceSet
 SUPERTYPE OF (ONEOF
	(IfcTriangulatedIrregularNetwork))
 SUBTYPE OF (IfcTessellatedFaceSet);
	Closed : OPTIONAL IfcBoolean;
 DERIVE
	NumberOfTriangles : IfcInteger := SIZEOF(CoordIndex);
END_ENTITY;

ENTITY IfcTriangulatedIrregularNetwork
 SUBTYPE OF (IfcTriangulatedFaceSet);
 WHERE
	NotClosed : SELF\IfcTriangulatedFaceSet.Closed = FALSE;
END_ENTITY;

ENTITY IfcTrimmedCurve
 SUBTYPE OF (IfcBoundedCurve);
	BasisCurve : IfcCurve;
	Trim1 : SET [1:2] OF IfcTrimmingSelect;
	Trim2 : SET [1:2] OF IfcTrimmingSelect;
	SenseAgreement : IfcBoolean;
	MasterRepresentation : IfcTrimmingPreference;
 WHERE
	Trim1ValuesConsistent : (HIINDEX(Trim1) = 1) OR (TYPEOF(Trim1[1]) <> TYPEOF(Trim1[2]));
	Trim2ValuesConsistent : (HIINDEX(Trim2) = 1) OR (TYPEOF(Trim2[1]) <> TYPEOF(Trim2[2]));
	NoTrimOfBoundedCurves : NOT('IFCGEOMETRYRESOURCE.IFCBOUNDEDCURVE' IN TYPEOF(BasisCurve));
END_ENTITY;

ENTITY IfcTube;
END_ENTITY;

ENTITY IfcTubeBundle
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcTubeBundleTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcTubeBundleTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcTubeBundleTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCTUBEBUNDLETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcTubeBundleType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcTubeBundleTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcTubeBundleTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTubeBundleTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTunnelEmergencyTelephone
 SUBTYPE OF (IfcTelephone);
END_ENTITY;

ENTITY IfcTunnelEmergencyTelephoneExchange
 SUBTYPE OF (IfcTelecomActiveEquipment);
END_ENTITY;

ENTITY IfcTurnBukle;
END_ENTITY;

ENTITY IfcTurnTable
 SUBTYPE OF (IfcTrackPart);
	Catenary system : IfcBoolean;
	Disassembly Date : IfcDate;
	Installation Date : IfcDate;
	Length : IfcLengthPositive0;
	Manufacturing Date : IfcDate;
	Maximum Load : IfcIntegerPositive0;
	Number of alignment stops : IfcInteger;
	Position : IfcTrackFromTo;
	Putting into operation Date : IfcDate;
	Track edge : IfcIdentifier;
	Type / Manufacturer : IfcTurntableManufacturer;
	Type of turning : IfcTurntableTurningType;
END_ENTITY;

ENTITY IfcTurnout;
END_ENTITY;

ENTITY IfcTurnoutCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcTurnoutHeating
 SUBTYPE OF (IfcTurnoutSignallingEquipment);
	Primary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcTurnoutPanel
 SUBTYPE OF (IfcAbsPanel);
	Branch line direction : IfcBranchLineDirection;
	Curvature expansion : IfcLengthNonNegative0;
	Curved Turnout : IfcTurnoutCurvature;
	Curved turnout radius : IfcReal;
	Junction points : IfcBoolean;
	Last cont. Sleeper : IfcNewDistancePositive0;
	Maximum Speed Limit : IfcIntegerPositive0;
	Orientation : IfcTurnoutOrientation;
	Owner : IfcOwner;
	Pin Point : IfcIdentifier;
	Share percentage : IfcReal;
	Shared Turnout : IfcBoolean;
	Sleeper spacing : IfcReal;
	Structure gauge : IfcStructureGauge;
	Track category : IfcTrackCategory;
	Track edge(s) : IfcIdentifier;
	Track gauge : IfcReal;
	Track nodes : IfcIdentifier;
	Turnout Heater : IfcTurnoutHeaterType;
	Turnout catalogue : IfcTurnoutCatalogue;
	Turnout name : IfcText;
	Type : IfcTrackPanelType;
	Type of overgrowth : IfcOvergrowthType;
	Type of turnout : IfcTypeOfTurnout;
	accessible by vehicle : IfcBoolean;
	motorized/manual drive : IfcTurnoutDriveType;
END_ENTITY;

ENTITY IfcTurnoutSignallingEquipment
 SUPERTYPE OF (ONEOF
	(IfcTurnoutHeating
	,IfcExternalLockingDevice
	,IfcPointMachine
	,IfcPointClosureDetector
	,IfcPointMachineMountingDevice))
 SUBTYPE OF (IfcAbsSignallingEquipment);
 INVERSE
	is mounted on : Turnout FOR None;
END_ENTITY;

ENTITY IfcTurnoutSuperstructure
 SUBTYPE OF (IfcTrackPart);
END_ENTITY;

ENTITY IfcTurnoutTds
 SUBTYPE OF (IfcTds);
END_ENTITY;

ENTITY IfcTypeObject
 SUPERTYPE OF (ONEOF
	(IfcTypeProcess
	,IfcTypeResource
	,IfcTypeProduct))
 SUBTYPE OF (IfcObjectDefinition);
	ApplicableOccurrence : OPTIONAL IfcIdentifier;
	HasPropertySets : OPTIONAL SET  OF IfcPropertySetDefinition;
 INVERSE
	Types : SET [0:1] OF IfcRelDefinesByType FOR RelatingType;
 WHERE
	NameRequired : EXISTS(SELF\IfcRoot.Name);
	UniquePropertySetNames : (NOT(EXISTS(HasPropertySets))) OR IfcUniquePropertySetNames(HasPropertySets);
END_ENTITY;

ENTITY IfcTypeProcess
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcTaskType
	,IfcProcedureType
	,IfcEventType))
 SUBTYPE OF (IfcTypeObject);
	Identification : OPTIONAL IfcIdentifier;
	LongDescription : OPTIONAL IfcText;
	ProcessType : OPTIONAL IfcLabel;
 INVERSE
	OperatesOn : SET  OF IfcRelAssignsToProcess FOR RelatingProcess;
END_ENTITY;

ENTITY IfcTypeProduct
 SUPERTYPE OF (ONEOF
	(IfcElementType
	,IfcWindowStyle
	,IfcSpatialElementType
	,IfcDoorStyle))
 SUBTYPE OF (IfcTypeObject);
	RepresentationMaps : OPTIONAL LIST  OF IfcRepresentationMap;
	Tag : OPTIONAL IfcLabel;
 INVERSE
	ReferencedBy : SET  OF IfcRelAssignsToProduct FOR RelatingProduct;
 WHERE
	ApplicableOccurrence : NOT(EXISTS(SELF\IfcTypeObject.Types[1])) OR
(SIZEOF(QUERY(temp <* SELF\IfcTypeObject.Types[1].RelatedObjects |
  NOT('IFCKERNEL.IFCPRODUCT' IN TYPEOF(temp)))
) = 0);
END_ENTITY;

ENTITY IfcTypeResource
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcConstructionResourceType))
 SUBTYPE OF (IfcTypeObject);
	Identification : OPTIONAL IfcIdentifier;
	LongDescription : OPTIONAL IfcText;
	ResourceType : OPTIONAL IfcLabel;
 INVERSE
	ResourceOf : SET  OF IfcRelAssignsToResource FOR RelatingResource;
END_ENTITY;

ENTITY IfcUShapeProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	Depth : IfcPositiveLengthMeasure;
	FlangeWidth : IfcPositiveLengthMeasure;
	WebThickness : IfcPositiveLengthMeasure;
	FlangeThickness : IfcPositiveLengthMeasure;
	FilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	EdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	FlangeSlope : OPTIONAL IfcPlaneAngleMeasure;
 WHERE
	ValidFlangeThickness : FlangeThickness < (Depth / 2.);
	ValidWebThickness : WebThickness < FlangeWidth;
END_ENTITY;

ENTITY IfcUnbalancingCompensator
 SUBTYPE OF (IfcCompensatorEquipment);
END_ENTITY;

ENTITY IfcUnderbridgeCantilever
 SUBTYPE OF (IfcCantileverAssembly);
END_ENTITY;

ENTITY IfcUndergroundFacilities
 SUPERTYPE OF (ONEOF
	(IfcCableChamber
	,IfcSignalConnectionPlate
	,IfcCableGantry
	,IfcCableSheathing
	,IfcElectricGutter));
END_ENTITY;

ENTITY IfcUnitAssignment;
 WHERE
	WR01 : IfcCorrectUnitAssignment(Units);
END_ENTITY;

ENTITY IfcUnitaryControlElement
 SUBTYPE OF (IfcDistributionControlElement);
	PredefinedType : OPTIONAL IfcUnitaryControlElementTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcUnitaryControlElementTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcUnitaryControlElementTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
('IFCBUILDINGCONTROLSDOMAIN.IFCUNITARYCONTROLELEMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcUnitaryControlElement
 SUBTYPE OF (IfcSubstationControlEquipment);
END_ENTITY;

ENTITY IfcUnitaryControlElementType
 SUBTYPE OF (IfcDistributionControlElementType);
	PredefinedType : IfcUnitaryControlElementTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcUnitaryControlElementTypeEnum.USERDEFINED) OR
((PredefinedType = IfcUnitaryControlElementTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcUnitaryEquipment
 SUBTYPE OF (IfcEnergyConversionDevice);
	PredefinedType : OPTIONAL IfcUnitaryEquipmentTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcUnitaryEquipmentTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcUnitaryEquipmentTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCUNITARYEQUIPMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcUnitaryEquipmentType
 SUBTYPE OF (IfcEnergyConversionDeviceType);
	PredefinedType : IfcUnitaryEquipmentTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcUnitaryEquipmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcUnitaryEquipmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcUps;
END_ENTITY;

ENTITY IfcUtilityMarkingPost
 SUBTYPE OF (IfcTelecomPassiveEquipment);
END_ENTITY;

ENTITY IfcValve
 SUBTYPE OF (IfcFlowController);
	PredefinedType : OPTIONAL IfcValveTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcValveTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcValveTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCVALVETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcValveType
 SUBTYPE OF (IfcFlowControllerType);
	PredefinedType : IfcValveTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcValveTypeEnum.USERDEFINED) OR
((PredefinedType = IfcValveTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcVaristor
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcVector
 SUBTYPE OF (IfcGeometricRepresentationItem);
	Orientation : IfcDirection;
	Magnitude : IfcLengthMeasure;
 DERIVE
	Dim : IfcDimensionCount := Orientation.Dim;
 WHERE
	MagGreaterOrEqualZero : Magnitude >= 0.0;
END_ENTITY;

ENTITY IfcVehicleParapet
 SUBTYPE OF (IfcSafetyBarrier);
END_ENTITY;

ENTITY IfcVehicleRestraintSystem
 SUBTYPE OF (IfcRoadrestraintsystem);
END_ENTITY;

ENTITY IfcVehicleStop
 SUBTYPE OF (IfcTracksideVehicleBarringDevice);
	Primary positioning : IfcLineAt;
	Secondary positioning : IfcTrackAt;
END_ENTITY;

ENTITY IfcVertex
 SUPERTYPE OF (ONEOF
	(IfcVertexPoint))
 SUBTYPE OF (IfcTopologicalRepresentationItem);
END_ENTITY;

ENTITY IfcVertexLoop
 SUBTYPE OF (IfcLoop);
	LoopVertex : IfcVertex;
END_ENTITY;

ENTITY IfcVertexPoint
 SUBTYPE OF (IfcVertex);
	VertexGeometry : IfcPoint;
END_ENTITY;

ENTITY IfcVibrationDamper
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : OPTIONAL IfcVibrationDamperTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcVibrationDamperTypeEnum.USERDEFINED) OR
((PredefinedType = IfcVibrationDamperTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCSHAREDCOMPONENTELEMENTS.IFCVIBRATIONDAMPERTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcVibrationDamperType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : OPTIONAL IfcVibrationDamperTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcVibrationDamperTypeEnum.USERDEFINED) OR
((PredefinedType = IfcVibrationDamperTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcVibrationIsolator
 SUBTYPE OF (IfcElementComponent);
	PredefinedType : OPTIONAL IfcVibrationIsolatorTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcVibrationIsolatorTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcVibrationIsolatorTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCHVACDOMAIN.IFCVIBRATIONISOLATORTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcVibrationIsolatorType
 SUBTYPE OF (IfcElementComponentType);
	PredefinedType : IfcVibrationIsolatorTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcVibrationIsolatorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcVibrationIsolatorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcVirtualElement
 SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcVirtualGridIntersection;
	IntersectingAxes : LIST [2:2] OF IfcGridAxis;
	OffsetDistances : LIST [2:3] OF IfcLengthMeasure;
END_ENTITY;

ENTITY IfcVisibilitySplay;
END_ENTITY;

ENTITY IfcVoidStratum
 SUBTYPE OF (IfcGeotechnicalStratum);
END_ENTITY;

ENTITY IfcVoidingFeature
 SUBTYPE OF (IfcFeatureElementSubtraction);
	PredefinedType : OPTIONAL IfcVoidingFeatureTypeEnum;
 WHERE
	HasObjectType : NOT EXISTS(PredefinedType) OR (PredefinedType <> IfcVoidingFeatureTypeEnum.USERDEFINED) OR EXISTS(SELF\IfcObject.ObjectType);
END_ENTITY;

ENTITY IfcVoltageLimiter
 SUBTYPE OF (IfcProtectionElement);
END_ENTITY;

ENTITY IfcVoltageTransformer
 SUPERTYPE OF (ONEOF
	(IfcVoltmetricRelay))
 SUBTYPE OF (IfcInstrumentTransformer);
END_ENTITY;

ENTITY IfcVoltmetricRelay
 SUBTYPE OF (IfcVoltageTransformer);
END_ENTITY;

ENTITY IfcWall
 SUPERTYPE OF (ONEOF
	(IfcWallStandardCase
	,IfcWallElementedCase))
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcWallTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
 (PredefinedType <> IfcWallTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcWallTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
  ('IFCSHAREDBLDGELEMENTS.IFCWALLTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcWallElementedCase
 SUBTYPE OF (IfcWall);
 WHERE
	HasDecomposition : HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) > 0;
END_ENTITY;

ENTITY IfcWallStandardCase
 SUBTYPE OF (IfcWall);
 WHERE
	HasMaterialLayerSetUsage : SIZEOF (QUERY(temp <* USEDIN(SELF, 'IFCKERNEL.IFCRELASSOCIATES.RELATEDOBJECTS') |
              ('IFCPRODUCTEXTENSION.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)) AND
              ('IFCMATERIALRESOURCE.IFCMATERIALLAYERSETUSAGE' IN TYPEOF(temp.RelatingMaterial))
              )) = 1;
END_ENTITY;

ENTITY IfcWallType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcWallTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcWallTypeEnum.USERDEFINED) OR
((PredefinedType = IfcWallTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcWasteTerminal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcWasteTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType <> IfcWasteTerminalTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcWasteTerminalTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR 
  ('IFCPLUMBINGFIREPROTECTIONDOMAIN.IFCWASTETERMINALTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcWasteTerminalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcWasteTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcWasteTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcWasteTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcWaterStratum
 SUBTYPE OF (IfcGeotechnicalStratum);
END_ENTITY;

ENTITY IfcWeldedJoint
 SUBTYPE OF (IfcAbsJoint);
	Created : IfcJointInstaller;
	Is welding in factory : IfcBoolean;
	Temperature during installation : IfcThermodynamictemperature;
	Type : IfcWeldedJointWeldingType;
END_ENTITY;

ENTITY IfcWheelDetector
END_ENTITY;

ENTITY IfcWidthRestriction
 SUBTYPE OF (IfcTrafficRestriction);
END_ENTITY;

ENTITY IfcWindow
 SUPERTYPE OF (ONEOF
	(IfcWindowStandardCase))
 SUBTYPE OF (IfcBuiltElement);
	OverallHeight : OPTIONAL IfcPositiveLengthMeasure;
	OverallWidth : OPTIONAL IfcPositiveLengthMeasure;
	PredefinedType : OPTIONAL IfcWindowTypeEnum;
	PartitioningType : OPTIONAL IfcWindowTypePartitioningEnum;
	UserDefinedPartitioningType : OPTIONAL IfcLabel;
 WHERE
	CorrectStyleAssigned : (SIZEOF(IsTypedBy) = 0) 
OR ('IFCSHAREDBLDGELEMENTS.IFCWINDOWTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcWindowLiningProperties
 SUBTYPE OF (IfcPreDefinedPropertySet);
	LiningDepth : OPTIONAL IfcPositiveLengthMeasure;
	LiningThickness : OPTIONAL IfcNonNegativeLengthMeasure;
	TransomThickness : OPTIONAL IfcNonNegativeLengthMeasure;
	MullionThickness : OPTIONAL IfcNonNegativeLengthMeasure;
	FirstTransomOffset : OPTIONAL IfcNormalisedRatioMeasure;
	SecondTransomOffset : OPTIONAL IfcNormalisedRatioMeasure;
	FirstMullionOffset : OPTIONAL IfcNormalisedRatioMeasure;
	SecondMullionOffset : OPTIONAL IfcNormalisedRatioMeasure;
	ShapeAspectStyle : OPTIONAL IfcShapeAspect;
	LiningOffset : OPTIONAL IfcLengthMeasure;
	LiningToPanelOffsetX : OPTIONAL IfcLengthMeasure;
	LiningToPanelOffsetY : OPTIONAL IfcLengthMeasure;
 WHERE
	WR31 : NOT(EXISTS(LiningDepth) AND NOT(EXISTS(LiningThickness)));
	WR32 : NOT(NOT(EXISTS(FirstTransomOffset)) AND EXISTS(SecondTransomOffset));
	WR33 : NOT(NOT(EXISTS(FirstMullionOffset)) AND EXISTS(SecondMullionOffset));
	WR34 : (EXISTS(SELF\IfcPropertySetDefinition.DefinesType[1])) 
AND 
(
 ('IFCSHAREDBLDGELEMENTS.IFCWINDOWTYPE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
  OR
 ('IFCARCHITECTUREDOMAIN.IFCWINDOWSTYLE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
);
END_ENTITY;

ENTITY IfcWindowPanelProperties
 SUBTYPE OF (IfcPreDefinedPropertySet);
	OperationType : IfcWindowPanelOperationEnum;
	PanelPosition : IfcWindowPanelPositionEnum;
	FrameDepth : OPTIONAL IfcPositiveLengthMeasure;
	FrameThickness : OPTIONAL IfcPositiveLengthMeasure;
	ShapeAspectStyle : OPTIONAL IfcShapeAspect;
 WHERE
	ApplicableToType : (EXISTS(SELF\IfcPropertySetDefinition.DefinesType[1])) 
AND 
(
 ('IFCSHAREDBLDGELEMENTS.IFCWINDOWTYPE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
  OR
 ('IFCARCHITECTUREDOMAIN.IFCWINDOWSTYLE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]))
);
END_ENTITY;

ENTITY IfcWindowStandardCase
 SUBTYPE OF (IfcWindow);
END_ENTITY;

ENTITY IfcWindowStyle
 SUBTYPE OF (IfcTypeProduct);
	ConstructionType : IfcWindowStyleConstructionEnum;
	OperationType : IfcWindowStyleOperationEnum;
	ParameterTakesPrecedence : IfcBoolean;
	Sizeable : IfcBoolean;
END_ENTITY;

ENTITY IfcWindowType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcWindowTypeEnum;
	PartitioningType : IfcWindowTypePartitioningEnum;
	ParameterTakesPrecedence : OPTIONAL IfcBoolean;
	UserDefinedPartitioningType : OPTIONAL IfcLabel;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcWindowTypeEnum.USERDEFINED) OR
((PredefinedType = IfcWindowTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcWirePair;
END_ENTITY;

ENTITY IfcWirePairEndpoint;
END_ENTITY;

ENTITY IfcWireRope;
END_ENTITY;

ENTITY IfcWiredCommunicationPort;
END_ENTITY;

ENTITY IfcWirelessCommunicationPort;
END_ENTITY;

ENTITY IfcWorkCalendar
 SUBTYPE OF (IfcControl);
	WorkingTimes : OPTIONAL SET  OF IfcWorkTime;
	ExceptionTimes : OPTIONAL SET  OF IfcWorkTime;
	PredefinedType : OPTIONAL IfcWorkCalendarTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR (PredefinedType <> IfcWorkCalendarTypeEnum.USERDEFINED) OR
((PredefinedType = IfcWorkCalendarTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcWorkControl
 ABSTRACT SUPERTYPE OF (ONEOF
	(IfcWorkPlan
	,IfcWorkSchedule))
 SUBTYPE OF (IfcControl);
	CreationDate : IfcDateTime;
	Creators : OPTIONAL SET  OF IfcPerson;
	Purpose : OPTIONAL IfcLabel;
	Duration : OPTIONAL IfcDuration;
	TotalFloat : OPTIONAL IfcDuration;
	StartTime : IfcDateTime;
	FinishTime : OPTIONAL IfcDateTime;
END_ENTITY;

ENTITY IfcWorkPlan
 SUBTYPE OF (IfcWorkControl);
	PredefinedType : OPTIONAL IfcWorkPlanTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR (PredefinedType <> IfcWorkPlanTypeEnum.USERDEFINED) OR
((PredefinedType = IfcWorkPlanTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcWorkSchedule
 SUBTYPE OF (IfcWorkControl);
	PredefinedType : OPTIONAL IfcWorkScheduleTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR (PredefinedType <> IfcWorkScheduleTypeEnum.USERDEFINED) OR
((PredefinedType = IfcWorkScheduleTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcWorkTime
 SUBTYPE OF (IfcSchedulingTime);
	RecurrencePattern : OPTIONAL IfcRecurrencePattern;
	Start : OPTIONAL IfcDate;
	Finish : OPTIONAL IfcDate;
END_ENTITY;

ENTITY IfcZShapeProfileDef
 SUBTYPE OF (IfcParameterizedProfileDef);
	Depth : IfcPositiveLengthMeasure;
	FlangeWidth : IfcPositiveLengthMeasure;
	WebThickness : IfcPositiveLengthMeasure;
	FlangeThickness : IfcPositiveLengthMeasure;
	FilletRadius : OPTIONAL IfcNonNegativeLengthMeasure;
	EdgeRadius : OPTIONAL IfcNonNegativeLengthMeasure;
 WHERE
	ValidFlangeThickness : FlangeThickness < (Depth / 2.);
END_ENTITY;

ENTITY IfcZone
 SUBTYPE OF (IfcSystem);
	LongName : OPTIONAL IfcLabel;
 WHERE
	WR1 : (SIZEOF(SELF\IfcGroup.IsGroupedBy) = 0) OR
  (SIZEOF (QUERY (temp <* SELF\IfcGroup.IsGroupedBy[1].RelatedObjects |  
    NOT(('IFCPRODUCTEXTENSION.IFCZONE' IN TYPEOF(temp)) OR 
    ('IFCPRODUCTEXTENSION.IFCSPACE' IN TYPEOF(temp)) OR
    ('IFCPRODUCTEXTENSION.IFCSPATIALZONE' IN TYPEOF(temp))
  ))) = 0);
END_ENTITY;

FUNCTION IfcAssociatedSurface
(Arg : IfcPcurve) : IfcSurface;

   LOCAL
     Surf : IfcSurface;
   END_LOCAL;
   
   Surf := Arg\IfcPcurve.BasisSurface;
   
   RETURN(Surf);
END_FUNCTION;

FUNCTION IfcBaseAxis
  (Dim : INTEGER; 
   Axis1, Axis2, Axis3 : IfcDirection) 
    : LIST [2:3] OF IfcDirection;

LOCAL
  U : LIST [2:3] OF IfcDirection;
  Factor : REAL;
  D1, D2 : IfcDirection;
END_LOCAL;

  IF (Dim = 3) THEN 
    D1 := NVL(IfcNormalise(Axis3), IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,0.0,1.0]));
    D2 := IfcFirstProjAxis(D1, Axis1);
    U  := [D2, IfcSecondProjAxis(D1, D2, Axis2), D1];
  ELSE
    IF EXISTS(Axis1) THEN
      D1 := IfcNormalise(Axis1);
      U  := [D1, IfcOrthogonalComplement(D1)];
      IF EXISTS(Axis2) THEN
        Factor := IfcDotProduct(Axis2, U[2]);
        IF (Factor < 0.0) THEN
          U[2].DirectionRatios[1] := -U[2].DirectionRatios[1];
          U[2].DirectionRatios[2] := -U[2].DirectionRatios[2];
        END_IF;
      END_IF;
    ELSE
      IF EXISTS(Axis2) THEN
        D1 := IfcNormalise(Axis2);
        U  := [IfcOrthogonalComplement(D1), D1];
        U[1].DirectionRatios[1] := -U[1].DirectionRatios[1];
        U[1].DirectionRatios[2] := -U[1].DirectionRatios[2];
        ELSE
          U := [IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.0, 0.0]), 
                IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0, 1.0])];
      END_IF;
    END_IF;
  END_IF;
  RETURN(U);
END_FUNCTION;

FUNCTION IfcBooleanChoose
(B : BOOLEAN ;
     Choice1, Choice2 : GENERIC : Item) : GENERIC : Item;
  IF B THEN
     RETURN (Choice1);
  ELSE
     RETURN (Choice2);
  END_IF;
END_FUNCTION;

FUNCTION IfcBuild2Axes
  (RefDirection : IfcDirection)
    : LIST [2:2] OF IfcDirection;
LOCAL
  D : IfcDirection := NVL(IfcNormalise(RefDirection),
      IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.0,0.0]));
END_LOCAL;
  RETURN([D, IfcOrthogonalComplement(D)]);
END_FUNCTION;

FUNCTION IfcBuildAxes
  (Axis, RefDirection : IfcDirection) 
    : LIST [3:3] OF IfcDirection;
LOCAL
  D1, D2 : IfcDirection;
END_LOCAL;
  D1 := NVL(IfcNormalise(Axis), IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,0.0,1.0]));
  D2 := IfcFirstProjAxis(D1, RefDirection);
  RETURN ([D2, IfcNormalise(IfcCrossProduct(D1,D2))\IfcVector.Orientation, D1]);
END_FUNCTION;

FUNCTION IfcConsecutiveSegments
  (Segments : LIST [1:?] OF IfcSegmentIndexSelect)
  : BOOLEAN;

 LOCAL
  Result : BOOLEAN := TRUE;
 END_LOCAL;

  REPEAT i := 1 TO (HIINDEX(Segments)-1);
    IF Segments[i][HIINDEX(Segments[i])] <> Segments[i+1][1] THEN
      BEGIN
        Result := FALSE;
        ESCAPE;
      END;
  END_IF;
  END_REPEAT;

  RETURN (Result);
END_FUNCTION;

FUNCTION IfcConstraintsParamBSpline
( Degree, UpKnots, UpCp : INTEGER;
  KnotMult : LIST OF INTEGER;
  Knots : LIST OF IfcParameterValue ) 
: BOOLEAN;


  LOCAL
    Result : BOOLEAN := TRUE;
    K, Sum : INTEGER;
  END_LOCAL;

  (* Find sum of knot multiplicities. *)
  Sum := KnotMult[1];
  REPEAT i := 2 TO UpKnots;
    Sum := Sum + KnotMult[i];
  END_REPEAT;

  (* Check limits holding for all B-spline parametrisations *)
  IF (Degree < 1) OR (UpKnots < 2) OR (UpCp < Degree) OR
    (Sum <> (Degree + UpCp + 2)) THEN
    Result := FALSE;
    RETURN(Result);
  END_IF;

  K := KnotMult[1];
  IF (K < 1) OR (K > Degree + 1) THEN
    Result := FALSE;
    RETURN(Result);
  END_IF;

  REPEAT i := 2 TO UpKnots;
    IF (KnotMult[i] < 1) OR (Knots[i] <= Knots[i-1]) THEN
      Result := FALSE;
      RETURN(Result);
    END_IF;
    K := KnotMult[i];
    IF (i < UpKnots) AND (K > Degree) THEN
      Result := FALSE;
      RETURN(Result);
    END_IF;
    IF (i = UpKnots) AND (K > Degree + 1) THEN
      Result := FALSE;
      RETURN(Result);
    END_IF;
  END_REPEAT;

  RETURN(result);
END_FUNCTION;

FUNCTION IfcConvertDirectionInto2D
    (Direction : IfcDirection)
    : IfcDirection;
  
  LOCAL
    Direction2D : IfcDirection := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.,1.]);
  END_LOCAL;
  
  Direction2D.DirectionRatios[1] := Direction.DirectionRatios[1];
  Direction2D.DirectionRatios[2] := Direction.DirectionRatios[2];
  
  RETURN (Direction2D);

END_FUNCTION;

FUNCTION IfcCorrectDimensions
(m   : IfcUnitEnum; Dim : IfcDimensionalExponents) : LOGICAL;  
CASE m OF
  LENGTHUNIT : IF
    Dim = (IfcDimensionalExponents (1, 0, 0, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  MASSUNIT : IF
    Dim = (IfcDimensionalExponents (0, 1, 0, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  TIMEUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 1, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ELECTRICCURRENTUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 0, 1, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  THERMODYNAMICTEMPERATUREUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 0, 0, 1, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  AMOUNTOFSUBSTANCEUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 1, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  LUMINOUSINTENSITYUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 1))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  PLANEANGLEUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  SOLIDANGLEUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  AREAUNIT : IF
    Dim = (IfcDimensionalExponents (2, 0, 0, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  VOLUMEUNIT : IF
    Dim = (IfcDimensionalExponents (3, 0, 0, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;

  ABSORBEDDOSEUNIT : IF
    Dim = (IfcDimensionalExponents (2, 0, -2, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  RADIOACTIVITYUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, -1, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ELECTRICCAPACITANCEUNIT : IF
    Dim = (IfcDimensionalExponents (-2, -1, 4, 2, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  DOSEEQUIVALENTUNIT : IF
    Dim = (IfcDimensionalExponents (2, 0, -2, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ELECTRICCHARGEUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 1, 1, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ELECTRICCONDUCTANCEUNIT : IF
    Dim = (IfcDimensionalExponents (-2, -1, 3, 2, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ELECTRICVOLTAGEUNIT : IF
    Dim = (IfcDimensionalExponents (2, 1, -3, -1, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ELECTRICRESISTANCEUNIT : IF
    Dim = (IfcDimensionalExponents (2, 1, -3, -2, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ENERGYUNIT : IF
    Dim = (IfcDimensionalExponents (2, 1, -2, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  FORCEUNIT : IF
    Dim = (IfcDimensionalExponents (1, 1, -2, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  FREQUENCYUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, -1, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  INDUCTANCEUNIT : IF
    Dim = (IfcDimensionalExponents (2, 1, -2, -2, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  ILLUMINANCEUNIT : IF
    Dim = (IfcDimensionalExponents (-2, 0, 0, 0, 0, 0, 1))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  LUMINOUSFLUXUNIT : IF
    Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 1))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  MAGNETICFLUXUNIT : IF
    Dim = (IfcDimensionalExponents (2, 1, -2, -1, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  MAGNETICFLUXDENSITYUNIT : IF
    Dim = (IfcDimensionalExponents (0, 1, -2, -1, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  POWERUNIT : IF
    Dim = (IfcDimensionalExponents (2, 1, -3, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;
  PRESSUREUNIT : IF
    Dim = (IfcDimensionalExponents (-1, 1, -2, 0, 0, 0, 0))
      THEN RETURN(TRUE);
      ELSE RETURN(FALSE);
    END_IF;

  OTHERWISE :
    RETURN (UNKNOWN);
END_CASE;
END_FUNCTION;

FUNCTION IfcCorrectFillAreaStyle
  (Styles : SET[1:?] OF IfcFillStyleSelect)
  :LOGICAL;

LOCAL
   Hatching : INTEGER := 0;
   Tiles    : INTEGER := 0;
   Colour   : INTEGER := 0;
   External : INTEGER := 0;
END_LOCAL;


External := SIZEOF(QUERY(Style <* Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCEXTERNALLYDEFINEDHATCHSTYLE' IN
   TYPEOF(Style)));

Hatching  := SIZEOF(QUERY(Style <* Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCFILLAREASTYLEHATCHING' IN
   TYPEOF(Style)));

Tiles     := SIZEOF(QUERY(Style <* Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCFILLAREASTYLETILES' IN
   TYPEOF(Style)));

Colour    := SIZEOF(QUERY(Style <* Styles |
  'IFCPRESENTATIONAPPEARANCERESOURCE.IFCCOLOUR' IN
   TYPEOF(Style)));


IF (External > 1) THEN
  RETURN (FALSE);
END_IF;


IF ((External = 1) AND ((Hatching > 0) OR (Tiles > 0) OR (Colour > 0))) THEN
  RETURN (FALSE);
END_IF;


IF (Colour > 1) THEN
  RETURN (FALSE);
END_IF;

IF ((Hatching > 0) AND (Tiles >0)) THEN
  RETURN (FALSE);
END_IF;

RETURN(TRUE);
END_FUNCTION;

FUNCTION IfcCorrectLocalPlacement
  (AxisPlacement:IfcAxis2Placement; 
   RelPlacement : IfcObjectPlacement):LOGICAL;

  IF (EXISTS(RelPlacement)) THEN
    IF ('IFCGEOMETRICCONSTRAINTRESOURCE.IFCGRIDPLACEMENT' IN TYPEOF(RelPlacement)) THEN
      RETURN(?);
    END_IF;
    IF ('IFCGEOMETRICCONSTRAINTRESOURCE.IFCLOCALPLACEMENT' IN TYPEOF(RelPlacement)) THEN
      IF ('IFCGEOMETRYRESOURCE.IFCAXIS2PLACEMENT2D' IN TYPEOF(AxisPlacement)) THEN
        RETURN(TRUE);
      END_IF;
      IF ('IFCGEOMETRYRESOURCE.IFCAXIS2PLACEMENT3D' IN TYPEOF(AxisPlacement)) THEN
        IF (RelPlacement\IfcLocalPlacement.RelativePlacement.Dim = 3) THEN
          RETURN(TRUE);
        ELSE
          RETURN(FALSE);
        END_IF;
      END_IF;
    END_IF;
  ELSE
    RETURN(TRUE);  
  END_IF;
  RETURN(?);
END_FUNCTION;

FUNCTION IfcCorrectObjectAssignment
  (Constraint: IfcObjectTypeEnum; Objects : SET[1:?] OF IfcObjectDefinition)
  : LOGICAL ;
  
LOCAL
  Count : INTEGER := 0;
END_LOCAL;

    IF NOT(EXISTS(Constraint)) THEN 
      RETURN(TRUE);
    END_IF;
  
    CASE Constraint OF
      IfcObjectTypeEnum.NOTDEFINED : RETURN(TRUE);
      IfcObjectTypeEnum.PRODUCT :
        BEGIN
          Count := SIZEOF(QUERY(temp <* Objects | NOT('IFCKERNEL.IFCPRODUCT' IN TYPEOF(temp))));
          RETURN(Count = 0);
        END;
      IfcObjectTypeEnum.PROCESS :
        BEGIN
          Count := SIZEOF(QUERY(temp <* Objects | NOT('IFCKERNEL.IFCPROCESS' IN TYPEOF(temp))));
          RETURN(Count = 0);
        END;
      IfcObjectTypeEnum.CONTROL :
        BEGIN
          Count := SIZEOF(QUERY(temp <* Objects | NOT('IFCKERNEL.IFCCONTROL' IN TYPEOF(temp))));
          RETURN(Count = 0);
        END;
      IfcObjectTypeEnum.RESOURCE :
        BEGIN
          Count := SIZEOF(QUERY(temp <* Objects | NOT('IFCKERNEL.IFCRESOURCE' IN TYPEOF(temp))));
          RETURN(Count = 0);
        END;
      IfcObjectTypeEnum.ACTOR :
        BEGIN
          Count := SIZEOF(QUERY(temp <* Objects | NOT('IFCKERNEL.IFCACTOR' IN TYPEOF(temp))));
          RETURN(Count = 0);
        END;
      IfcObjectTypeEnum.GROUP :
        BEGIN
          Count := SIZEOF(QUERY(temp <* Objects | NOT('IFCKERNEL.IFCGROUP' IN TYPEOF(temp))));
          RETURN(Count = 0);
        END;
      IfcObjectTypeEnum.PROJECT :
        BEGIN
          Count := SIZEOF(QUERY(temp <* Objects | NOT('IFCKERNEL.IFCPROJECT' IN TYPEOF(temp))));
          RETURN(Count = 0);
        END;
      OTHERWISE : RETURN(?);
    END_CASE;

END_FUNCTION;

FUNCTION IfcCorrectUnitAssignment
  (Units : SET [1:?] OF IfcUnit)
   : LOGICAL;

  LOCAL
    NamedUnitNumber    : INTEGER := 0;
    DerivedUnitNumber  : INTEGER := 0;
    MonetaryUnitNumber : INTEGER := 0;
    NamedUnitNames     : SET OF IfcUnitEnum := [];
    DerivedUnitNames   : SET OF IfcDerivedUnitEnum := [];
  END_LOCAL;

  NamedUnitNumber    := SIZEOF(QUERY(temp <* Units | ('IFCMEASURERESOURCE.IFCNAMEDUNIT' IN TYPEOF(temp)) AND NOT(temp\IfcNamedUnit.UnitType = IfcUnitEnum.USERDEFINED)));
  DerivedUnitNumber  := SIZEOF(QUERY(temp <* Units | ('IFCMEASURERESOURCE.IFCDERIVEDUNIT' IN TYPEOF(temp)) AND NOT(temp\IfcDerivedUnit.UnitType = IfcDerivedUnitEnum.USERDEFINED)));
  MonetaryUnitNumber := SIZEOF(QUERY(temp <* Units |  'IFCMEASURERESOURCE.IFCMONETARYUNIT' IN TYPEOF(temp)));

  REPEAT i := 1 TO SIZEOF(Units);
    IF (('IFCMEASURERESOURCE.IFCNAMEDUNIT' IN TYPEOF(Units[i])) AND NOT(Units[i]\IfcNamedUnit.UnitType = IfcUnitEnum.USERDEFINED)) THEN
        NamedUnitNames := NamedUnitNames + Units[i]\IfcNamedUnit.UnitType;
    END_IF;
    IF (('IFCMEASURERESOURCE.IFCDERIVEDUNIT' IN TYPEOF(Units[i])) AND NOT(Units[i]\IfcDerivedUnit.UnitType = IfcDerivedUnitEnum.USERDEFINED)) THEN
        DerivedUnitNames := DerivedUnitNames + Units[i]\IfcDerivedUnit.UnitType;
    END_IF;
  END_REPEAT;

  RETURN((SIZEOF(NamedUnitNames) = NamedUnitNumber) AND (SIZEOF(DerivedUnitNames) = DerivedUnitNumber) AND (MonetaryUnitNumber <= 1));
END_FUNCTION;

FUNCTION IfcCrossProduct
  (Arg1, Arg2 : IfcDirection) 
    : IfcVector;
LOCAL
  Mag : REAL;
  Res : IfcDirection;
  V1,V2  : LIST[3:3] OF REAL;
  Result : IfcVector;
END_LOCAL;

  IF (NOT EXISTS (Arg1) OR (Arg1.Dim = 2)) OR (NOT EXISTS (Arg2) OR (Arg2.Dim = 2)) THEN
    RETURN(?);
  ELSE
    BEGIN
      V1  := IfcNormalise(Arg1)\IfcDirection.DirectionRatios;

      V2  := IfcNormalise(Arg2)\IfcDirection.DirectionRatios;
      Res := IfcRepresentationItem() || IfcGeometricRepresentationItem () 
             || IfcDirection([(V1[2]*V2[3] - V1[3]*V2[2]), (V1[3]*V2[1] - V1[1]*V2[3]), (V1[1]*V2[2] - V1[2]*V2[1])]);
      Mag := 0.0;
      REPEAT i := 1 TO 3;
        Mag := Mag + Res.DirectionRatios[i]*Res.DirectionRatios[i];
      END_REPEAT;
      IF (Mag > 0.0) THEN
        Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Res, SQRT(Mag));
      ELSE
        Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Arg1, 0.0);
      END_IF;
      RETURN(Result);
    END;
  END_IF;
END_FUNCTION;

FUNCTION IfcCurveDim
(Curve : IfcCurve)
       : IfcDimensionCount;

  IF ('IFCGEOMETRYRESOURCE.IFCLINE' IN TYPEOF(Curve))
    THEN RETURN(Curve\IfcLine.Pnt.Dim);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCCONIC' IN TYPEOF(Curve))
    THEN RETURN(Curve\IfcConic.Position.Dim);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCPOLYLINE' IN TYPEOF(Curve))
    THEN RETURN(Curve\IfcPolyline.Points[1].Dim);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCTRIMMEDCURVE' IN TYPEOF(Curve))
    THEN RETURN(IfcCurveDim(Curve\IfcTrimmedCurve.BasisCurve));
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCCOMPOSITECURVE' IN TYPEOF(Curve))
    THEN RETURN(Curve\IfcCompositeCurve.Segments[1].Dim);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCBSPLINECURVE' IN TYPEOF(Curve))
    THEN RETURN(Curve\IfcBSplineCurve.ControlPointsList[1].Dim);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCOFFSETCURVE2D' IN TYPEOF(Curve))
    THEN RETURN(2); 
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCOFFSETCURVE3D' IN TYPEOF(Curve))
    THEN RETURN(3);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCOFFSETCURVEBYDISTANCES' IN TYPEOF(Curve))
    THEN RETURN(3);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCCURVESEGMENT2D' IN TYPEOF(Curve))
    THEN RETURN(2);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCALIGNMENTCURVE' IN TYPEOF(Curve))
    THEN RETURN(3);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCPCURVE' IN TYPEOF(Curve))
    THEN RETURN(3);
  END_IF;
  IF ('IFCGEOMETRYRESOURCE.IFCINDEXEDPOLYCURVE' IN TYPEOF(Curve))
    THEN RETURN(Curve\IfcIndexedPolyCurve.Points.Dim);
  END_IF;
RETURN (?);
END_FUNCTION;

FUNCTION IfcCurveWeightsPositive
( B: IfcRationalBSplineCurveWithKnots)
: BOOLEAN;

  LOCAL
    Result : BOOLEAN := TRUE;
  END_LOCAL;

  REPEAT i := 0 TO B.UpperIndexOnControlPoints;
    IF B.Weights[i] <= 0.0  THEN
      Result := FALSE;
      RETURN(Result);
    END_IF;
  END_REPEAT;
  RETURN(Result);
END_FUNCTION;

FUNCTION IfcDeriveDimensionalExponents
    (UnitElements : SET [1:?] OF IfcDerivedUnitElement)
    : IfcDimensionalExponents;  
    LOCAL
    Result : IfcDimensionalExponents :=
            IfcDimensionalExponents(0, 0, 0, 0, 0, 0, 0);  
    END_LOCAL;
    REPEAT i := LOINDEX(UnitElements) TO HIINDEX(UnitElements);
        Result.LengthExponent := Result.LengthExponent +
          (UnitElements[i].Exponent *
           UnitElements[i].Unit.Dimensions.LengthExponent);
        Result.MassExponent := Result.MassExponent  +
          (UnitElements[i].Exponent *
           UnitElements[i].Unit.Dimensions.MassExponent);
        Result.TimeExponent := Result.TimeExponent +
          (UnitElements[i].Exponent *
           UnitElements[i].Unit.Dimensions.TimeExponent);
        Result.ElectricCurrentExponent := Result.ElectricCurrentExponent +
          (UnitElements[i].Exponent *
           UnitElements[i].Unit.Dimensions.ElectricCurrentExponent);
        Result.ThermodynamicTemperatureExponent := Result.ThermodynamicTemperatureExponent +
          (UnitElements[i].Exponent *
           UnitElements[i].Unit.Dimensions.ThermodynamicTemperatureExponent);
        Result.AmountOfSubstanceExponent := Result.AmountOfSubstanceExponent +
          (UnitElements[i].Exponent *
           UnitElements[i].Unit.Dimensions.AmountOfSubstanceExponent);
        Result.LuminousIntensityExponent := Result.LuminousIntensityExponent +
          (UnitElements[i].Exponent *
           UnitElements[i].Unit.Dimensions.LuminousIntensityExponent);
    END_REPEAT;  
    RETURN (Result);
END_FUNCTION;

FUNCTION IfcDimensionsForSiUnit
(n : IfcSiUnitName )     : IfcDimensionalExponents;
  CASE n OF
    METRE          : RETURN (IfcDimensionalExponents
                             (1, 0, 0, 0, 0, 0, 0));
    SQUARE_METRE   : RETURN (IfcDimensionalExponents
                             (2, 0, 0, 0, 0, 0, 0));
    CUBIC_METRE    : RETURN (IfcDimensionalExponents
                             (3, 0, 0, 0, 0, 0, 0));
    GRAM           : RETURN (IfcDimensionalExponents
                             (0, 1, 0, 0, 0, 0, 0));
    SECOND         : RETURN (IfcDimensionalExponents
                             (0, 0, 1, 0, 0, 0, 0));
    AMPERE         : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 1, 0, 0, 0));
    KELVIN         : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 1, 0, 0));
    MOLE           : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 0, 1, 0));
    CANDELA        : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 0, 0, 1));
    RADIAN         : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 0, 0, 0));
    STERADIAN      : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 0, 0, 0));
    HERTZ          : RETURN (IfcDimensionalExponents
                             (0, 0, -1, 0, 0, 0, 0));
    NEWTON         : RETURN (IfcDimensionalExponents
                             (1, 1, -2, 0, 0, 0, 0));
    PASCAL         : RETURN (IfcDimensionalExponents
                             (-1, 1, -2, 0, 0, 0, 0));
    JOULE          : RETURN (IfcDimensionalExponents
                             (2, 1, -2, 0, 0, 0, 0));
    WATT           : RETURN (IfcDimensionalExponents
                             (2, 1, -3, 0, 0, 0, 0));
    COULOMB        : RETURN (IfcDimensionalExponents
                             (0, 0, 1, 1, 0, 0, 0));
    VOLT           : RETURN (IfcDimensionalExponents
                             (2, 1, -3, -1, 0, 0, 0));
    FARAD          : RETURN (IfcDimensionalExponents
                             (-2, -1, 4, 2, 0, 0, 0));
    OHM            : RETURN (IfcDimensionalExponents
                             (2, 1, -3, -2, 0, 0, 0));
    SIEMENS        : RETURN (IfcDimensionalExponents
                             (-2, -1, 3, 2, 0, 0, 0));
    WEBER          : RETURN (IfcDimensionalExponents
                             (2, 1, -2, -1, 0, 0, 0));
    TESLA          : RETURN (IfcDimensionalExponents
                             (0, 1, -2, -1, 0, 0, 0));
    HENRY          : RETURN (IfcDimensionalExponents
                             (2, 1, -2, -2, 0, 0, 0));
    DEGREE_CELSIUS : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 1, 0, 0));
    LUMEN          : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 0, 0, 1));
    LUX            : RETURN (IfcDimensionalExponents
                             (-2, 0, 0, 0, 0, 0, 1));
    BECQUEREL      : RETURN (IfcDimensionalExponents
                             (0, 0, -1, 0, 0, 0, 0));
    GRAY           : RETURN (IfcDimensionalExponents
                             (2, 0, -2, 0, 0, 0, 0));
    SIEVERT        : RETURN (IfcDimensionalExponents
                             (2, 0, -2, 0, 0, 0, 0));
    OTHERWISE      : RETURN (IfcDimensionalExponents
                             (0, 0, 0, 0, 0, 0, 0));
  END_CASE;
END_FUNCTION;

FUNCTION IfcDotProduct
  (Arg1, Arg2 : IfcDirection) 
    : REAL;
LOCAL
  Scalar : REAL;
  Vec1, Vec2 : IfcDirection;
  Ndim   : INTEGER;
END_LOCAL;

  IF NOT EXISTS (Arg1) OR NOT EXISTS (Arg2) THEN
    Scalar := ?;
  ELSE
    IF (Arg1.Dim <> Arg2.Dim) THEN
      Scalar := ?;
    ELSE
      BEGIN
        Vec1 := IfcNormalise(Arg1);
        Vec2 := IfcNormalise(Arg2);
        Ndim := Arg1.Dim;
        Scalar := 0.0;
        REPEAT i := 1 TO Ndim;
          Scalar := Scalar + Vec1.DirectionRatios[i]*Vec2.DirectionRatios[i];
        END_REPEAT;
      END;
    END_IF;
  END_IF;
  RETURN (Scalar);
END_FUNCTION;

FUNCTION IfcFirstProjAxis
  (ZAxis, Arg : IfcDirection) : IfcDirection;
LOCAL
  XAxis : IfcDirection;
  V     : IfcDirection;
  Z     : IfcDirection;
  XVec  : IfcVector;
END_LOCAL;

  IF (NOT EXISTS(ZAxis)) THEN
    RETURN (?) ;
  ELSE
    Z := IfcNormalise(ZAxis);
    IF NOT EXISTS(Arg) THEN
      IF (Z.DirectionRatios <> [1.0,0.0,0.0]) THEN
        V := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.0,0.0,0.0]);
      ELSE
        V := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,1.0,0.0]);
      END_IF;
    ELSE
      IF (Arg.Dim <> 3) THEN
        RETURN (?) ;
      END_IF;
      IF ((IfcCrossProduct(Arg,Z).Magnitude) = 0.0) THEN
        RETURN (?);
      ELSE
        V := IfcNormalise(Arg);
      END_IF;
    END_IF;
    XVec  := IfcScalarTimesVector(IfcDotProduct(V, Z), Z);
    XAxis := IfcVectorDifference(V, XVec).Orientation;
    XAxis := IfcNormalise(XAxis);
  END_IF;
  RETURN(XAxis);
END_FUNCTION;

FUNCTION IfcGetBasisSurface
(C : IfcCurveOnSurface) : SET[0:2] OF IfcSurface;

  LOCAL
    Surfs : SET[0:2] OF IfcSurface;
    N : INTEGER;
  END_LOCAL;

  Surfs := [];
  IF 'IFCGEOMETRYRESOURCE.IFCPCURVE' IN TYPEOF (C) THEN
    Surfs := [C\IfcPCurve.BasisSurface];
  ELSE
    IF 'IFCGEOMETRYRESOURCE.IFCSURFACECURVE' IN TYPEOF (C) THEN
      N := SIZEOF(C\IfcSurfaceCurve.AssociatedGeometry);
      REPEAT i := 1 TO N;
      Surfs := Surfs + IfcAssociatedSurface(C\IfcSurfaceCurve.AssociatedGeometry[i]);
      END_REPEAT;
    END_IF;
  END_IF;
  IF 'IFCGEOMETRYRESOURCE.IFCCOMPOSITECURVEONSURFACE' IN TYPEOF (C) THEN

    (* For an IfcCompositeCurveOnSurface the BasisSurface is the intersection of the BasisSurface of all the segments. *)

    N := SIZEOF(C\IfcCompositeCurve.Segments);
    Surfs := IfcGetBasisSurface(C\IfcCompositeCurve.Segments[1].ParentCurve);
    IF N > 1 THEN
      REPEAT i := 2 TO N;
        Surfs := Surfs * IfcGetBasisSurface(C\IfcCompositeCurve.Segments[1].ParentCurve);
      END_REPEAT;
    END_IF;
  END_IF;
  RETURN(Surfs);
END_FUNCTION;

FUNCTION IfcListToArray
(Lis : LIST [0:?] OF GENERIC : T;
       Low,U : INTEGER) : ARRAY OF GENERIC : T;
   LOCAL
     N   : INTEGER;
     Res : ARRAY [Low:U] OF GENERIC : T;
   END_LOCAL;
      
   N := SIZEOF(Lis);
   IF (N <> (U-Low +1)) THEN
     RETURN(?);
   ELSE
     Res := [Lis[1] : N];
     REPEAT i := 2 TO N;
       Res[Low+i-1] := Lis[i];
     END_REPEAT;
     RETURN(Res);
   END_IF;
END_FUNCTION;

FUNCTION IfcLoopHeadToTail
(ALoop : IfcEdgeLoop) : LOGICAL;
   LOCAL
     N : INTEGER;
     P : LOGICAL := TRUE;
   END_LOCAL;
     
     N := SIZEOF (ALoop.EdgeList);
     REPEAT i := 2 TO N;
       P := P AND (ALoop.EdgeList[i-1].EdgeEnd :=:
                   ALoop.EdgeList[i].EdgeStart);
     END_REPEAT;     
     RETURN (P);
END_FUNCTION;

FUNCTION IfcMakeArrayOfArray
(Lis : LIST[1:?] OF LIST [1:?] OF GENERIC : T;
 Low1, U1, Low2, U2 : INTEGER):
ARRAY [Low1:U1] OF ARRAY [Low2:U2] OF GENERIC : T;

  LOCAL
    Res : ARRAY[Low1:U1] OF ARRAY [Low2:U2] OF GENERIC : T;
  END_LOCAL;

  (* Check input dimensions for consistency *)
  IF (U1-Low1+1) <> SIZEOF(Lis) THEN
    RETURN (?);
  END_IF;
  IF (U2 - Low2 + 1 ) <> SIZEOF(Lis[1]) THEN
    RETURN (?) ;
  END_IF;

  (* Initialise Res with values from Lis[1] *)
  Res := [IfcListToArray(Lis[1], Low2, U2) : (U1-Low1 + 1)];
  REPEAT i := 2 TO HIINDEX(Lis);
    IF (U2-Low2+1) <> SIZEOF(Lis[i]) THEN
      RETURN (?);
    END_IF;
    Res[Low1+i-1] := IfcListToArray(Lis[i], Low2, U2);
  END_REPEAT;
  RETURN (Res);
END_FUNCTION;

FUNCTION IfcMlsTotalThickness
(LayerSet : IfcMaterialLayerSet) : IfcLengthMeasure;
  LOCAL
    Max : IfcLengthMeasure := LayerSet.MaterialLayers[1].LayerThickness;    
  END_LOCAL;

  IF SIZEOF(LayerSet.MaterialLayers) > 1 THEN
    REPEAT i := 2 TO HIINDEX(LayerSet.MaterialLayers);
       Max := Max + LayerSet.MaterialLayers[i].LayerThickness;
    END_REPEAT;
  END_IF;
  RETURN (Max);
END_FUNCTION;

FUNCTION IfcNormalise
  (Arg : IfcVectorOrDirection) 
    : IfcVectorOrDirection;
LOCAL
  Ndim : INTEGER;
  V    : IfcDirection
         := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.,0.]); 
  Vec  : IfcVector 
         := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector (
            IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.,0.]), 1.);
  Mag  : REAL;
  Result : IfcVectorOrDirection
         := V;
END_LOCAL;

  IF NOT EXISTS (Arg) THEN
    RETURN (?);
  ELSE
    IF 'IFCGEOMETRYRESOURCE.IFCVECTOR' IN TYPEOF(Arg) THEN
      BEGIN
        Ndim := Arg\IfcVector.Dim;
  V.DirectionRatios := Arg\IfcVector.Orientation.DirectionRatios;
        Vec.Magnitude := Arg\IfcVector.Magnitude;
  Vec.Orientation := V;
        IF Arg\IfcVector.Magnitude = 0.0 THEN
          RETURN(?);
        ELSE
          Vec.Magnitude := 1.0;
        END_IF;
      END;
    ELSE
      BEGIN
        Ndim := Arg\IfcDirection.Dim;
        V.DirectionRatios := Arg\IfcDirection.DirectionRatios;
      END;
    END_IF;

    Mag := 0.0;
      REPEAT i := 1 TO Ndim;
        Mag := Mag + V.DirectionRatios[i]*V.DirectionRatios[i];
      END_REPEAT;
    IF Mag > 0.0 THEN
      Mag := SQRT(Mag);
      REPEAT i := 1 TO Ndim;
        V.DirectionRatios[i] := V.DirectionRatios[i]/Mag;
      END_REPEAT;
      IF 'IFCGEOMETRYRESOURCE.IFCVECTOR' IN TYPEOF(arg) THEN
        Vec.Orientation := V;
        Result := Vec;
      ELSE
        Result := V;
      END_IF;
    ELSE
      RETURN(?);
    END_IF;
  END_IF;
  RETURN (Result);
END_FUNCTION;

FUNCTION IfcOrthogonalComplement
  (Vec : IfcDirection) 
    : IfcDirection;
LOCAL
  Result : IfcDirection ;
END_LOCAL;
  IF NOT EXISTS (Vec) OR (Vec.Dim <> 2) THEN
    RETURN(?);
  ELSE
    Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([-Vec.DirectionRatios[2], Vec.DirectionRatios[1]]);
    RETURN(Result);
  END_IF;
END_FUNCTION;

FUNCTION IfcPathHeadToTail
(APath : IfcPath) : LOGICAL;
   LOCAL
     N : INTEGER := 0;
     P : LOGICAL := UNKNOWN;
   END_LOCAL;
     N := SIZEOF (APath.EdgeList);
   REPEAT i := 2 TO N;
      P := P AND (APath.EdgeList[i-1].EdgeEnd :=:
                  APath.EdgeList[i].EdgeStart);
   END_REPEAT;
   RETURN (P);
END_FUNCTION;

FUNCTION IfcPointListDim
(PointList : IfcCartesianPointList)
           : IfcDimensionCount;

  IF ('IFCGEOMETRICMODELRESOURCE.IFCCARTESIANPOINTLIST2D' IN TYPEOF(PointList))
    THEN RETURN(2);
  END_IF;       
  IF ('IFCGEOMETRICMODELRESOURCE.IFCCARTESIANPOINTLIST3D' IN TYPEOF(PointList))
    THEN RETURN(3);
  END_IF;       
  RETURN (?);
END_FUNCTION;

FUNCTION IfcSameAxis2Placement
  (ap1, ap2 : IfcAxis2Placement; Epsilon : REAL)
  : LOGICAL ;

  RETURN (IfcSameDirection(ap1.P[1],ap2.P[1],Epsilon) AND
          IfcSameDirection(ap1.P[2],ap2.P[2],Epsilon) AND
          IfcSameCartesianPoint(ap1.Location,ap1.Location,Epsilon));
END_FUNCTION;

FUNCTION IfcSameCartesianPoint
  (cp1, cp2 : IfcCartesianPoint; Epsilon : REAL)
  : LOGICAL;
  
  LOCAL
    cp1x : REAL := cp1.Coordinates[1];
    cp1y : REAL := cp1.Coordinates[2];
    cp1z : REAL := 0;
    cp2x : REAL := cp2.Coordinates[1];
    cp2y : REAL := cp2.Coordinates[2];
    cp2z : REAL := 0;
  END_LOCAL;

  IF (SIZEOF(cp1.Coordinates) > 2) THEN
    cp1z := cp1.Coordinates[3];
  END_IF;

  IF (SIZEOF(cp2.Coordinates) > 2) THEN
    cp2z := cp2.Coordinates[3];
  END_IF;

  RETURN (IfcSameValue(cp1x,cp2x,Epsilon) AND
          IfcSameValue(cp1y,cp2y,Epsilon) AND
          IfcSameValue(cp1z,cp2z,Epsilon));
END_FUNCTION;

FUNCTION IfcSameDirection
  (dir1, dir2 : IfcDirection; Epsilon : REAL)
  : LOGICAL;
  LOCAL
    dir1x : REAL := dir1.DirectionRatios[1];
    dir1y : REAL := dir1.DirectionRatios[2];
    dir1z : REAL := 0;
    dir2x : REAL := dir2.DirectionRatios[1];
    dir2y : REAL := dir2.DirectionRatios[2];
    dir2z : REAL := 0;
  END_LOCAL;

  IF (SIZEOF(dir1.DirectionRatios) > 2) THEN
    dir1z := dir1.DirectionRatios[3];
  END_IF;

  IF (SIZEOF(dir2.DirectionRatios) > 2) THEN
    dir2z := dir2.DirectionRatios[3];
  END_IF;
  
  RETURN (IfcSameValue(dir1x,dir2x,Epsilon) AND
          IfcSameValue(dir1y,dir2y,Epsilon) AND
          IfcSameValue(dir1z,dir2z,Epsilon));

END_FUNCTION;

FUNCTION IfcSameValidPrecision
   (Epsilon1, Epsilon2 : REAL) : LOGICAL ;
  LOCAL
    ValidEps1, ValidEps2 : REAL;
    DefaultEps           : REAL := 0.000001;
    DerivationOfEps      : REAL := 1.001;
    UpperEps             : REAL := 1.0;
  END_LOCAL;
  
    ValidEps1 := NVL(Epsilon1, DefaultEps);
    ValidEps2 := NVL(Epsilon2, DefaultEps);
    RETURN ((0.0 < ValidEps1) AND (ValidEps1 <= (DerivationOfEps * ValidEps2)) AND 
            (ValidEps2 <= (DerivationOfEps * ValidEps1)) AND (ValidEps2 < UpperEps));

END_FUNCTION;

FUNCTION IfcSameValue
  (Value1, Value2 : REAL; Epsilon : REAL)
  : LOGICAL;
  LOCAL
    ValidEps    : REAL;
    DefaultEps  : REAL := 0.000001;
  END_LOCAL;
  
  ValidEps := NVL(Epsilon, DefaultEps);
  RETURN ((Value1 + ValidEps > Value2) AND (Value1 < Value2 + ValidEps));
END_FUNCTION;

FUNCTION IfcScalarTimesVector
  (Scalar : REAL; Vec : IfcVectorOrDirection)
    : IfcVector;
LOCAL
  V : IfcDirection;
  Mag : REAL;
  Result : IfcVector;
END_LOCAL;

  IF NOT EXISTS (Scalar) OR NOT EXISTS (Vec) THEN
    RETURN (?) ;
  ELSE
    IF 'IFCGEOMETRYRESOURCE.IFCVECTOR' IN TYPEOF (Vec) THEN
      V := Vec\IfcVector.Orientation;
      Mag := Scalar * Vec\IfcVector.Magnitude;
    ELSE
      V := Vec;
      Mag := Scalar;
    END_IF;
    IF (Mag < 0.0 ) THEN
      REPEAT i := 1 TO SIZEOF(V.DirectionRatios);
        V.DirectionRatios[i] := -V.DirectionRatios[i];
      END_REPEAT;
      Mag := -Mag;
    END_IF;
    Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(IfcNormalise(V), Mag);
  END_IF;
  RETURN (Result);
END_FUNCTION;

FUNCTION IfcSecondProjAxis
  (ZAxis, XAxis, Arg: IfcDirection) 
    : IfcDirection;
LOCAL
  YAxis : IfcVector;
  V     : IfcDirection;
  Temp  : IfcVector;
END_LOCAL;

  IF NOT EXISTS(Arg) THEN
    V := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,1.0,0.0]);
  ELSE
    V := Arg;
  END_IF;
  Temp  := IfcScalarTimesVector(IfcDotProduct(V, ZAxis), ZAxis);
  YAxis := IfcVectorDifference(V, Temp);
  Temp  := IfcScalarTimesVector(IfcDotProduct(V, XAxis), XAxis);
  YAxis := IfcVectorDifference(YAxis, Temp);
  YAxis := IfcNormalise(YAxis);
  RETURN(YAxis.Orientation);
END_FUNCTION;

FUNCTION IfcShapeRepresentationTypes
(RepType : IfcLabel; Items : SET OF IfcRepresentationItem) : LOGICAL;
    
    LOCAL
      Count : INTEGER := 0;
    END_LOCAL;

    CASE RepType OF 
    'Point' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCPOINT' IN TYPEOF(temp))));
      END;

    'PointCloud' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCCARTESIANPOINTLIST3D' IN TYPEOF(temp))));
      END;

    'Curve' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCCURVE' IN TYPEOF(temp))));
      END;

    'Curve2D' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCCURVE' IN TYPEOF(temp)) 
                 AND (temp\IfcCurve.Dim = 2)));
      END;

    'Curve3D' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCCURVE' IN TYPEOF(temp)) 
                 AND (temp\IfcCurve.Dim = 3)));
      END;

    'Surface' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCSURFACE' IN TYPEOF(temp))));
      END;

    'Surface2D' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCSURFACE' IN TYPEOF(temp)) 
                 AND (temp\IfcSurface.Dim = 2)));
      END;

    'Surface3D' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCSURFACE' IN TYPEOF(temp)) 
                 AND (temp\IfcSurface.Dim = 3)));
      END;

    'FillArea' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCANNOTATIONFILLAREA' IN TYPEOF(temp))));
      END;

    'Text' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCTEXTLITERAL' IN TYPEOF(temp))));
      END;

    'AdvancedSurface' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | 'IFCGEOMETRYRESOURCE.IFCBSPLINESURFACE' IN TYPEOF(temp)));
      END;

    'Annotation2D' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | (
                  SIZEOF(TYPEOF(temp) * [
                   'IFCGEOMETRYRESOURCE.IFCPOINT',
                   'IFCGEOMETRYRESOURCE.IFCCURVE',
                   'IFCGEOMETRICMODELRESOURCE.IFCGEOMETRICCURVESET',
                   'IFCPRESENTATIONDEFINITIONRESOURCE.IFCANNOTATIONFILLAREA',
                   'IFCPRESENTATIONDEFINITIONRESOURCE.IFCTEXTLITERAL']) = 1)
                 ));
      END;

    'GeometricSet' : 
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRICMODELRESOURCE.IFCGEOMETRICSET' IN TYPEOF(temp))
                 OR ('IFCGEOMETRYRESOURCE.IFCPOINT' IN TYPEOF(temp))
                 OR ('IFCGEOMETRYRESOURCE.IFCCURVE' IN TYPEOF(temp))
                 OR ('IFCGEOMETRYRESOURCE.IFCSURFACE' IN TYPEOF(temp))));
      END;

    'GeometricCurveSet' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRICMODELRESOURCE.IFCGEOMETRICCURVESET' IN TYPEOF(temp))
                 OR ('IFCGEOMETRICMODELRESOURCE.IFCGEOMETRICSET' IN TYPEOF(temp))
                 OR ('IFCGEOMETRYRESOURCE.IFCPOINT' IN TYPEOF(temp))
                 OR ('IFCGEOMETRYRESOURCE.IFCCURVE' IN TYPEOF(temp))));
         REPEAT i:=1 TO HIINDEX(Items);  
           IF ('IFCGEOMETRYRESOURCE.IFCGEOMETRICSET' IN TYPEOF(Items[i]))
           THEN
             IF (SIZEOF(QUERY(temp <* Items[i]\IfcGeometricSet.Elements | 'IFCGEOMETRYRESOURCE.IFCSURFACE' IN TYPEOF(temp))) > 0)
             THEN
               Count := Count - 1;
             END_IF;
           END_IF;
         END_REPEAT;
      END;

    'Tessellation' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | 'IFCGEOMETRICMODELRESOURCE.IFCTESSELLATEDITEM' IN TYPEOF(temp)));
      END;

    'SurfaceOrSolidModel' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | SIZEOF([
                   'IFCGEOMETRICMODELRESOURCE.IFCTESSELLATEDITEM',
                   'IFCGEOMETRICMODELRESOURCE.IFCSHELLBASEDSURFACEMODEL',
                   'IFCGEOMETRICMODELRESOURCE.IFCFACEBASEDSURFACEMODEL',
                   'IFCGEOMETRICMODELRESOURCE.IFCSOLIDMODEL'] * TYPEOF(temp)) >= 1
                 ));      
      END;

    'SurfaceModel' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | SIZEOF([
                   'IFCGEOMETRICMODELRESOURCE.IFCTESSELLATEDITEM',
                   'IFCGEOMETRICMODELRESOURCE.IFCSHELLBASEDSURFACEMODEL',
                   'IFCGEOMETRICMODELRESOURCE.IFCFACEBASEDSURFACEMODEL'] * TYPEOF(temp)) >= 1
                 ));      
      END;

    'SolidModel' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRICMODELRESOURCE.IFCSOLIDMODEL' IN TYPEOF(temp))));            
      END;

    'SweptSolid' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | (SIZEOF([
                   'IFCGEOMETRICMODELRESOURCE.IFCEXTRUDEDAREASOLID',
                   'IFCGEOMETRICMODELRESOURCE.IFCREVOLVEDAREASOLID'] * TYPEOF(temp)) >= 1
                   ) AND (SIZEOF([
                   'IFCGEOMETRICMODELRESOURCE.IFCEXTRUDEDAREASOLIDTAPERED',
                   'IFCGEOMETRICMODELRESOURCE.IFCREVOLVEDAREASOLIDTAPERED'] * TYPEOF(temp)) = 0
                   )
                 ));                             
      END;

    'AdvancedSweptSolid' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | SIZEOF([
                   'IFCGEOMETRICMODELRESOURCE.IFCSWEPTAREASOLID',
                   'IFCGEOMETRICMODELRESOURCE.IFCSWEPTDISKSOLID'] *  TYPEOF(temp)) >= 1
                 ));      
      END;

    'CSG' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | SIZEOF([
                   'IFCGEOMETRICMODELRESOURCE.IFCBOOLEANRESULT',
                   'IFCGEOMETRICMODELRESOURCE.IFCCSGPRIMITIVE3D',
                   'IFCGEOMETRICMODELRESOURCE.IFCCSGSOLID'] *  TYPEOF(temp)) >= 1
                 ));            
      END;

    'Clipping' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | SIZEOF([
                   'IFCGEOMETRICMODELRESOURCE.IFCCSGSOLID',
                   'IFCGEOMETRICMODELRESOURCE.IFCBOOLEANCLIPPINGRESULT'] * TYPEOF(temp)) >= 1
                 )); 
      END;

    'Brep' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRICMODELRESOURCE.IFCFACETEDBREP' IN TYPEOF(temp))));      
      END;

    'AdvancedBrep' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRICMODELRESOURCE.IFCMANIFOLDSOLIDBREP' IN TYPEOF(temp))));      
      END;

    'BoundingBox' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRICMODELRESOURCE.IFCBOUNDINGBOX' IN TYPEOF(temp))));
        IF (SIZEOF(Items) > 1)
        THEN
          Count := 0;
        END_IF;   
      END;

    'SectionedSpine' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRICMODELRESOURCE.IFCSECTIONEDSPINE' IN TYPEOF(temp))));      
      END;

    'LightSource' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCPRESENTATIONORGANIZATIONRESOURCE.IFCLIGHTSOURCE' IN TYPEOF(temp))));      
      END;

    'MappedRepresentation' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | ('IFCGEOMETRYRESOURCE.IFCMAPPEDITEM' IN TYPEOF(temp))));  
      END;

     OTHERWISE : RETURN(?);
    END_CASE;
    RETURN (Count = SIZEOF(Items));
END_FUNCTION;

FUNCTION IfcSurfaceWeightsPositive
( B: IfcRationalBSplineSurfaceWithKnots) 
: BOOLEAN; 

  LOCAL 
    Result : BOOLEAN := TRUE; 
    Weights : ARRAY [ 0 : B\IfcBSplineSurface.UUpper ] OF ARRAY [ 0 : B\IfcBSplineSurface.VUpper ] OF REAL := B.Weights; 
  END_LOCAL; 

  REPEAT i := 0 TO B\IfcBSplineSurface.UUpper; 
    REPEAT j := 0 TO B\IfcBSplineSurface.VUpper; 
      IF (Weights[i][j] <= 0.0) THEN 
        Result := FALSE; 
        RETURN(Result); 
      END_IF; 
    END_REPEAT; 
  END_REPEAT; 
  RETURN(Result);
END_FUNCTION;

FUNCTION IfcTaperedSweptAreaProfiles
(StartArea, EndArea : IfcProfileDef)
 : LOGICAL;

LOCAL
   Result : LOGICAL := FALSE;
END_LOCAL;
   
IF ('IFCPROFILERESOURCE.IFCPARAMETERIZEDPROFILEDEF' IN TYPEOF(StartArea)) THEN
   IF ('IFCPROFILERESOURCE.IFCDERIVEDPROFILEDEF' IN TYPEOF(EndArea)) THEN
      Result := (StartArea :=: EndArea\IfcDerivedProfileDef.ParentProfile);
   ELSE
      Result := (TYPEOF(StartArea) = TYPEOF(EndArea));
   END_IF;
ELSE
   IF ('IFCPROFILERESOURCE.IFCDERIVEDPROFILEDEF' IN TYPEOF(EndArea)) THEN
      Result := (StartArea :=: EndArea\IfcDerivedProfileDef.ParentProfile);
   ELSE
      Result := FALSE;
   END_IF;
END_IF;

RETURN(Result);
END_FUNCTION;

FUNCTION IfcTopologyRepresentationTypes
(RepType : IfcLabel; Items : SET OF IfcRepresentationItem) : LOGICAL;
    
    LOCAL
      Count : INTEGER := 0;
    END_LOCAL;

    CASE RepType OF 
    'Vertex' :
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | 
                  ('IFCTOPOLOGYRESOURCE.IFCVERTEX' IN TYPEOF(temp))));
      END;
    'Edge' : 
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | 
                  ('IFCTOPOLOGYRESOURCE.IFCEDGE' IN TYPEOF(temp))));
      END;
    'Path' : 
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | 
                  ('IFCTOPOLOGYRESOURCE.IFCPATH' IN TYPEOF(temp))));
      END;
    'Face' : 
      BEGIN 
        Count := SIZEOF(QUERY(temp <* Items | 
                  ('IFCTOPOLOGYRESOURCE.IFCFACE' IN TYPEOF(temp))));
      END;
    'Shell' :
      BEGIN
        Count := SIZEOF(QUERY(temp <* Items | 
                  ('IFCTOPOLOGYRESOURCE.IFCOPENSHELL' IN TYPEOF(temp))
                    OR ('IFCTOPOLOGYRESOURCE.IFCCLOSEDSHELL' IN TYPEOF(temp))));
      END;
    'Undefined': RETURN(TRUE);
     OTHERWISE : RETURN(?);
    END_CASE;
    RETURN (Count = SIZEOF(Items));
END_FUNCTION;

FUNCTION IfcUniqueDefinitionNames
(Relations : SET [1:?] OF IfcRelDefinesByProperties)
:LOGICAL;

LOCAL
  Definition : IfcPropertySetDefinitionSelect;
  DefinitionSet : IfcPropertySetDefinitionSet;
  Properties : SET OF IfcPropertySetDefinition := [];
  Result : LOGICAL;
END_LOCAL;

IF SIZEOF(Relations) = 0 THEN
  RETURN(TRUE);
END_IF;

REPEAT i:=1 TO HIINDEX(Relations);
  Definition := Relations[i].RelatingPropertyDefinition;
  IF 'IFCKERNEL.IFCPROPERTYSETDEFINITION' IN TYPEOF(Definition) THEN
    Properties := Properties + Definition;
  ELSE 
    IF 'IFCKERNEL.IFCPROPERTYSETDEFINITIONSET' IN TYPEOF(Definition) THEN
      BEGIN
        DefinitionSet := Definition;
        REPEAT j:= 1 TO HIINDEX(DefinitionSet);
          Properties := Properties + DefinitionSet[j];
        END_REPEAT;
      END;
  END_IF;
  END_IF;
END_REPEAT;

Result := IfcUniquePropertySetNames(Properties);
RETURN (Result);
END_FUNCTION;

FUNCTION IfcUniquePropertyName
(Properties : SET [1:?] OF IfcProperty)
 :LOGICAL;

 LOCAL
   Names : SET OF IfcIdentifier := [];
 END_LOCAL;

 REPEAT i:=1 TO HIINDEX(Properties);
   Names := Names + Properties[i].Name;
 END_REPEAT;

 RETURN (SIZEOF(Names) = SIZEOF(Properties));   
 
END_FUNCTION;

FUNCTION IfcUniquePropertySetNames
(Properties : SET [1:?] OF IfcPropertySetDefinition)
:LOGICAL;

LOCAL
  Names : SET OF IfcLabel := [];
  Unnamed : INTEGER := 0;
END_LOCAL;

REPEAT i:=1 TO HIINDEX(Properties);
  IF 'IFCKERNEL.IFCPROPERTYSET' IN TYPEOF(Properties[i]) THEN
    Names := Names + Properties[i]\IfcRoot.Name;
  ELSE
    Unnamed := Unnamed + 1;
  END_IF;
END_REPEAT;

RETURN (SIZEOF(Names) + Unnamed = SIZEOF(Properties));
END_FUNCTION;

FUNCTION IfcUniquePropertyTemplateNames
(Properties : SET [1:?] OF IfcPropertyTemplate)
:LOGICAL;

LOCAL
  Names : SET OF IfcLabel := [];
END_LOCAL;

REPEAT i:=1 TO HIINDEX(Properties);
  Names := Names + Properties[i].Name;
END_REPEAT;
RETURN (SIZEOF(Names) = SIZEOF(Properties));
END_FUNCTION;

FUNCTION IfcUniqueQuantityNames
(Properties : SET [1:?] OF IfcPhysicalQuantity)
:LOGICAL;

LOCAL
  Names : SET OF IfcLabel := [];
END_LOCAL;

REPEAT i:=1 TO HIINDEX(Properties);
  Names := Names + Properties[i].Name;
END_REPEAT;
RETURN (SIZEOF(Names) = SIZEOF(Properties));
END_FUNCTION;

FUNCTION IfcVectorDifference
  (Arg1, Arg2 : IfcVectorOrDirection)
    : IfcVector;
LOCAL
  Result : IfcVector;
  Res, Vec1, Vec2 : IfcDirection;
  Mag, Mag1, Mag2 : REAL;
  Ndim : INTEGER;
END_LOCAL;

  IF ((NOT EXISTS (Arg1)) OR (NOT EXISTS (Arg2))) OR (Arg1.Dim <> Arg2.Dim) THEN
    RETURN (?) ;
  ELSE
    BEGIN
      IF 'IFCGEOMETRYRESOURCE.IFCVECTOR' IN TYPEOF(Arg1) THEN
        Mag1 := Arg1\IfcVector.Magnitude;
        Vec1 := Arg1\IfcVector.Orientation;
      ELSE
        Mag1 := 1.0;
        Vec1 := Arg1;
      END_IF;
      IF 'IFCGEOMETRYRESOURCE.IFCVECTOR' IN TYPEOF(Arg2) THEN
        Mag2 := Arg2\IfcVector.Magnitude;
        Vec2 := Arg2\IfcVector.Orientation;
      ELSE
        Mag2 := 1.0;
        Vec2 := Arg2;
      END_IF;
      Vec1 := IfcNormalise (Vec1);
      Vec2 := IfcNormalise (Vec2);
      Ndim := SIZEOF(Vec1.DirectionRatios);
      Mag  := 0.0;
      Res  := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0:Ndim]);

      REPEAT i := 1 TO Ndim;
        Res.DirectionRatios[i] := Mag1*Vec1.DirectionRatios[i] - Mag2*Vec2.DirectionRatios[i];
        Mag := Mag + (Res.DirectionRatios[i]*Res.DirectionRatios[i]);
      END_REPEAT;

      IF (Mag > 0.0 ) THEN
        Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector( Res, SQRT(Mag));
      ELSE
        Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector( Vec1, 0.0);
      END_IF;
    END;
  END_IF;
  RETURN (Result);
END_FUNCTION;

FUNCTION IfcVectorSum
  (Arg1, Arg2 : IfcVectorOrDirection) 
    : IfcVector;
LOCAL
  Result : IfcVector;
  Res, Vec1, Vec2 : IfcDirection;
  Mag, Mag1, Mag2 : REAL;
  Ndim : INTEGER;
END_LOCAL;

  IF ((NOT EXISTS (Arg1)) OR (NOT EXISTS (Arg2))) OR (Arg1.Dim <> Arg2.Dim) THEN
    RETURN (?) ;
  ELSE
    BEGIN
      IF 'IFCGEOMETRYRESOURCE.IFCVECTOR' IN TYPEOF(Arg1) THEN
        Mag1 := Arg1\IfcVector.Magnitude;
        Vec1 := Arg1\IfcVector.Orientation;
      ELSE
        Mag1 := 1.0;
        Vec1 := Arg1;
      END_IF;
      IF 'IFCGEOMETRYRESOURCE.IFCVECTOR' IN TYPEOF(Arg2) THEN
        Mag2 := Arg2\IfcVector.Magnitude;
        Vec2 := Arg2\IfcVector.Orientation;
      ELSE
        Mag2 := 1.0;
        Vec2 := Arg2;
      END_IF;
      Vec1 := IfcNormalise (Vec1);
      Vec2 := IfcNormalise (Vec2);
      Ndim := SIZEOF(Vec1.DirectionRatios);
      Mag  := 0.0;
      Res  := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0:Ndim]);

      REPEAT i := 1 TO Ndim;
        Res.DirectionRatios[i] := Mag1*Vec1.DirectionRatios[i] + Mag2*Vec2.DirectionRatios[i];
        Mag := Mag + (Res.DirectionRatios[i]*Res.DirectionRatios[i]);
      END_REPEAT;

      IF (Mag > 0.0 ) THEN
        Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector( Res, SQRT(Mag));
      ELSE
        Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector( Vec1, 0.0);
      END_IF;
    END;
  END_IF;
  RETURN (Result);
END_FUNCTION;

RULE IfcRepresentationContextSameWCS FOR
  (IfcGeometricRepresentationContext);
LOCAL
  IsDifferent  : LOGICAL := FALSE;
END_LOCAL;
  IF (SIZEOF(IfcGeometricRepresentationContext) > 1)
  THEN
    REPEAT i := 2 TO HIINDEX(IfcGeometricRepresentationContext);
      IF (IfcGeometricRepresentationContext[1].WorldCoordinateSystem :<>: IfcGeometricRepresentationContext[i].WorldCoordinateSystem)
      THEN
        IsDifferent := (NOT(IfcSameValidPrecision(IfcGeometricRepresentationContext[1].Precision,
                                                  IfcGeometricRepresentationContext[i].Precision)))
                    OR (NOT(IfcSameAxis2Placement(IfcGeometricRepresentationContext[1].WorldCoordinateSystem,
                                                  IfcGeometricRepresentationContext[i].WorldCoordinateSystem,
                                                  IfcGeometricRepresentationContext[1].Precision)));
        IF (IsDifferent = TRUE) THEN
          ESCAPE;
        END_IF;
      END_IF;
    END_REPEAT;
  END_IF;
    WHERE
      WR1 : IsDifferent = FALSE;
END_RULE;

RULE IfcSingleProjectInstance FOR
  (IfcProject);

    WHERE
      WR1 : SIZEOF(IfcProject) <= 1;
END_RULE;

END_SCHEMA;
